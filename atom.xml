<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-06-11T22:56:43+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[socket.io Failed: Connection Closed]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/11/socket-dot-io-failed-connection-closed/"/>
    <updated>2015-06-11T22:35:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/11/socket-dot-io-failed-connection-closed</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天在使用新版的 Socket.io 的時候遇到了一個問題，當我使用 mulit-node 的模式時，在瀏覽器的控制台會出現下面這段錯誤，</p>

<pre><code>failed: Connection closed before receiving a handshake response
</code></pre>

<p>後來在 socket.io 的 github 也有看到人 po 出相同的 issue，之後看了 issue 下面的回應似乎是 Sticky Session 的問題，但是我
是在同一台機器上使用 cluster 模組 fork 出多個子進程，這樣 Sticky Session 是否有用還需要研究和測試。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安裝和使用 Ceph]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/10/install-ceph-and-use-ceph/"/>
    <updated>2015-06-10T22:10:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/10/install-ceph-and-use-ceph</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>環境</h3>

<p>ubuntu 14.04 LTS</p>

<h3>安裝</h3>

<pre><code>把 ceph 的 package 加入
wget -q -O- https://raw.github.com/ceph/ceph/master/keys/release.asc | sudo apt-key add -
echo deb http://ceph.com/debian/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list

更新 index 和安裝 ceph
sudo apt-get update &amp;&amp; sudo apt-get install ceph
</code></pre>

<h4>建立設定檔</h4>

<pre><code>vim /etc/ceph/ceph.conf

[osd]
    osd journal size = 1000
    filestore xattr use omap = true

[mon.a]

    host = {hostname}
    mon addr = {ip-address}:6789

[osd.0]
    host = {hostname}

[osd.1]
    host = {hostname}

[mds.a]
    host = {hostname}
</code></pre>

<h4>建立資料夾</h4>

<pre><code>sudo mkdir /var/lib/ceph/osd/ceph-0
sudo mkdir /var/lib/ceph/osd/ceph-1
sudo mkdir /var/lib/ceph/mon/ceph-a
sudo mkdir /var/lib/ceph/mds/ceph-a

cd /etc/ceph
sudo mkcephfs -a -c /etc/ceph/ceph.conf -k ceph.keyring
</code></pre>

<h3>使用</h3>

<p>根據官網的安裝方式很簡單，但是要啟動的時候遇到一些問題，下面列了幾個遇到的問題。</p>

<pre><code>Error ENOENT: osd.0 does not exist.  create it before updating the crush map
ceph osd create

ceph health
HEALTH_WARN 384 pgs incomplete; 384 pgs stuck inactive; 384 pgs stuck unclean
ceph pg dump_stuck stale &amp;&amp; ceph pg dump_stuck inactive &amp;&amp; ceph pg dump_stuck unclean

HEALTH_WARN 384 pgs incomplete; 384 pgs stale; 384 pgs stuck inactive; 384 pgs stuck unclean; 35 requests are blocked &gt; 32 sec

HEALTH_WARN 384 pgs incomplete; 384 pgs stuck inactive; 384 pgs stuck unclean; 35 requests are blocked &gt; 32 sec; mon.a low disk space
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quadtrees and Hilbert Curves]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/09/quadtrees-and-hilbert-curves/"/>
    <updated>2015-06-09T23:41:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/09/quadtrees-and-hilbert-curves</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://blog.notdot.net/2009/11/Damn-Cool-Algorithms-Spatial-indexing-with-Quadtrees-and-Hilbert-Curves">Damn Cool Algorithms: Spatial indexing with Quadtrees and Hilbert Curves</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Material Design Guide]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/08/material-design/"/>
    <updated>2015-06-08T21:57:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/08/material-design</id>
    <content type="html"><![CDATA[<!-- more -->


<p>[Google Material Design 原版]</p>

<p><a href="https://www.gitbook.com/book/wcc723/google_design_translate/details">Google Material Design 正體中文版</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2015 Day3]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/07/pycon-2015-day3/"/>
    <updated>2015-06-07T21:13:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/07/pycon-2015-day3</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Crossing Language Barriers with Julia, SciPy,IPython</h3>

<p>主要在講 Julia。</p>

<h3>Click Fraud Detection in the Mobile Advertising Using Python</h3>

<h4>Machine Learning</h4>

<p>Model Training</p>

<p>Historical Ad traffic</p>

<p>Bid Calculation</p>

<h4>Ad Network Quarity</h4>

<p>Google Ad traffic Quality Resource Center</p>

<p>Definition of invalid click activity</p>

<p>主要是偵測無效的點擊</p>

<h3>工程師沒告訴設計師的事 / Happy Together: Designer and Programmer</h3>

<p>主要介紹 diazo 的用法。</p>

<h3>Python與電子設計自動化：用愛與堅持實現專業</h3>

<p>講者介紹關於他自己開發的軟體和介紹一些演算法。</p>

<h3>Keynote Andy Terrel</h3>

<p>主要在講資料科學，講者是跟 <a href="http://continuum.io/">continuum</a> 有關的開發者，這場如果對資料科學沒興趣
應該會廳的很累。</p>

<h3>Machine learning in Finance using Python</h3>

<p>模式辨識</p>

<p>sentiment analysis</p>

<p>credit analytics</p>

<p>funancial forecasting</p>

<p>portfolio allocation</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2015 Day2]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/06/pycon-2015-day2/"/>
    <updated>2015-06-06T20:24:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/06/pycon-2015-day2</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Static Typeing in Python?</h3>

<p>這位講者是 Cython 的貢獻者</p>

<p>Gradual typing</p>

<h3>Global Interpreter Lock: Episode I - Break the Seal</h3>

<p>主要是要處理多 thread 和 多 process 會遇到的問題。</p>

<h4>GIL over Multi-Processor</h4>

<h4>multiprocessing : process pool</h4>

<p>further observations</p>

<p>GIL battle</p>

<h4>Release the GIL</h4>

<h4>Cooperative multitasking</h4>

<h3>Python &amp; LLVM</h3>

<p>讓 python 跑在 LLVM 上面</p>

<p>介紹 LLVM 的架構和歷史</p>

<p>LLVM 3.1 開始有支援 python</p>

<p><a href="www.llvmpy.org">llvmpy</a></p>

<p>只有支援 LLVM 3.3</p>

<p>換用 llvmlite</p>

<p><a href="http://continuum.io/">continuum</a></p>

<p><a href="http://lldb.llvm.org/">The LLDB Debugger</a></p>

<h3>Python 讓你的眼睛聽得見</h3>

<p>唇語辨識</p>

<p>McGurk 效應</p>

<p>使用 opencv 實作影像處理抓出</p>

<p>Haar features</p>

<p>Adaboost</p>

<h3>Theano : A Mathematical Expression Compiler</h3>

<p>Theano Goal</p>

<p>Theano 一些使用方法</p>

<h3>How to build a recommendation system with python</h3>

<p>講一些算法，好像去年也是類似的簡報?</p>

<h3>ceph 介紹</h3>

<p>一個分散式檔案系統。</p>

<h3>閃電秀</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2015 Day1]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/05/pycon-2015-day1/"/>
    <updated>2015-06-05T21:29:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/05/pycon-2015-day1</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Ecosystem threats to python</h3>

<p>比較 Python 和 Perl 的程式語言排行
最大的麻煩是從 python 2 到 python 3</p>

<p>Java node.js golang</p>

<p>為何使用 Java</p>

<p>為何使用 node.js</p>

<p>為何使用 Golang</p>

<p>為何使用 python</p>

<h3>..when thinking functionally with Python</h3>

<p>function language 如果寫過 Lisp 和 Haskell 就知道光是語法還不夠，</p>

<p>使用 Haskell 介紹 python 的函數式編程</p>

<p>Abstract Data Type</p>

<p>Type Class</p>

<p>Monad</p>

<p>Monadic</p>

<h3>快快樂樂成為 Coding Ninja (by pytest)</h3>

<p>如何撰寫測試</p>

<p>pytest 也可以測試網頁的功能</p>

<p>介紹三種類型的測試</p>

<h3>ZoneIDAProc: Instrumentation-based Dynamic Accessing</h3>

<p>IDAPro 逆向工程 動態追蹤</p>

<p>Linux FUSE</p>

<h3>Kenneth Reitz</h3>

<p>Python Software Fonudation</p>

<h3>教練，我想寫 Django app 給大家用</h3>

<p>介紹 Django</p>

<h3>Tagtoo Task Manager</h3>

<p>Luigi dataflow</p>

<p>他可以自動執行依賴的任務</p>

<p>使用 docker 建立 task 環境</p>

<p>django + webhook</p>

<h3>How to scale up your Web Apps/Sites written by Python?</h3>

<p>只有介紹蠻基本的網站架構和概念，如果要深入還需要用哪些軟體跟技術，</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Music Analysis With Machine Learning]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/04/music-machine-learning/"/>
    <updated>2015-06-04T23:33:41+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/04/music-machine-learning</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://cds.nyu.edu/mixing-music-machine-learning/">Mixing Music with Machine Learning</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[路徑演算法的一些介紹]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/03/routing-algorithm/"/>
    <updated>2015-06-03T22:26:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/03/routing-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://theory.stanford.edu/~amitp/GameProgramming/">GameProgramming</a> 裡面介紹了關於路徑演算法的概念和實現方法，以前在大學主要是學了下面幾種路徑演算法，不過
實際在一些領域有其他更有趣的演算法，上面的網頁主要是介紹在遊戲裡面的路徑演算法，可以拿來複習跟學習一些新的路徑演算法。</p>

<ol>
<li>A*</li>
<li>BFS</li>
<li>DFS</li>
<li>Dijkstra</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCM 3.0]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/02/gcm-3-dot-0/"/>
    <updated>2015-06-02T22:33:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/02/gcm-3-dot-0</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 Google IO 2015 大會上看到一個關於 GCM 3.0 的議程，後來在 <a href="https://www.youtube.com/watch?v=gJatfdattno&amp;feature=em-uploademail">youtube</a> 上面看到詳細的內容，
裡面提到關於支援 iOS 的事情， iOS 先取得 apns token 之後在跟 GCM Server 取得 token，這樣就可以
使用在 iOS 上面使用 GCM 的服務，詳細的用法可以在 <a href="https://developers.google.com/cloud-messaging/">Cloud Messaging</a> 找到。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Platform Success Model Explainer]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/01/platform-success-model-explainer/"/>
    <updated>2015-06-01T21:40:21+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/01/platform-success-model-explainer</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在看 <a href="https://www.youtube.com/watch?v=Ku3znd7JNIk">BlinkOn3: State Of Blink</a> 這篇演講的時候有一頁提到 APP 的時間模型，然後他特別用了另一篇文章來解釋模型，
在 Platform Success Model Explainer 這篇講解為何會分成下面四段時間。</p>

<h3>Loading</h3>

<h3>Finger down</h3>

<h3>Animation</h3>

<h3>Finger up</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lucene/Solr Revolution 2014]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/31/solr-lucene-revolution-2014/"/>
    <updated>2015-05-31T22:10:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/31/solr-lucene-revolution-2014</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://www.youtube.com/playlist?list=PLU6n9Voqu_1FM8nmVwiWWDRtsEjlPqhgP">Lucene/Solr Revolution 2014</a> 國外舉辦的關於 Solr 和 Lucene 的研討會。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SHL`s Emotion Analysis Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/30/shl%60s-emotion-analysis-algorithm/"/>
    <updated>2015-05-30T22:37:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/30/shl`s-emotion-analysis-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天在某個展覽會的 Intel 攤位看到讓我感興趣的東西，是關於使用類似穿戴式裝置偵測人類的情緒波動然後傳送到手機上面，
而其中有使用一個叫做 <code>SHL</code>s Emotion Analysis Algorithm` 的演算法，在 NLP 裡面原本就有關於情緒偵測的部分，此外也有
使用音訊偵測的方式，不過關於這個演算法在網路上並沒有其他相關的訊息可能還需要找找新的專利或是論文。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compact Language Detector 2]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/29/compact-language-detector-2/"/>
    <updated>2015-05-29T21:02:49+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/29/compact-language-detector-2</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://code.google.com/p/cld2/">Compact Language Detector 2</a> 是 chrome 用來偵測目前網頁的使用的語言，提示使用者可以翻譯成目前使用的語言，
從網站的說明看是用 <code>Naïve Bayesian classifier</code> ， 然後有三種資料集當作分類的分數。</p>

<h3>For Unicode scripts such as Greek and Thai that map one-to-one to detected languages, the script defines the result</h3>

<h3>For the 80,000+ character Han script and its CJK combination with Hiragana, Katakana, and Hangul scripts, single letters (unigrams) are scored</h3>

<h3>For all other scripts, sequences of four letters (quadgrams) are scored</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 URL 對網頁做分類]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/28/webpage-classification-using-url/"/>
    <updated>2015-05-28T21:10:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/28/webpage-classification-using-url</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://tarekamr.appspot.com/msc/presentation">URL-based Web-Page Classification</a> 使用 N-gram 資料做訓練集， LingPipe 做為 NLP 的函式庫，
LM Classifier 使用 Naive Bayes 做分類，對於未見過的字串使用 Laplace smoothing 補足。</p>

<p>也有提到下面幾種分類方法:</p>

<pre><code>1. Naive Bayes
2. SVM
3. Maximum Entropy
4. Online Learners
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery UK Conference]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/27/jquery-uk-2015/"/>
    <updated>2015-05-27T22:23:30+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/27/jquery-uk-2015</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://jqueryuk.com/2015/">jQuery UK Conference</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Growthhackers: 如何提升流量]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/26/growthhackers/"/>
    <updated>2015-05-26T21:48:01+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/26/growthhackers</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看到有人提起一個名詞叫 <a href="https://growthhackers.com">growth hackers</a>，聽別人解釋是使用技術結合行銷提高產品的流量，所以是將行銷結合工程師的存在。</p>

<p><a href="http://en.wikipedia.org/wiki/Growth_hacking">wiki</a> 有對 <a href="https://growthhackers.com">growth hackers</a> 進行定義，其中有提到一些相關的技術例如下面所提到的:</p>

<ol>
<li>A/B testing</li>
<li>SEO</li>
<li>網站分析</li>
</ol>


<p>另外也提到這是 Startup 所需要的職位，<code>growth first, budgets second</code> 以流量成長為優先最為考量，這很像
約耳提過的 Amazon 模式，以快速成長為優先，藉由有別於傳統的行銷策略，使用類似上面提到的技術提高流量留住客戶。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Waifu2x: A Image Scale Website]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/25/waifu2x/"/>
    <updated>2015-05-25T23:35:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/25/waifu2x</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/nagadomi/waifu2x">waifu2x</a> 一個使用 <code>Deep Convolutional Neural Networks</code> 圖片網站，它可以讓圖片在放大的時候減少失真
，裡面的原始碼已經有放在 Github 上面了，不過安裝需要使用 CUDA 也就是機器需要 Nivda 的 GPU 支援。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MDN 的 Javascript 教學]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/24/mozilla-javascript/"/>
    <updated>2015-05-24T20:09:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/24/mozilla-javascript</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 MDN 上面看到不錯的 Javascript 教學 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript Tutorials</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ILSVRC2014]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/23/ilsvrc2014/"/>
    <updated>2015-05-23T23:12:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/23/ilsvrc2014</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.image-net.org/challenges/LSVRC/2014/">ILSVRC2014</a></p>
]]></content>
  </entry>
  
</feed>
