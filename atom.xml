<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-04-21T22:03:18+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android Remote Debug]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/21/android-remote-debug/"/>
    <updated>2015-04-21T21:33:13+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/21/android-remote-debug</id>
    <content type="html"><![CDATA[<hr />

<!-- more -->


<p>最近在 Android 上開發 <code>Hybrid app</code> 遇到一些問題，裡面有些頁面在設計的時候使用了很多外部的套件導致 layout 跟預計的
相差很大，並且撰寫 javacript 的工程師使用的一些語法在桌面瀏覽器是可以但是在 webview 內是不行的，這樣產生了不少問題
並且很難除錯，後來參考了一篇 <a href="https://developer.chrome.com/devtools/docs/remote-debugging">Remote Debugging on Android with Chrome</a>，讓開發者可以藉由 usb 和 chrome 遠端除錯。</p>

<h3>開啟 chrome 遠端除錯的功能</h3>

<pre><code>chrome://inspect/
</code></pre>

<h3>在 webview 增加下列程式碼</h3>

<pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) {
    WebView.setWebContentsDebuggingEnabled(true);   
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Webview 的 坑]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/20/android-webview/"/>
    <updated>2015-04-20T22:59:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/20/android-webview</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>解決 Android ViewPort 失效的問題</h3>

<pre><code>webView.getSettings().setLoadWithOverviewMode( true );
webView.getSettings().setUseWideViewPort( true );
</code></pre>

<h3>samsung 的手機頁面中有 Canvas 使用 touch 事件會有 bug</h3>

<pre><code>z-index 的 BUG。
</code></pre>

<h3>windows.outterWidth 為零的問題</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mozilla SSL Configuration Generator]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/19/mozilla-ssl-configuration-generator/"/>
    <updated>2015-04-19T21:17:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/19/mozilla-ssl-configuration-generator</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla SSL Configuration Generator</a> Mozilla 提供的簡易 SSL 產生器。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mersenne Twister Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/18/mersenne-twister/"/>
    <updated>2015-04-18T23:09:13+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/18/mersenne-twister</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Mersenne Twister 在 PHP 中作為 Pseudorandom number generator。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Merge-tool]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/17/git-merge-tool/"/>
    <updated>2015-04-17T22:27:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/17/git-merge-tool</id>
    <content type="html"><![CDATA[<!-- more -->


<p>當 git merge 發生衝突的時候可以使用 git merge-tool 呼叫外部的工具來處理發生衝突的部分，下面
是有用到一些工具。</p>

<ol>
<li>KDiff3</li>
<li>P4Merge</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何使用 Groupcache]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/16/groupcache/"/>
    <updated>2015-04-16T22:31:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/16/groupcache</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Groupcache 與 memcached 的差別</h3>

<p>同樣都是由相同作者開發的，只是 memcached 是使用 C++ 而 <a href="https://github.com/golang/groupcache">groupcache</a> 是使用 golang 開發的，
然後 memcached 是作為獨立一個程式運作的，但是 <a href="https://github.com/golang/groupcache">groupcache</a> 本身就是 <code>client library</code> 和 <code>server</code>，
使用起來反而比較像 sqlite。</p>

<h3>如何使用 Groupcache</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phalcon Dynamic Update DataBase]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/15/phalcon-dynamicupdate/"/>
    <updated>2015-04-15T23:12:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/15/phalcon-dynamicupdate</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Phalcon 在更新資料庫的資料時會將所有欄位的資料都更新上去無論是有沒有修改過 Model 的欄位，這樣在某些情況下會有問題，
如果使用 oracle 的 clob 欄位時必須先取得 stream 的內容後在更新，不然會發現資料內容都變成 resource id。</p>

<p>不過後來發現 Phalcon 的 <a href="http://docs.phalconphp.com/en/latest/reference/models.html#dynamic-update">Dynamic Update</a>  功能可以避免上述的問題，使用這個功能後 phalcon 在產生 sql query 時只會更新
 Model 有修改的部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx SSL 的相關設定]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/14/nginx-ssl/"/>
    <updated>2015-04-14T03:23:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/14/nginx-ssl</id>
    <content type="html"><![CDATA[<!-- more -->


<p>紀錄從 Nginx 看到跟 SSL 相關的設定和概念，提高 Nginx 本身透過 SSL 通訊的安全性。</p>

<p>之前在看同事設定 Apache SSL 功能時只有看到密鑰的檔案並沒有另外多加設定，後來自己在設定 nginx 的 SSL 功能時發現還有
其它需要設定的選項: <code>ssl_protocols</code> 和 <code>ssl_ciphers</code>。</p>

<h4>ssl_protocols</h4>

<p>這個設定主要是為了避免伺服器使用有問題的加密協定，目前加密協定主要有 SSL 和 TLS，SSL 本身安全性已經有問題，所以建議使用 TLS，
之前有看到一些瀏覽器廠商將 SSL 3.0 拿掉就是為了安全性問題。</p>

<h3>ssl_ciphers</h3>

<p>這個是用來設定 SSL 通訊所使用的加密演算法，設定內容可以參考下面的工具和網站。</p>

<ol>
<li><a href="https://cipherli.st/">Cipherli.st Strong Ciphers for Apache, nginx and Lighttpd</a></li>
<li><a href="https://github.com/jvehent/cipherscan">cipherscan</a></li>
</ol>


<p>另外網路上有個檢測工具可以看看你自己的網站在 SSL 加密上獲得多少分數 <a href="https://www.ssllabs.com/ssltest/index.html">Qualys Labs</a>。</p>

<h4>參考</h4>

<ol>
<li><a href="http://qiita.com/kuni-nakaji/items/5118b23bf2ea44fed96e">httpsだからというだけで安全？調べたら怖くなってきたSSLの話!？</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Php Date 時間處理筆記]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/13/php-date/"/>
    <updated>2015-04-13T00:53:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/13/php-date</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>取得目前的日期</h3>

<pre><code>$now = DateTime():
$now-&gt;format('r');

$now1 = getdate();
print "{$now1['hours']}:{$now1['minutes']}:{$now1['seconds']}\n";


$now2 = localtime();
print "$now2[2]:$now2[1]:$now2[0]";
</code></pre>

<h3>取得當月的第一天</h3>

<pre><code>$start = date("Y-m-1"); 
$date = new DateTime($start);
</code></pre>

<h3>往前推1個月</h3>

<pre><code>$result = $date-&gt;modify( '-1 month' );
</code></pre>

<h3>當月的最後一天</h3>

<pre><code>$result = $date-&gt;modify( '+2 month' );
$result = $date-&gt;modify( '-1 day' );
</code></pre>

<h3>取得一段時間範圍</h3>

<pre><code>DateInterval();
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Erdős–Rényi Model and Random Graph]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/12/random-graph/"/>
    <updated>2015-04-12T22:38:14+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/12/random-graph</id>
    <content type="html"><![CDATA[<!-- more -->


<p>使用 <a href="http://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93R%C3%A9nyi_model">Erdős–Rényi Model</a> 產生 <a href="http://en.wikipedia.org/wiki/Random_graph">Random graph</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AVLinux : 影音處理用的 Linux 發行版本]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/11/av-linux/"/>
    <updated>2015-04-11T23:44:57+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/11/av-linux</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.bandshed.net/AVLinux.html">AVLinux</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Filter-branch]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/10/filter-branch-git/"/>
    <updated>2015-04-10T23:06:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/10/filter-branch-git</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>git filter-branch‵ 能夠改寫整個專案的歷史，會用到這個是因為以前有人在專案裡面將很多
二進位檔案加入追蹤導致專案過於肥大，另外裡面有些檔案帶有敏感資訊所以必須連 commit 裡面的
訊息全部去除，這時就用到</code>git filter-branch‵ 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fuzzy Hashing and Ssdeep]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/09/fuzzy-hashing/"/>
    <updated>2015-04-09T22:03:11+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/09/fuzzy-hashing</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究 webshell 的時候，有提到關於如何偵測 webshell 的方法，其中有介紹一種叫 <code>Fuzzy Hashing</code>
的演算法，一般像 md5 的 hash 方法只要文件有一些變化計算出來的數值就有很大的改變，這樣不利於檢查兩
份文件的相似度，所以才有 <code>Fuzzy Hashing</code>。</p>

<p>而 ssdeep 則是實現 <code>Fuzzy Hashing</code> 的程式，所以可以直接拿來測試手上的加殼程式，來看看效果如何。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modern Web Conf 2014]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/08/modernwebconf-2014/"/>
    <updated>2015-04-08T23:25:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/08/modernwebconf-2014</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://modernwebconf.com/index.html">modern web conf 2014</a> 裡面有一些值得一看的 slide。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis 3.0 正式版本釋出]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/07/redis-3-dot-0/"/>
    <updated>2015-04-07T23:05:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/07/redis-3-dot-0</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Redis 3.0 正式版本已經釋出，可以測試 cluster 功能和 Redis 本身的性能 。</p>

<p><a href="https://raw.githubusercontent.com/antirez/redis/3.0/00-RELEASENOTES">Redis 3.0 release notes</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSQ: Message Server]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/06/nsq/"/>
    <updated>2015-04-06T22:33:54+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/06/nsq</id>
    <content type="html"><![CDATA[<!-- more -->


<p>紀錄之前看過的一篇 slide <a href="http://www.slideshare.net/guregu/nsqcentric-architecture-gocon-autumn-2014">NSQ-Centric Architecture (GoCon Autumn 2014)</a> ，後端是用 <a href="https://github.com/bitly/nsq">nsq</a> 這個由 golang 撰寫
的 <code>message server</code> ，前端使用 react 這個 framework 建立一個聊天 APP</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP : Pthreads Library]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/05/pthreads/"/>
    <updated>2015-04-05T21:28:02+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/05/pthreads</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="https://computing.llnl.gov/tutorials/pthreads/">pthreads</a></li>
<li><a href="https://github.com/krakjoe/pthreads">php pthreads</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TLS 的效能跟問題]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/04/tls-problem/"/>
    <updated>2015-04-04T23:17:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/04/tls-problem</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://istlsfastyet.com/">TLS has exactly one performance problem: it is not used widely enough</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook 怎麼擴展 Memcached]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/03/scaling-memcache-at-facebook/"/>
    <updated>2015-04-03T23:01:02+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/03/scaling-memcache-at-facebook</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://www.usenix.org/conference/nsdi13/technical-sessions/presentation/nishtala">Scaling Memcache at Facebook</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phalcon 設定讀寫分離功能]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/02/phalcon-master-slave/"/>
    <updated>2015-04-02T23:29:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/02/phalcon-master-slave</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近需要建立 phalcon 連結 mysql 的專案，然後手上有一個 mysql cluster 的設備，所以
想要在 phalcon 設定讀寫分離的功能，讀跟寫是連接不同的資料庫位置，最後在 phalcon 的文檔
<a href="https://phalcon-php-framework-documentation.readthedocs.org/en/latest/reference/models.html?highlight=selectReadConnection#setting-multiple-databases">setting-multiple-databases</a> 有說明怎麼設定。</p>
]]></content>
  </entry>
  
</feed>
