<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-04-06T16:57:03+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Nodejs Flow Control]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/06/nodejs-flow-control/"/>
    <updated>2014-04-06T16:22:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/06/nodejs-flow-control</id>
    <content type="html"><![CDATA[<p>記錄一下流程控制相關的模組。<br/>
1. <a href="https://github.com/creationix/step">step</a> <br/>
2. <a href="https://github.com/kriskowal/q">Q</a><br/>
3. <a href="https://github.com/kriszyp/node-promise">promise</a></p>

<!-- more -->


<p>由於nodejs是非同步的，所以流程控制是很重要的一部分，一般撰寫程式時會等待其他區塊的回傳參數，但是由於非同步的關係所以需要以嵌套的方式
避免所需要的參數尚未回傳就執行下一步的函式導致未知的結果，如此一來就會出現多重嵌套的情形導致程式以後變的難以除錯並且看起來也很醜，所以
有些人提供一些第三方的模組處理流程控制的部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs 生產環境]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/05/nodejs-sheng-chan-huan-jing/"/>
    <updated>2014-04-05T21:55:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/05/nodejs-sheng-chan-huan-jing</id>
    <content type="html"><![CDATA[<p>記錄一下nodejs生產環境需要注意的事項。</p>

<!-- more -->


<ol>
<li>nodejs是非同步但是也有一些同步的API(例如讀取檔案)會影響nodejs的運行，要小心使用那些API。</li>
<li>nodejs底層是使用V8引擎可以藉由調整V8的GC策略提升效能。</li>
<li>nodejs建立socket時增加可以建立的socket的數量。</li>
<li>nodejs 有些使用模組是編譯過的，有些是純js撰寫成的，使用二進位編譯後的模組。</li>
<li>在nodejs中事件流的處理會影響程式效能，目前有些用來處理事件流的模組慎選並去使用。</li>
<li>nodejs的session通常使用express處理，預設存放在記憶體內，建議替換到redis或是memcache的資料庫存放。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordNet]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/03/wordnet/"/>
    <updated>2014-04-03T21:38:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/03/wordnet</id>
    <content type="html"><![CDATA[<p>在使用NLTK作詞性分析時，發現可以找出英文同義詞的功能，他是使用<a href="wordnet.princeton.edu">wordnet</a>實現的，wordnet在維基上說是由普林斯頓大學建立的英文字典，
其中有著同義詞集合並且描述之間的關係並且可以自由下載使用，雖然這個只支援英文不過國內似乎有支援中文的專案之後可以下載研究一下。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Projects That Power GitHub]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/02/projects-that-power-github/"/>
    <updated>2014-04-02T21:25:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/02/projects-that-power-github</id>
    <content type="html"><![CDATA[<p>GitHub放出他們自身使用的開源專案，詳細的內容可以在這裡找到<a href="https://github.com/showcases/projects-that-power-github">projects-that-power-github</a>，
裡面有些工作上或是自身有在研究的專案，順便寫一下使用自己在哪些方面。</p>

<!-- more -->


<ol>
<li><a href="https://github.com/defunkt/jquery-pjax">jquery-pjax</a> pushstate + ajax ，之前用來實現網頁無須刷新更新頁面的功能。</li>
<li><a href="https://github.com/elasticsearch/elasticsearch">elasticsearch</a> 開源的搜尋引擎不過還是solr比較常用。</li>
<li><a href="https://github.com/rails/rails">rails</a> 作為web的開發框架用起來還沒有比PHP熟悉。</li>
<li><a href="https://github.com/antirez/redis">redis</a> 工作上使用場景比memcache還多的快取資料庫，除了用在存放一些列表和記數類的資料還有使用他的keyspace和pubsub功能。</li>
<li><a href="https://github.com/jekyll/jekyll">jekyll</a> 目前用來寫blog。</li>
<li><a href="https://github.com/github/hubot">hubot</a> 一個Bot的專案，可以使用coffee script擴充功能。</li>
<li><a href="https://github.com/mbostock/d3">d3</a> 作為前端顯示圖表的函式庫，跟其他相關函式庫混用還蠻方便的。</li>
<li><a href="https://github.com/zeroclipboard/zeroclipboard">zeroclipboard</a> 有時候讓使用者能夠直接複製網頁的內容到剪貼板上</li>
<li><a href="https://github.com/puppetlabs/puppet">puppet</a> 目前正在學習如何用在管理和建置環境。
10 <a href="https://github.com/bower/bower">bower</a> 用來管理網站套件。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[docker.io 和 Vagrant]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/01/docker-dot-io/"/>
    <updated>2014-04-01T21:18:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/01/docker-dot-io</id>
    <content type="html"><![CDATA[<p><a href="https://www.docker.io">docker.io</a> 是一種 <a href="http://en.wikipedia.org/wiki/LXC">LXC (LinuX Containers)</a>，是使用go語言撰寫的，似乎可以建立一個獨立虛擬環境，
不過只能在linux下運行，然後上次osdc有人介紹Vagrant，這兩種工具似乎是為了達成相同目的都可以拿來
建立環境。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/30/puppet/"/>
    <updated>2014-03-30T09:35:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/30/puppet</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/puppetlabs/puppet">puppet</a>是用來一套管理工具，官網上是說可以支援 Linux, Unix 和 Windows，使用上可以參考官網的範例，也有人放出自己寫的模組
供其他人參考使用，日後如果需要給小組成員建立開發環境可以使用puppet部署。</p>

<p><a href="http://www.puppetcookbook.com/">puppetcookbook</a><br/>
<a href="https://github.com/jordansissel/puppet-examples">puppet-examples</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CAP理論]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/29/capli-lun/"/>
    <updated>2014-03-29T20:14:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/29/capli-lun</id>
    <content type="html"><![CDATA[<p>CAP理論是關於設計一個分散式計算系統需要考慮的問題。</p>

<!-- more -->


<p>CAP理論可以分為以下三點； <br/>
1. Consistency 節點之間資料的一致性<br/>
2. Availability 如果有節點故障還是可以保證服務是可用的。<br/>
3. Partition tolerance 一個系統因為通信出現問題時造成系統分成多個群體，因而影響系統本身的運行。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modernizr]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/29/modernizr/"/>
    <updated>2014-03-29T20:14:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/29/modernizr</id>
    <content type="html"><![CDATA[<p><a href="http://modernizr.com/">Modernizr</a> 是用來檢測閱覽器是否支援HTML5和CSS 3功能的函式庫，以前通常是偵測閱覽器的版本來決定不過有可能會出問題
，如果直接判斷這個功能能不能使用直接使用一次就不會有例外狀況發生。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PageRank, EdgeRank, PeopleRank]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/26/pagerank-edgerank-peoplerank/"/>
    <updated>2014-03-26T21:22:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/26/pagerank-edgerank-peoplerank</id>
    <content type="html"><![CDATA[<ol>
<li>PageRank</li>
<li>EdgeRank</li>
<li>PeopleRank</li>
</ol>


<!-- more -->


<h1>PagRank</h1>

<p>google對網頁評分的演算法，用來算出網頁的權重，作為網頁排序的要素之一。<br/>
<a href="http://ilpubs.stanford.edu:8090/422/">http://ilpubs.stanford.edu:8090/422/</a></p>

<h1>EdgeRank</h1>

<p>Facebook用來計算要顯示哪些動態給使用者。<br/>
<a href="http://edgerank.net/">http://edgerank.net/</a></p>

<h1>PeopleRank</h1>

<p>類似PageRank，不過是用來測量使用者產出內容的價值。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon Dynamo]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/25/amazon-dynamo/"/>
    <updated>2014-03-25T21:40:25+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/25/amazon-dynamo</id>
    <content type="html"><![CDATA[<p>amazon的 Dynamo架構值得參考，目前常看到的scale機制分成master-slave和Dynamo兩種架構，不過通常master-slave需要
類似zookeeper的機制另外監控，Dynamo卻不需要，必須比較一下兩者之間的差別。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[exports和module.export區別]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/24/exportshe-module-dot-exportqu-bie/"/>
    <updated>2014-03-24T21:19:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/24/exportshe-module-dot-exportqu-bie</id>
    <content type="html"><![CDATA[<p>exports和module.export 在一些library常看到這兩種東西，有些情況下是相同的，
去查網路都有推薦<a href="http://www.hacksparrow.com/node-js-exports-vs-module-exports.html">Node.js Module – exports vs module.exports</a>這篇文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SenseiDB]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/23/senseidb/"/>
    <updated>2014-03-23T21:46:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/23/senseidb</id>
    <content type="html"><![CDATA[<p><a href="http://senseidb.com">sensei</a>是以前在學習hadoop時找到的，是一款跟hadoop集成的搜尋系統，第一次看到是在兩年前，最近在VM發現當時的建立的痕跡，
特此紀錄一下以便日後研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloud9 Ide]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/23/cloud9-ide/"/>
    <updated>2014-03-23T21:41:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/23/cloud9-ide</id>
    <content type="html"><![CDATA[<p><a href="https://c9.io/">cloud9</a>是一款線上整合開發環境一年以前有使用過，當時使用上覺得反應速度不太好就沒有在使用了，
不過可以學一下其中的架構，重要的是有持續維護，希望可以持續下去未來能夠使用閱覽器開發多種語言。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node-gyp Build Fails on NFS Because of Flock]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/23/node-gyp-build-fails-on-nfs-because-of-flock/"/>
    <updated>2014-03-23T00:00:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/23/node-gyp-build-fails-on-nfs-because-of-flock</id>
    <content type="html"><![CDATA[<p>在下載一些使用node-gyp編譯的模組會遇到問題，後來發現在一些檔案系統會出問題，可以在這邊<a href="https://github.com/TooTallNate/node-gyp/issues/147">issue</a>找到解答。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Vundle]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/22/vim-vundle/"/>
    <updated>2014-03-22T09:58:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/22/vim-vundle</id>
    <content type="html"><![CDATA[<p>之前安裝Vim的plugin都是去<a href="http://vim-scripts.org/vim/scripts.html">scripts</a>下載然後手動安裝，但是如此設定檔變的複雜後
一來常會遇到沒有刪除乾淨的plugine。<br/>
使用Vundle管理vim，安裝上跟刪除只要透過vundle就很方便也能保持設定檔簡潔，似乎能
搜尋plugin，也能讓vundle去指定連結下載，目前正在試用之後可以上載到github上備份設定檔。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql-udf]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/21/mysql-udf/"/>
    <updated>2014-03-21T23:42:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/21/mysql-udf</id>
    <content type="html"><![CDATA[<p>mysql-udf 是可以讓開發者擴充mysql的功能，之前用來同步solr之間的資料，原本的程式架構太過於混亂
所以無法從程式碼層級同步Solr的資料，因此利用trigger 綁定關於資料庫的操作，如果有新增刪除修改就利用
solr的api更新資料。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Mahout]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/21/apache-mahout/"/>
    <updated>2014-03-21T23:42:37+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/21/apache-mahout</id>
    <content type="html"><![CDATA[<p>似乎跟機器學習有關的專案，內建多種演算法，之前有用過電影評論的資料測試mahout的功能
之後等有空就來實現一些現實生活的例子。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spa (Single-page Application)]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/20/spa-single-page-application/"/>
    <updated>2014-03-20T21:51:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/20/spa-single-page-application</id>
    <content type="html"><![CDATA[<p>在一個網頁上呈現出如同桌面應用程式的操作經驗，MVVM是常與SPA一起提到的設計模式，目前我本身使用Knockout(一種MVVM的javascript framework)實現
SPA還蠻方便的，可以透過model更新資料和DOM這比起單獨使用jQuery到處綁定事件來的好管理。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Socketio 和 engine.io的差別]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/19/socketio-he-engine-dot-iode-chai-bie/"/>
    <updated>2014-03-19T22:42:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/19/socketio-he-engine-dot-iode-chai-bie</id>
    <content type="html"><![CDATA[<p>都是由相同的作者維護，目前在專案上比較常用socket.io，socket.io底層使用engine.io實現不同的通訊方式，</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scrapy Example Code]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/19/scrapy-example-code/"/>
    <updated>2014-03-19T22:06:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/19/scrapy-example-code</id>
    <content type="html"><![CDATA[<p>在scrapy官網上的scrapy範例。
<a href="http://snipplr.com/all/tags/scrapy/">http://snipplr.com/all/tags/scrapy/</a></p>
]]></content>
  </entry>
  
</feed>
