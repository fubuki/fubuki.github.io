<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-06-01T21:47:37+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[六月書單]]></title>
    <link href="http://fubuki.github.io/blog/2014/06/01/liu-yue-shu-dan/"/>
    <updated>2014-06-01T21:34:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/06/01/liu-yue-shu-dan</id>
    <content type="html"><![CDATA[<p>記錄六月要看完的書單。</p>

<!-- more -->


<ol>
<li>MySQL技術內幕︰InnoDB存儲引擎（第2版）</li>
<li>MySQL技術內幕︰ SQL編程</li>
<li>數學之美</li>
<li>資料之美</li>
<li>Mastering Node.js</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NAVER Line Protocol]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/31/naver-line-protocol/"/>
    <updated>2014-05-31T22:38:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/31/naver-line-protocol</id>
    <content type="html"><![CDATA[<p>研究關於Line 的通訊架構。</p>

<!-- more -->


<p>目前可以知道Line 有使用 SPDY ，不過<a href="http://blogs.ixiacom.com/ixia-blog/emulating-the-line-application/">emulating-the-line-application</a>有提到也有使用thrift用來控制訊息的部分，
另外透過<a href="https://github.com/mvirkkunen/purple-line">purple-line</a>這個專案也能稍微了解Line的應用程式與伺服器之間互相通訊的過程，裡面也有一份<a href="http://altrepo.eu/git/line-protocol.git/">line-protocol</a>的
規格表可以做為日後開發類似功能的參考。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MQTT Bridge]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/30/mqtt-bridge/"/>
    <updated>2014-05-30T20:57:07+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/30/mqtt-bridge</id>
    <content type="html"><![CDATA[<p>關於mqtt bridge的功能。</p>

<!-- more -->


<p>日前在研究各種 <code>MQTT Broker</code> 的方案，市面上有許多方案可以使用，原本是使用<a href="https://github.com/mcollina/mosca">mosca</a>作為server但是在處理離線訊息和擴展性上
有些問題，此外讓手機端連接 <a href="https://github.com/mcollina/mosca">mosca</a> 作測試會出現 connection reset的問題，因此換用 <a href="http://mosquitto.org/">Mosquitto</a>作為替代方案，使用上沒出現
什麼問題，在擴展性上有<a href="http://mqtt.org/wiki/doku.php/bridge_protocol">bridge_protocol</a>這個方案，可以讓一台broker作為bridge讓其他broker透過bridge互相溝通，也支援離線訊息
的功能，詳細設定可以參考<a href="http://mosquitto.org/man/mosquitto-conf-5.html">mosquitto-conf</a>的bridge部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第43回 HTML5とか勉強会]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/28/di-43hui-html5tokamian-qiang-hui/"/>
    <updated>2014-05-28T21:32:41+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/28/di-43hui-html5tokamian-qiang-hui</id>
    <content type="html"><![CDATA[<p>記錄一下在網路上看到的情報。</p>

<!-- more -->


<p>在網路上尋找關於LINE既読機能相關情報找到的，有可能是因為LINE使用SPDY的關係才找到<a href="http://atnd.org/events/46252">第43回 HTML5とか勉強会</a>這篇文章。
<a href="http://atnd.org/events/46252">第43回 HTML5とか勉強会</a>這次聚會介紹了一些關於HTTP相關的情報，其中也有包括SPDY，不過裡面大部分都有聽過人提過，除了QUIC這個
新的協議，在這篇<a href="http://www.infoq.com/news/2014/02/quic">Google Wants to Speed Up the Internet with QUIC</a>有比較詳細的介紹。</p>

<p>另外在裡面也有提到<a href="http://peerjs.com/">peerjs</a>這個專案，包裹WebRTC讓開發者更容易使用，日後可以玩玩看，順便在這裡記錄一下LINE最近關於SPDY的文章。</p>

<p><a href="http://tech.naver.jp/blog/?p=2381">Adopting SPDY in Line – Part 1: An Overview</a>  <br/>
<a href="http://tech.naver.jp/blog/?p=2729">Adopting SPDY in LINE – Part 2: The Details</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memcached Connect vs Pconnect]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/23/memcache-connect-vs-pconnect/"/>
    <updated>2014-05-23T21:31:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/23/memcache-connect-vs-pconnect</id>
    <content type="html"><![CDATA[<p>memcache目前算是常用的快取server，很多人在使用php開發網站通常會搭配memcached，本文記錄一下
php 在使用memcached遇到的問題。</p>

<!-- more -->


<p>memcached 有分 connect 和 pconnect兩種方法，但是connect會斷掉連線，而pconnect會將連接持久化，從curr_connections可以看出
兩者的不同，同一個網頁重整conncet的curr_connections數值不會一直增加，但是pconnet會上升到一個上限。</p>

<p>但是在網路上有看到人說 fastcgi方式用長連接是無效的，這邊還需要了解關於pconnect是如何實作的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rolling cURL]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/22/rolling-curl/"/>
    <updated>2014-05-22T22:51:01+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/22/rolling-curl</id>
    <content type="html"><![CDATA[<p>cURL 是用來模擬各種http請求的工具，PHP也使用這個工具來取得網頁內容，或是呼叫一些API，
但是使用上會存在一些效能上的問題，如果只是單純呼叫cURL可能會阻塞住，就必須更加巧妙的去使用cURL。</p>

<!-- more -->


<p><a href="http://www.searchtb.com/2012/06/rolling-curl-best-practices.html">Rolling cURL: PHP并发最佳实践</a>這篇文章有提到兩種寫法，都是使用<a href="http://se2.php.net/manual/en/function.curl-multi-exec.php">curl_multi_exec</a>去實踐，但是實踐的
方法不太一樣可以仔細研究，在github上面也有些專案例如:<a href="https://github.com/jmathai/php-multi-curl">php-multi-curl</a>，可以看看裡面的原理，以提高
cURL並發下的效能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LINE Developer Conference]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/21/line-developer-conference/"/>
    <updated>2014-05-21T21:54:42+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/21/line-developer-conference</id>
    <content type="html"><![CDATA[<p>LINE Developer Conference</p>

<!-- more -->


<p>LINE的開發者聚會，介紹跟LINE有關的東西， 不過很可惜的詳細的內容不會公佈到網路上，而且參加者似乎只有150名，
只能從網路上參加者的文章窺知一二。</p>

<p><a href="http://line-hr.jp/archives/37147547.html">LINE Developer Conference 開催のお知らせ</a><br/>
<a href="http://qiita.com/launcher_test/items/d2d0ddc4e11e1609bb31">LINE Developer Conference (インフラ)</a><br/>
<a href="http://qiita.com/arumani/items/a09d70c5bde1bef3375b">LINE Developer Conference（Day 2 &ndash; プラットフォーム）</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2014 Second Day]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/18/pycon-2014-second-day/"/>
    <updated>2014-05-18T19:30:24+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/18/pycon-2014-second-day</id>
    <content type="html"><![CDATA[<p>記錄一下Pycon 2014第二天(5/18)參加的議程</p>

<!-- more -->


<h3>Keynote: Jessica McKellar</h3>

<p>在世界各地從海底到太空都有人使用到python</p>

<p>data.goc.uk</p>

<p>KLP</p>

<p>python on windows</p>

<p>python on mobile</p>

<p>Can I build mobile apps in python</p>

<p>kivy</p>

<p>程式語言排行</p>

<p>PyPL</p>

<p>說到 emscripten asm.js nodejs</p>

<p>Pythonjs skulpt brvthon  work with js</p>

<p>interactivepython.org</p>

<p>think in python</p>

<p>bnmentp/runestone github</p>

<p>PSF</p>

<p>PyLadies</p>

<p>Sprints</p>

<p>Grants rapberry pi</p>

<h3>What Is Async, How Does It Work, and When Should I Use It?</h3>

<p>pubsub pattern</p>

<p>提到c10k問題 實現非同步的做法</p>

<p>前面大部分偷在講關於非同步的概念</p>

<ol>
<li>twisted</li>
<li>tornado</li>
</ol>


<p>後面開始講 asyncio</p>

<p>Yes:</p>

<ul>
<li>slow backend</li>
<li>websockets</li>
<li>many connections</li>
</ul>


<p>NO:</p>

<ul>
<li>cpu-bound</li>
<li>no async driver</li>
<li>no async expertise</li>
</ul>


<h3>Building a Knowledge Graph &ndash; the new search engine technology</h3>

<p>介紹一下知識圖譜
利用dbpedia(struct data from wiki) 的資料，使用python處理資料在丟在solr裡面。</p>

<p>synonym SynonymFilterFactory</p>

<p>介紹solr本身有的搜尋類型</p>

<p>Data source</p>

<p>data.gov.tw</p>

<p>open api</p>

<h3>How to integrate Python into a Scala stack to build realtime predictive models</h3>

<p>異種語言平台
跟ML沒有太大的關係。</p>

<p>Fliptop machine learning</p>

<ul>
<li>mathout</li>
<li>Weka</li>
<li>Scikit-learn</li>
</ul>


<p>Weka GPL</p>

<p>mathout有些演算法沒有完全實踐</p>

<p>所以使用Scikit-learn，所以就介紹怎麼讓Python跟Scala黏合。</p>

<h4>Jython</h4>

<p>有些使用c寫成的python library就無法使用
JyNI
還是無法支援 Numpy</p>

<h4>Jepp</h4>

<p>會一直創建 python 直譯器</p>

<h4>thrift</h4>

<p>No scala generator
scrooge</p>

<p>auto load balance</p>

<h4>REST API</h4>

<p>bottle</p>

<p>Thrift v.s. REST</p>

<h3>Keynote: Stephen McDonald</h3>

<p>主要在介紹作者寫的mezzanine專案</p>

<p>mezzanine manage cms system</p>

<p>mathspace.co
kou.io</p>

<p>cms > site</p>

<p>講者怎麼建立 mezzanine
<a href="http://bit.ly/MezzBegins">http://bit.ly/MezzBegins</a></p>

<ol>
<li>constraints</li>
<li>simplicity</li>
<li>just django</li>
</ol>


<p>bit.ly/MezzLego</p>

<p>bit.ly/MezzPackages</p>

<h3>以廣告品項為基礎的行動廣告推薦系統: 以 Python Hadoop Streaming 實作</h3>

<p>廣告投放平台</p>

<p>CTR
Click Through rate</p>

<p>Conversion Rate
maximize converstions</p>

<p>最後6分鐘才有重點</p>

<h3>Poster Session</h3>

<p>後面兩場議程都沒去聽，跑去聽Poster session。</p>

<p>跟line的開發人員聊了不少關於line 的架構。<br/>
另外看到<a href="http://raftconsensus.github.io/">raft</a>這個演算法，似乎是為了處理分散式系統一致的問題，另外有聽到JGroups這個工具似乎跟zookeeper是用來
處理類似的東西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2014 First Day]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/17/pycon-2014-first-day/"/>
    <updated>2014-05-17T21:27:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/17/pycon-2014-first-day</id>
    <content type="html"><![CDATA[<p>記錄一下Pycon 2014第一天(5/17)參加的議程</p>

<!-- more -->


<h2>python powered analytics for business</h2>

<p>Wes McKinney<br/>
<code>python for data analysis</code> 和 <code>pandas</code>的作者</p>

<p>python&rsquo;s role in 2014 for analytics</p>

<p>how did we get here
where are we going</p>

<p>BI</p>

<p>ETL</p>

<p>介紹一些學習資源
nbviewer.ipython.org</p>

<p>viable alternative</p>

<ul>
<li>R</li>
<li>Julia</li>
<li>Proprietary: SAS, SPSS, StatusModel</li>
<li>JVMLand</li>
</ul>


<p>PyData conferences</p>

<p>why did pandas succeed</p>

<p>an api optimized for
terminal friendliness
conposablility</p>

<p>it took avillage</p>

<p>Cython Numpy</p>

<p>maplotlib scipy</p>

<p>statsmodels ipython</p>

<h3>guiding principle</h3>

<h3>make the easy things easy</h3>

<p>讀取資料
分析資料
回歸模型</p>

<p>Medium Data</p>

<p>scikit-learn</p>

<h3>pandas the good and bad</h3>

<p>1.ecosystem compatibility</p>

<p>2.design for broad appeal</p>

<p>3.the big data problem</p>

<h3>broader data trends</h3>

<p>python r julia growing  at expense of prorietary tools</p>

<p>jvm-based big data ecosystem</p>

<p>concurrent multicore programing</p>

<h3>future</h3>

<h3>distributed in-memory data analysis</h3>

<h3>staying competitive</h3>

<h3>community building</h3>

<p>介紹datapad的功能</p>

<h2>real-time visualiztion with python and d3.js</h2>

<p>grs stock</p>

<p>大部分都是在介紹作者的視覺化圖形，這些都是用d3.js產生的。</p>

<h2>VapourSynth come doet it indicate thare avisynth will shutdown</h2>

<p>vapoursynth</p>

<p>demo a movie 一些影像處理效果</p>

<p>avisynth structure</p>

<p>VFW</p>

<p>簡介如何使用api和參數。</p>

<h2>Graph-Tool: The Efficient Network Analyzing Tool for Python</h2>

<p>如何使用 Graph-Tool</p>

<p>ux</p>

<p>pickle</p>

<h3>cerntrality measures</h3>

<p>建立圖形並且使用圖形演算法分析圖形</p>

<p>簡單離散數學</p>

<p>可以使用於拓鋪學</p>

<p> betweenness centrality</p>

<p>eigenvector centrality</p>

<p>numpy nan</p>

<p>Top N</p>

<p>SFDF</p>

<p>ARF</p>

<h2>python and science</h2>

<p>講解python 在科學計算上的歷史和進展</p>

<p>beyond numpy: a whole ecosystem</p>

<p>trending topic at strata conference 2011 &ndash; 2014</p>

<p>cs 109</p>

<p>numfocus.org</p>

<p>book</p>

<p><a href="https://wakari.io/">https://wakari.io/</a></p>

<p><a href="http://fivethirtyeight.com/">http://fivethirtyeight.com/</a></p>

<h2>DMRL: A versatile Python tool to assess DNA methylation variation and identify DMRs</h2>

<p>DNA sodium bisulfite</p>

<p>bisulfite sequence alignment</p>

<p>t-test
ANOVA
Fisher `s exact test</p>

<p>methylation distance</p>

<p>比較DNA序列 PYSAM</p>

<p>Analysis wordflow</p>

<p>前面一大部分都在介紹關於DNA 的基礎知識提到一些甲基化的東西</p>

<h2>Hacking Models with Python</h2>

<p>寫改數學模型 cluster liner respresion</p>

<p>view point</p>

<h2>Data Analysis in Python</h2>

<p>介紹 library</p>

<p>matplotlb
scikit-learn
statsmodel
numba
blaze</p>

<h2>閃電秀</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phantomjs]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/14/phantomjs/"/>
    <updated>2014-05-14T21:19:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/14/phantomjs</id>
    <content type="html"><![CDATA[<p><a href="http://phantomjs.org/">phantomjs</a> 是類似nodejs的工具，都是使用javascript驅動，不過nodejs是使用v8引擎而phatomjs是使用webkit，
而webkit裡面除了js引擎的部分也有包含html渲染的部分，也因此phantomjs能夠生成html的頁面，就像是一個閱覽器。</p>

<p>目前在專案上我最常使用phantomjs於頁面截圖和前端js測試，可以利用phantomjs取得某個網址的頁面然後保存下來，
然後可以製作一個書籤服務並且加上網站截圖或是預覽圖的功能，phantomjs可以和Selenium針對前端作單元測試。</p>

<p>一篇關於webkit的參考資料:<a href="http://www.paulirish.com/2013/webkit-for-developers/">webkit-for-developers</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beautiful Evidence]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/12/beautiful-evidence/"/>
    <updated>2014-05-12T22:34:13+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/12/beautiful-evidence</id>
    <content type="html"><![CDATA[<p><a href="http://www.edwardtufte.com/tufte/books_be">Beautiful Evidence</a> 是在 <code>深入淺出資料分析</code>裡面提到的一本書，作者是<a href="http://en.wikipedia.org/wiki/Edward_Tufte">Edward Tufte</a>，是一位統計學家，
在做資料視覺化的時，常會不知道要選擇哪種圖表而<a href="http://en.wikipedia.org/wiki/Edward_Tufte">Edward Tufte</a>有提出一些準則可以參考，而<a href="http://www.edwardtufte.com/tufte/books_be">Beautiful Evidence</a>便是
一本關於data visualization的書，作者還有另外一本著作<code>Data Analysis for Public Policy</code>似乎是跟數據分析相關的書，
之後有時間在研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Carrot2 : Clustering Engine]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/12/carrot2-clustering-engine/"/>
    <updated>2014-05-12T22:22:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/12/carrot2-clustering-engine</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/carrot2/carrot2">Carrot2</a> 一個開源的分類引擎，之前在學習solr的時候就有看到這個開源專案，在<a href="http://search.carrot2.org/stable/search">search</a>有一個Carrot2的範例，
是針對搜尋引擎得到的結果做分類，Carrot2本身也可以和Solr集成，也能支援中文分詞器，之後研究一下內部使用哪些演算法和
如何跟solr結合。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[研究jQuery原始碼]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/09/yan-jiu-jqueryyuan-shi-ma/"/>
    <updated>2014-05-09T23:04:01+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/09/yan-jiu-jqueryyuan-shi-ma</id>
    <content type="html"><![CDATA[<p>記錄一下研究jQuery的過程和方式。</p>

<!-- more -->


<p>要研究jQuery的原始碼可以先看<a href="http://robflaherty.github.io/jquery-annotated-source/">jquery-annotated-source</a>，裡面的版本是<code>1.6</code>有點舊，如果要看中文版可以推薦
看&#8221;jQuery 技术内幕&#8221;這本書，雖然版本是<code>1.7</code>也算足夠了，如果要看最新的可以去<a href="https://github.com/jquery/jquery">jQuery</a>看到尚未編譯的原始碼，
可以看到jQuery分成好幾個區塊，可以看到jQuery怎麼實現那些有趣的功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Xsendfile 提升下載性能]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/07/shi-yong-xsendfile-ti-sheng-xia-zai-xing-neng/"/>
    <updated>2014-05-07T21:21:43+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/07/shi-yong-xsendfile-ti-sheng-xia-zai-xing-neng</id>
    <content type="html"><![CDATA[<p>X-sendfile 可以讓Server控制下載的流程，讓開發者可以透過傳送特定的header控制存取檔案的權限。</p>

<!-- more -->


<p>下面三種伺服器支援的header，伺服器不一定會預設支援X-sendfile，需要自己開啟相關的模組。</p>

<table border="1">
 <tr>
  <th>     web server  </th>
  <th>     header  </th>
 </tr>
 <tr>
  <td>     apache  </td>
  <td>     X-Sendfile  </td>
 </tr>
 <tr>
  <td>     nginx  </td>
  <td>     X-Accel-Redirect  </td>
 </tr>
 <tr>
  <td>     lighttpd  </td>
  <td>     X-LIGHTTPD-send-file  </td>
 </tr>
</table>


<p>nginx下 php的寫法。</p>

<pre><code>&lt;?php
$filePath = '/download/example.rar';
header('Content-type: application/octet-stream');
header('Content-Disposition: attachment; filename="' . basename($file) . '"');
header('X-Accel-Redirect: '.$filePath);
</code></pre>

<p>nginx的 config設定。</p>

<pre><code>location /protected/ {
    internal;
    alias   /some/path/; # note the trailing slash
}
</code></pre>

<p>nginx header參數</p>

<pre><code>X-Accel-Limit-Rate: 1024
X-Accel-Buffering: yes|no
X-Accel-Charset: utf-8
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Old IE Support Html5 Tag]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/04/old-ie-support-html5-tag/"/>
    <updated>2014-05-04T20:28:03+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/04/old-ie-support-html5-tag</id>
    <content type="html"><![CDATA[<p>舊版本IE支援 html5的方法<a href="https://github.com/aFarkas/html5shiv">html5shiv</a></p>

<!-- more -->


<pre><code>&lt;!--[if lt IE 9]&gt;
    &lt;script src="bower_components/html5shiv/html5shiv.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
</code></pre>

<p>jQuery 有 jQuery.support.html5Clone 會檢查閱覽器是否支援html5的tag，在
jQuery 1.9以前的版本有jQuery.clean 會負責處理舊版IE在插入新的tag會遇到的issue。</p>

<p>另外還有<code>display:inline</code>的問題，在閱覽器在解釋不支援的tag時樣式會預設為<code>display:inline</code>
所以要Reset CSS。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Core 1.9 Upgrade Guide]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/03/jquery-core-1-dot-9-upgrade-guide/"/>
    <updated>2014-05-03T19:07:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/03/jquery-core-1-dot-9-upgrade-guide</id>
    <content type="html"><![CDATA[<p>jQuery升級到1.9需要注意的事項。</p>

<!-- more -->


<p>詳細的內容在官網的<a href="http://jquery.com/upgrade-guide/1.9/">1.9 Upgrade Guide</a>有詳細說明，目前網站最常用的通常是1.7的版本，
如果要遷移到1.9的版本要注意一下，因為1.9版本改變幅度蠻大的，之前在工作中一些寫法和
plugin就沒有辦法使用就降級到1.8版本，不過也能夠使用<a href="https://github.com/jquery/jquery-migrate">jquery-migrate</a>讓開發者使用
以前的特性，但是要注意有些特性就算裝上plugin也無法復原。</p>

<h2>記錄一下工作上影響比較大的部分</h2>

<ol>
<li>拿掉.toggle(function, function, &hellip; ) 的用法，</li>
<li>拿掉 jQuery.browser() 使用 Modernizr偵測閱覽器是否支援這個功能比較好。</li>
<li>拿掉 live換用 on 。</li>
<li>拿掉 die 換用 off 。</li>
<li>Ajax 的全域事件要綁在document上面。</li>
<li>jQuery(htmlString) versus jQuery(selectorString)</li>
<li>.attr() versus .prop()</li>
<li>$(&ldquo;input&rdquo;).attr(&ldquo;type&rdquo;, newValue) in oldIE</li>
<li>&ldquo;hover&rdquo; pseudo-event</li>
<li>移除一些jQuery沒有寫出來了函式拿掉 例如:jQuery.clean()。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[團隊管理工具清單]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/02/tuan-dui-guan-li-gong-ju-qing-dan/"/>
    <updated>2014-05-02T23:24:57+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/02/tuan-dui-guan-li-gong-ju-qing-dan</id>
    <content type="html"><![CDATA[<p>記錄一下其他公司使用的開發工具。</p>

<!-- more -->


<ol>
<li><a href="https://basecamp.com/">Basecamp</a></li>
<li><a href="http://airbrake.io/">Airbrake</a></li>
<li><a href="http://newrelic.com/">New Relic</a></li>
<li><a href="https://codeclimate.com/">Code Climate</a></li>
<li><a href="https://saucelabs.com/">Sauce Labs</a></li>
<li><a href="http://www.zabbix.com/">Zabbix</a></li>
<li><a href="https://circleci.com/">CircleCI</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[五月書單]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/30/wu-yue-shu-dan/"/>
    <updated>2014-04-30T23:36:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/30/wu-yue-shu-dan</id>
    <content type="html"><![CDATA[<p>記錄五月要看完的書單。</p>

<!-- more -->


<ol>
<li>Testable.JavaScript</li>
<li>Google軟體測試之道</li>
<li>JavaScript The Definitive Guide</li>
<li>JavaScript Patterns</li>
<li>Learning JavaScript Design Patterns</li>
<li>社群網站的資料探勘</li>
<li>jQuery技术内幕：深入解析jQuery架构设计与实现原理</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中文分词的最大匹配法]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/26/zhong-wen-fen-ci-de-zui-da-pi-pei-fa/"/>
    <updated>2014-04-26T22:49:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/26/zhong-wen-fen-ci-de-zui-da-pi-pei-fa</id>
    <content type="html"><![CDATA[<p>記錄一下中文分詞的入門演算法。<br/>
1. 最大正向匹配
2. 最大逆向匹配
3. 雙向匹配</p>

<!-- more -->


<p>中文分詞一開始是使用詞典作分詞，在分詞的過程中主要有幾個原則:  <br/>
1. 切出來的詞彙越長越好，越長就能代表越複雜的意思，句子的意思也能更明確。<br/>
2. 切出來的分詞結果通常會有一些停用詞(stop words)或是詞典裡沒有的詞導致會有多餘的字出現，那類的字越少越好。</p>

<p>然後最上面提到的三個演算法其實都是對詞典作匹配，只是是從句子彺前往後匹配或者兩種方法都使用，之後有空用程式語言實踐一下演算法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyconf 2014 Second Day]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/26/rubyconf-2014-second-day/"/>
    <updated>2014-04-26T20:29:49+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/26/rubyconf-2014-second-day</id>
    <content type="html"><![CDATA[<p>記錄一下rubyconf 2014第二天(4/26)參加的議程</p>

<!-- more -->


<h3>Cores unleashed &ndash; Exploiting Parallelism in Ruby with STM (and a new VM)</h3>

<p><a href="https://speakerdeck.com/brucehsu/rubyconf-dot-tw-2014-cores-unleashed-exploiting-parallelism-in-ruby-with-stm">slide</a></p>

<h3>How the Principles of Ruby Inspired the Rails Girls Community</h3>

<p>兩位講者如何認識，並且介紹Rails Girls社群怎麼成長的。</p>

<h3>Ruby on Bioinformatics</h3>

<p>使用ruby 處理生物資訊，列了不少gem但是有的是去使用其他語言的library吧，裡面也有提到使用neo4j處理
個人的健康資料，不過跟ruby沒有太大的關係，現在比較常用還是perl和python吧。</p>

<h3>the Guide to know Ruby implementation for non-C language programer</h3>

<p>講者一開始說因為她的先生是寫ruby的programmer接觸ruby，之後就開始研究Ruby裡面的架構，
講者介紹幾個方法去研究裡面的原始碼。</p>

<h3>Growing Up &ndash; Bringing Concurrency to Ruby</h3>

<p>一開始介紹jruby和jvm，然後說明 prcoess-level和thread-level的做法，concurency的法則和
實現介紹一些實現no-block的library。</p>

<h3>Extreme Makeover &ndash; Rubygems Edition</h3>

<p>bundle，用來管理gem的依賴性，講者講了一些過去bundle的issue，ssl issue，搜尋Gem的效率過低，加上CDN，
加入一些api，建立新的index。</p>

<h3>sweaters as a service &ndash; adventures in electronic knitting</h3>

<p>講者建立一個編織機器，只要上傳圖檔就可以編織出一個圖案，似乎是使用Ruby去控制不過沒有看到整個程式碼。</p>

<h3>Improve and refactor ruby code easier</h3>

<p>利用 synvert工具作ruby 的重構。</p>

<h3>lightning talk</h3>
]]></content>
  </entry>
  
</feed>
