<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-12-01T09:09:02+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[十二月書單]]></title>
    <link href="http://fubuki.github.io/blog/2014/12/01/shi-er-yue-shu-dan/"/>
    <updated>2014-12-01T07:39:21+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/12/01/shi-er-yue-shu-dan</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>高效能網站開發指南</li>
<li>Search Analytics for Your Site</li>
<li>並行之美學：撰寫平行應用程式的新手指南</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安裝 Coreos]]></title>
    <link href="http://fubuki.github.io/blog/2014/12/01/install-coreos/"/>
    <updated>2014-12-01T01:19:28+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/12/01/install-coreos</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Coreos 在官網提供了不少安裝方式，我是使用它提供的 VMware 的映像檔安裝，下載之後解壓縮使用 VMware 啟動。</p>

<pre><code>curl -LO http://alpha.release.core-os.net/amd64-usr/current/coreos_production_vmware_insecure.zip
</code></pre>

<p>下載的檔案裡面有個 <code>insecure_ssh_key</code>，這個映像檔裡面沒有提供帳密登入預設你要用公私鑰登入，我這邊使用
<code>puttygen.exe</code> 載入 <code>insecure_ssh_key</code> 生成 putty 所吃的格式後使用 <code>core</code> 當作登入帳號便可以登入。</p>

<pre><code>docker run -t -i ubuntu /bin/bash
</code></pre>

<p>整個映像檔大小不到 200M  架設起來很方便，目前有看到有公司考慮要將系統移除 docker 裡面利用 Coreos 建立環境，
這也許可以參考未來架構的規劃。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 Ubuntu 14.04 快速安裝 gcc-4.9]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/30/gcc-4-dot-9-on-ubuntu-14-dot-04/"/>
    <updated>2014-11-30T19:45:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/30/gcc-4-dot-9-on-ubuntu-14-dot-04</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近將作業系統從 Ubuntu 12.04 LTS 升級到 14.04 LTS ，裡面的軟體也一併升級但是後來發現 gcc 只有到 <code>4.8</code> 的版本，沒有到最新的
 <code>4.9</code> 版本，沒有辦法完整支持 <code>C++ 14</code> 的標準。</p>

<p>原本要使用源碼直接編譯，但是發現在 Ubuntu 可以透過 apt 安裝 <code>g++ 4.9</code> ，下面記錄透過 apt 安裝的指令。</p>

<pre><code>sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install g++-4.9
gcc-4.9 -v
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firefox Developer Edition]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/29/firefox-developer-edition/"/>
    <updated>2014-11-29T21:06:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/29/firefox-developer-edition</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在 Mozilla 的電子報看到了 <a href="http://mozilla.com.tw/firefox/developer/">Firefox Developer Edition</a> : 一個為了開發者設計的閱覽器版本，這個版本似乎是直接將 <a href="https://github.com/campd/fxdt-adapters">fxdt-adapters</a> 包進去。</p>

<p>這個開發者版本直接提供開發 <code>Firefox OS APP</code> 的功能叫做 <code>WebIDE</code> 可以直接在閱覽器編輯專案，裡面也有內建用來對網頁除錯的工具，
之前我都是使用 firebug 測試網頁而兩者之間的差異還在研究中，另外也有一個可以讓使用者透過連接外部的裝置讓開發者在其他平台上除錯。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Is Systemtap]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/28/what-is-systemtap/"/>
    <updated>2014-11-28T23:17:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/28/what-is-systemtap</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://sourceware.org/systemtap/">systemtap</a> 一個可以用來抓取 Linux kernal 訊息的工具，在以前開發 Linux 核心的時候要抓去內部的資訊都需要開發者插入程式碼然後重新編譯
後才能顯示一些想要的資訊，但是後後來的核心版本提供了一個名叫 kprobe 機制，而 <a href="https://sourceware.org/systemtap/">systemtap</a> 便是藉由 kprobe 讓開發者更容易去抓取核心的運行資訊。</p>

<h3>如何開啟 systemtap 功能</h3>

<h3>範例</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[關於處理 LOG 的事情]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/27/process-log/"/>
    <updated>2014-11-27T02:16:51+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/27/process-log</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在在研究 Apache Kafka 處理 LOG 的情報，最後發現我看到的資料都是 Jay Kreps 寫的， Jay Kreps 似乎是 Linkedln 的程式設計師，負責 Linkedln 的開源專案，
這些專案裡面都是似乎都是用來處理 BIG DATA ，而 Jay Kreps 也寫了一些關於 BIG DATA 和 Linkedln 架構的技術文章，下面有列出最近在搜尋如何處理大量 LOG 的參考資料。</p>

<p><a href="http://www.slideshare.net/JayKreps1/i-32858698">The Log: What every software engineer should know about real-time data&rsquo;s unifying abstraction</a>
<a href="http://shop.oreilly.com/product/0636920034339.do">I Heart Logs Event Data, Stream Processing, and Data Integration </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker 15 Tips]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/26/docker-15-tips/"/>
    <updated>2014-11-26T23:10:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/26/docker-15-tips</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://speakerdeck.com/bmorearty/15-docker-tips-in-5-minutes">15 Docker Tips in 5 Minutes</a> 裡面簡介了一些關於 Docker 小技巧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP 5.5 的 Password Function]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/25/php-password-function/"/>
    <updated>2014-11-25T21:57:54+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/25/php-password-function</id>
    <content type="html"><![CDATA[<!-- more -->


<p>PHP 5.5 新加了用來處理 Password 加密的功能，<a href="http://php.net/manual/en/ref.password.php">Password Hashing Functions</a> 裡面有列出新增的四個 function。</p>

<h3>password_get_info</h3>

<p>傳入一個加密字串取得。</p>

<h3>password_hash</h3>

<p>針對一個字串加密。</p>

<h3>password_needs_rehash</h3>

<p>當加密字串遺失了一些資訊時可以透過這個重新加密字串。</p>

<h3>password_verify</h3>

<p>確認字串和加密後的 hash 是否相同。</p>

<h3>相關資訊</h3>

<p><a href="https://wiki.php.net/rfc/password_hash">PHP RFC: password_hash() function behavior</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenStack Swift]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/24/swiftstack/"/>
    <updated>2014-11-24T02:00:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/24/swiftstack</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究與多租戶系統相關的資訊時看到了 <a href="https://www.swiftstack.com/">swiftstack</a>， 使用了 OpenStack 下的 Swift 項目技術的雲端儲存商，
如果要試玩 Swift 可以直接安裝 <a href="https://www.swiftstack.com/">swiftstack</a> 而不需要安裝整個 OpenStack 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Tornado]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/23/python-tornado/"/>
    <updated>2014-11-23T14:43:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/23/python-tornado</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.tornadoweb.org/en/stable/">Tornado</a> 由 python 寫的有著非同步特性的 web 框架，在研究 node.js 的特性時常會看到有人拿 Tornado 作比較。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenContrail Info]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/22/opencontrail-info/"/>
    <updated>2014-11-22T06:32:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/22/opencontrail-info</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.opencontrail.org/">OpenContrail</a> 用來建立 <a href="http://en.wikipedia.org/wiki/Software-defined_networking">SDN</a> 系統的開源工具，這邊有相關文件的 <a href="http://www.sdnap.com/sdnap-post/2886.html">翻譯</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NetBSD 作業系統簡介]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/21/netbsd/"/>
    <updated>2014-11-21T23:48:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/21/netbsd</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.netbsd.org/">NetBSD</a> 用來移植各種裝置的作業系統。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ZABBIX and Hinemos]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/20/zabbix-and-hinemos/"/>
    <updated>2014-11-20T23:48:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/20/zabbix-and-hinemos</id>
    <content type="html"><![CDATA[<p>兩種監視系統。</p>

<!-- more -->


<h3>官網</h3>

<ol>
<li><a href="http://www.zabbix.com/">ZABBIX</a></li>
<li><a href="http://www.hinemos.info/">Hinemos</a></li>
</ol>


<h3>ZABBIX</h3>

<p>使用 C 和 PHP 開發。</p>

<h3>Hinemos</h3>

<p>使用 JAVA 開發。</p>

<h3>合併多種監視系統</h3>

<p><a href="http://www.hatohol.org/">hatohol</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 DRBD Pacemaker Corosync 建立高可用架構]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/20/drbd-pacemaker-corosync/"/>
    <updated>2014-11-20T23:48:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/20/drbd-pacemaker-corosync</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在一場演討會看到關於建立高可用架構的演講，演講題目為 <code>【入門】PostgreSQL + Pacemaker + DRBD で高可用性構成を構築してみよう</code>，
裡面是講說如何使用 Pacemaker + DRBD  建立一個 HA 架構，紀錄一下使用到哪些專案跟其他相關訊息。</p>

<ol>
<li><a href="http://www.drbd.org/">DRBD</a></li>
<li><a href="Pacemaker">Pacemaker</a></li>
<li><a href="Corosync">Corosync</a></li>
</ol>


<h3>DRBD</h3>

<p>DRBD (Distributed Replicated Block Device)</p>

<h3>Pacemaker</h3>

<p>管理 cluster 的工具。</p>

<h3>Corosync</h3>

<p>通信系統</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 5.7 New Feature]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/19/mysql-5-dot-7-new-feature/"/>
    <updated>2014-11-19T22:13:09+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/19/mysql-5-dot-7-new-feature</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Added Features</h3>

<ol>
<li>提高安全性</li>
<li>SQL mode changes</li>
<li>即時更新表結構</li>
<li>優化 InnoDB</li>
<li>supports stacked diagnostics areas</li>
<li>EXPLAIN 可以顯示更多資訊</li>
<li>觸發</li>
<li>新增 LOG 機制</li>
<li>MySQL Test Suite</li>
<li>mysql client</li>
<li>Database name rewriting with mysqlbinlog</li>
<li>HANDLER with partitioned tables</li>
<li>Index condition pushdown support for partitioned tables</li>
<li>WITHOUT VALIDATION support for ALTER TABLE &hellip; EXCHANGE PARTITION</li>
<li>Master dump thread improvements</li>
<li>Globalization improvements</li>
<li>Changing the replication master without STOP SLAVE</li>
</ol>


<h3>Deprecated Features</h3>

<h3>Removed Features</h3>

<ol>
<li>更改密碼加密格式</li>
<li>移除一些資料類型</li>
<li>使用 <code>Performance Schema tables</code> 取代 <code>SHOW ENGINE INNODB MUTEX</code></li>
</ol>


<p>參考:<a href="http://dev.mysql.com/doc/refman/5.7/en/mysql-nutshell.html">What Is New in MySQL 5.7</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB Galera Cluster]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/18/mariadb-galera-cluster/"/>
    <updated>2014-11-18T23:42:26+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/18/mariadb-galera-cluster</id>
    <content type="html"><![CDATA[<p>建立 MariaDB Galera Cluster 架構。</p>

<!-- more -->


<p><a href="https://downloads.mariadb.org/mariadb-galera/">mariadb-galera</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[指紋的特徵提取和比對]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/18/fingerprint-recognition/"/>
    <updated>2014-11-18T22:44:37+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/18/fingerprint-recognition</id>
    <content type="html"><![CDATA[<p>列出指紋的特徵提取和比對的相關方法</p>

<!-- more -->


<h3>預處理</h3>

<h3>特徵提取</h3>

<h3>比對</h3>

<ol>
<li>局部場法</li>
<li>特殊點法</li>
<li>傅立葉轉換</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Beanstalkd 設定特定時間執行任務]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/17/beanstalkd-time-mission/"/>
    <updated>2014-11-17T22:30:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/17/beanstalkd-time-mission</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近工作上需要設定在特定時間執行設定好的任務，原本是使用 Linux 的 crontab 定時檢查是否需要執行這個任務，
然後將任務丟給 beanstalkd 執行，後來查詢 beanstalkd 和 celery 都有個 delay 的指令可以讓任務設定過多少時間後才執行。</p>

<p><a href="http://docs.phalconphp.com/en/latest/reference/queue.html">phalcon beanstalkd</a> 裡面有寫在 put 的時候加上額外的參數 <code>array('priority' =&gt; 250, 'delay' =&gt; 10, 'ttr' =&gt; 3600)</code>。<br/>
<a href="http://celery.readthedocs.org/en/latest/faq.html#module-celery.task.base">Can I schedule tasks to execute at a specific time?</a> 裡面有介紹 celey 如何指定時間處理。</p>

<p>此外另外有一個想法是使用 Redis 的 <code>Keyspace Notifications</code>  設定一個鍵值跟過期時間然後使用一個進程監視過期的通知然後就可以設定在
特定時間執行任務。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[阿里客製化的 Jvm]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/16/taobao-jvm/"/>
    <updated>2014-11-16T20:13:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/16/taobao-jvm</id>
    <content type="html"><![CDATA[<p>阿里基於 open jdk 開發的 jvm 版本。</p>

<!-- more -->


<p><a href="http://jvm.taobao.org">Taobao JVM</a> 裡面有如何打入補丁並且編譯的資訊，裡面有優化一些部分不過最主要有用的部分是它多了不少 Log 訊息方便開發者追蹤訊息，
這邊有<a href="http://hellojava.info/?p=336">相關資訊</a> 包含一些阿里優化哪些部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JCConf TW 2014]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/15/jcconf-tw-2014/"/>
    <updated>2014-11-15T21:07:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/15/jcconf-tw-2014</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>JDK8 與模式</h3>

<ol>
<li>Fluent ecorator</li>
<li>In out in out shake it all about</li>
<li>The lonely override</li>
<li>monad</li>
<li>functional reactive</li>
</ol>


<h4>Fluent Decorator</h4>

<p>High order function : 輸入函式 輸出函式<br/>
Lamda : code as data<br/>
ThreadLocal<br/>
使用 withInitial</p>

<h4>Monad Patterns</h4>

<p>Optional<br/>
flatMap</p>

<h4>Functional Reactive</h4>

<p>很有趣的東西</p>

<h3>Java 常見問題排查方法</h3>

<h4>類衝突問題</h4>

<h4>OOM Out of Memory</h4>

<p>工具</p>

<ol>
<li>jstack</li>
<li>btrace</li>
<li>jmap</li>
<li>google perftools</li>
</ol>


<h4>CPU 利用率問題</h4>

<h4>應用沒響應問題</h4>

<h4>分布式環境下應用交互超時問題</h4>

<p><a href="http://www.slideshare.net/terryice/eagleeye-with-taobaojavaone">EagleEye</a></p>

<h4>Java 進程異常退出問題</h4>

<h3>EventBus and Reactive Programming on Android</h3>

<h4>痛點</h4>

<ol>
<li>Android AsyncTask</li>
<li>Loader</li>
<li>Thread</li>
<li>Callback 海</li>
</ol>


<h4>類似的東西</h4>

<ol>
<li>event-driven programming</li>
<li>obsever pattern</li>
<li>pub/sub pattern</li>
<li>dataflow programming</li>
</ol>


<p><a href="https://github.com/ReactiveX/RxJava">RxJava</a></p>

<h4>library</h4>

<ol>
<li>Otto from Square</li>
<li>EventBus from greenrobot</li>
</ol>


<h4>Sticky Events</h4>

<h3>老舊 Web 上雲端</h3>

<p>ActiveCache</p>

<p>無法維護的 WEB 專案的尊稱</p>

<p>Crash 蹺蹺板</p>

<p>guava CacheLoader</p>

<p>Cached Refresh Schedule</p>

<h3>Simplify Multi-Tenant Queries in ORM Frameworks</h3>

<ol>
<li>Separate Database 多資料庫</li>
<li>Separate Schema  多表</li>
<li>Discriminator Column 藉由欄位區分</li>
</ol>


<h4>ORM framework</h4>

<p>JPA
Hibernate
EclipseLink</p>

<h3>阿里 JVM 之路</h3>

<h3>性能優化</h3>

<ol>
<li>Intrinsic</li>
<li>CHIH &ndash; Off-Heap</li>
<li>JFR 分析內部事件進行優化</li>
</ol>


<h4>JAVA 方法</h4>

<ul>
<li>Pure Java

<ul>
<li>JIT</li>
<li>Intrinsic</li>
</ul>
</li>
<li>JNI

<ul>
<li>開銷大，效率低</li>
</ul>
</li>
</ul>


<p>Intrinsic 主要是將一些程式碼直接使用 CPU 指令執行</p>

<h4>GCIH</h4>

<ol>
<li>Garbage Collector Invisable Heap</li>
<li>讓 JVM 進程共享 GCIH 的資料</li>
<li>限制 只能唯讀 如果是可寫會有問題</li>
</ol>


<h4>Java Flight Recorder</h4>

<h4>種類</h4>

<ol>
<li>gc 相關</li>
<li>線程同步相關</li>
<li>JIT 相關</li>
<li>類加載</li>
<li>VMOperation</li>
</ol>


<p>在 OpenJDK 已有比較粗糙的實現</p>

<p>如何實現</p>

<h3>故障排查</h3>

<ol>
<li>增加可配置參數 新增一些統計數據</li>
<li>與外部工具結合</li>
</ol>


<h3>回饋社區</h3>

<ol>
<li>Bug Fix</li>
<li>阿里客製化的部分</li>
</ol>


<h3>Apache Kafka: A high-throughput distributed messaging system</h3>

<p>介紹 Kafka 的特色</p>

<p>Kafka 為何快</p>

<p>Sequential vs Random</p>

<p>In-Process Cache vs Page Cache</p>

<p>Application Copy vs Zero Copying</p>

<p>Constant Time</p>

<p>apace-storm vs spark streaming</p>

<h4>一些參考文章</h4>

<p>The Log: What every software engineer should know about real-time data&rsquo;s unifying abstraction</p>

<h3>OpenJDK vs. Dalvik/ART virtual machine</h3>

<p>從 Maxine VM 理解高效能 Java 虛擬機器運作原理</p>

<p>Self VM Strongtalk vm hotspot vm cldc-hi</p>

<p>說明了 JVM 的歷史</p>

<p>重點在最佳化</p>

<p>Runtime overhead Interpreter</p>

<p>Dalvik VM in a nutshell</p>

<p>Dalvik is Register-based</p>

<p>Optimizing Dispatch</p>

<p>dexopt</p>

<p>Dalvik vs. ART</p>

<h3>透過 ActiveMQ 在 Raspberry Pi 上的物聯網應用</h3>

<p>介紹一些物聯網的協定
1. AMQP
2. MQTT
3. XMPP
4. STOMP</p>
]]></content>
  </entry>
  
</feed>
