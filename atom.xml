<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-02-15T23:13:26+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Data Mining Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/15/data-mining-algorithm/"/>
    <updated>2015-02-15T23:11:19+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/15/data-mining-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>C4.5</li>
<li>k-Means</li>
<li>SVM</li>
<li>Apriori</li>
<li>EM</li>
<li>PageRank</li>
<li>AdaBoost</li>
<li>kNN</li>
<li>Naive Bayes
10 CART</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 擴展語法]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/14/markdown-kuo-zhan-yu-fa/"/>
    <updated>2015-02-14T23:09:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/14/markdown-kuo-zhan-yu-fa</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Markdown 本身支援的語法不太多，所以有不少擴展的語法可以使用，在 <a href="http://www.pchou.info/open-source/2014/07/07/something-about-markdown.html">Markdown的各种扩展 </a> 裡面有寫
有哪些可以使用，目前使用 Atom 撰寫的 Markdown 版本應該是 <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a> ，裡面用道最
多的表格的語法，原生的只能用 html 去撰寫，而 Github 的版本有另外支援表格的語法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTP/2 規格]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/13/http-slash-2/"/>
    <updated>2015-02-13T23:40:22+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/13/http-slash-2</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://http2.github.io/">HTTP/2</a> 下一代的 HTTP 協定。</p>

<p><a href="https://http2.github.io/">HTTP/2</a> 目前的情形 <a href="http://www.slideshare.net/shigeki_ohtsu/http2-ohtsu-html5conf2015">HTTP/2の現状とこれから</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Css Framework]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/12/css-framework/"/>
    <updated>2015-02-12T23:08:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/12/css-framework</id>
    <content type="html"><![CDATA[<!-- more -->


<p>收集一些以前沒用過的 css framework。</p>

<ol>
<li><a href="http://montagestudio.com/montagejs/">MontageJS</a></li>
<li><a href="http://www.52framework.com/">52framework</a></li>
<li><a href="http://gumbyframework.com/">Gumby</a></li>
<li><a href="http://semantic-ui.com/">Semantic UI</a></li>
<li><a href="http://www.columnal.com/">Columnal</a></li>
<li><a href="http://purecss.io/">Pure</a></li>
<li><a href="http://getclank.com/">CLANK</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WEB Cache 技術 CSI,SSI,ESI]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/11/web-cache-csi-ssi-esi/"/>
    <updated>2015-02-11T23:30:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/11/web-cache-csi-ssi-esi</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://drive.google.com/a/ustream.tv/file/d/0B9h_EQ82pIpuOUF6OHhSNW1FWUU/edit?pli=1">When dynamic becomes static: the next step in web caching techniques</a></p>

<ol>
<li>CSI</li>
<li>SSI</li>
<li>ESI</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stack Overflow 的架構]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/10/stack-overflow-de-jia-gou/"/>
    <updated>2015-02-10T23:00:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/10/stack-overflow-de-jia-gou</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Stack Overflow 是很有名的程式設計師用的問答網站， 下面兩篇文章介紹 Stack Overflow 怎麼使用 25 台伺服器撐起整個服務。</p>

<ol>
<li><a href="http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow/">What it takes to run Stack Overflow</a></li>
<li><a href="http://www.dev-metal.com/architecture-stackoverflow/">The architecture of StackOverflow</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Actors Concurrency]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/09/actors-concurrency/"/>
    <updated>2015-02-09T23:53:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/09/actors-concurrency</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Actor_model">Actor model</a> 一個 concurrency model。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scss Sass Less 的比較]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/08/scss-sass-less/"/>
    <updated>2015-02-08T23:35:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/08/scss-sass-less</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近因為各種因素需要撰寫 CSS，順便思考要使用哪種框架和 SCSS 或是 LESS 建立網頁，參考 <a href="http://www.wan55.jp/column/detail/id=179">SCSS(Sass)とLESSの比較とその結果</a>
和初步的使用感覺在決定要使用哪個。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asterisk LDAP]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/07/asterisk-ldap/"/>
    <updated>2015-02-07T23:41:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/07/asterisk-ldap</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Asterisk 使用 <a href="http://www.asteriskdocs.org/en/3rd_Edition/asterisk-book-html-chunk/ExternalServices_id291590.html">LDAP</a> 作認證。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KMP AC BF BM 演算法]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/06/kmp-ac-bf/"/>
    <updated>2015-02-06T23:29:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/06/kmp-ac-bf</id>
    <content type="html"><![CDATA[<!-- more -->


<p>可以用於字串匹配的問題。</p>

<ol>
<li>Knuth–Morris–Pratt Algorithm</li>
<li>Aho-Corasick Algorithm</li>
<li>Brute Force Algorithm</li>
<li>Boyer-Moore Algorithm</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node Apns ECONNRESET]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/05/node-js-econnreset/"/>
    <updated>2015-02-05T23:43:26+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/05/node-js-econnreset</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在使用 node-apn 建立推播 Server 的時候遇到了一個問題，如果一段時間沒有發送推播會出現 <code>ECONNRESET</code> 的錯誤訊息，
在使用 node-gcm 的時候不會出現這樣的錯誤訊息，然後在 github 有人也有遇到相同的 <a href="https://github.com/argon/node-apn/issues/137">issue</a>，目前似乎需要設置一個 timeout 主動
斷線後，自行重新連線。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenRefine]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/04/openrefine/"/>
    <updated>2015-02-04T23:16:03+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/04/openrefine</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/OpenRefine/OpenRefine">OpenRefine</a> 可以用來處理 <code>Bad Data</code> 的工具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swarm Intelligence]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/03/swarm-intelligence/"/>
    <updated>2015-02-03T23:33:08+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/03/swarm-intelligence</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在看關於研究人類在網路世界的行為動力學看到的東西: <a href="http://en.wikipedia.org/wiki/Swarm_intelligence">Swarm intelligence</a> ， 在人工智慧方面應用的蠻廣的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perfect Hash Function]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/02/perfect-hash-function/"/>
    <updated>2015-02-02T22:44:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/02/perfect-hash-function</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看到 <code>Perfect Hash Function</code> 這個東西，是可以避免 Conflict 的 Hash 函數，這類的函數主要是靜態的集合，但是也有動態的
<a href="http://en.wikipedia.org/wiki/Dynamic_perfect_hashing">Dynamic perfect hashing</a>，目前有看到 <a href="http://www.ibm.com/developerworks/cn/linux/l-gperf.html">使用 gperf 实现高效的 C/C++ 命令行处理</a> 這篇文章是解說 <code>Perfect Hash Function</code> 的應用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leveldb 感想]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/01/leveldb/"/>
    <updated>2015-02-01T23:47:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/01/leveldb</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/google/leveldb">Leveldb</a> 是一個 key-value 的儲存系統，是將資料直接存放在硬碟上而不是記憶體上面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WhatsApp 的架構]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/31/whatapp/"/>
    <updated>2015-01-31T23:06:37+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/31/whatapp</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html">How WhatsApp Grew to Nearly 500 Million Users, 11,000 cores, and 70 Million Messages a Second</a>
<a href="https://www.youtube.com/watch?v=c12cYAUTXXs">Erlang Factory 2014 - That&rsquo;s &lsquo;Billion&rsquo; with a &lsquo;B&rsquo;: Scaling to the Next Level at WhatsApp</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[二月書單]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/30/2015-2-booklist/"/>
    <updated>2015-01-30T23:16:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/30/2015-2-booklist</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>搜索引擎：信息檢索實踐</li>
<li>鏈結分析</li>
<li>Mastering OpenCV with Practical Computer Vision Projects</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Torch 平台]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/29/facebook-torch/"/>
    <updated>2015-01-29T23:38:26+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/29/facebook-torch</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://torch.ch">torch</a> 是一個 Machine learning 平台，裡面支援不少演算法， <a href="https://research.facebook.com/ai">FAIR</a> 最近放出基於這個平台的工具:<a href="https://github.com/facebook/fbcunn">fbcunn</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON-LD]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/28/json-ld/"/>
    <updated>2015-01-28T23:29:21+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/28/json-ld</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://json-ld.org/">JSON for Linking Data</a> 在 JSON 上面添加新的規格，似乎是希望讓機器能夠更有效的處理資料。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Event Sourcing Pattern]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/27/event-sourcing-pattern/"/>
    <updated>2015-01-27T23:03:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/27/event-sourcing-pattern</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在看 LMAX 的架構的時候，提到利用 <code>Event Sourcing</code> 這個模式開發程式可以完全在記憶體裡面運算，提升程式運算的效能，
那個時候尚未了解 <code>Event Sourcing</code> 是何物，今天就紀錄一下研究的資料: <a href="http://ookami86.github.io/event-sourcing-in-practice/">Event Sourcing in practice</a>。</p>

<p><a href="http://ookami86.github.io/event-sourcing-in-practice/">Event Sourcing in practice</a></p>
]]></content>
  </entry>
  
</feed>
