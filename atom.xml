<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-02-24T23:28:06+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chubby 和 Zookeeper 的區別]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/24/chubby-zookeeper/"/>
    <updated>2015-02-24T23:22:22+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/24/chubby-zookeeper</id>
    <content type="html"><![CDATA[<!-- more -->


<p>兩者都是用來處理分散式系統的問題，chubby 是由 google 提出的，而 zookeeper 是類似 chubby 的開源實現軟體，
這篇 <a href="http://research.google.com/archive/chubby.html">The Chubby lock service for loosely-coupled distributed systems</a> 是 google 提出的論文，可以看一下
chubby 是提供了哪些功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.js 建立 Child Process]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/23/node-dot-js-child-process/"/>
    <updated>2015-02-23T22:49:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/23/node-dot-js-child-process</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在測試將手上一個 node.js 的系統分成好幾個子系統，然後主要的系統就只是去監控子系統
避免當子系統出現問題時導致整個系統出現問題，這邊紀錄一下 node.js 怎麼建立 child process。</p>

<p>以前有用過 node.js 的 cluster 模組去擴展 socket.io 的伺服器，現在是用 <code>child process</code> 模組建立
新的 process 收到處理完成的訊息後就將 process 給殺掉， <code>child process</code> 目前有提供下面幾種方法。</p>

<ol>
<li>spawn</li>
<li>exec</li>
<li>execFile</li>
<li>fork</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[開發者討論 JIT 的文章]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/22/jit-compilers/"/>
    <updated>2015-02-22T23:27:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/22/jit-compilers</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在研究 HHVM 的時候看到關於 JIT 的討論文章 <a href="http://lambda-the-ultimate.org/node/3851">Have tracing JIT compilers won?</a>，裡面有不少是跟 JIT 相關的編譯器的開發者，
文章討論到一些關於 JIT 技術的事情。</p>

<p><a href="http://en.wikipedia.org/wiki/Threaded_code">Threaded code</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemC3 優化 Memcached 讀取效率]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/21/memc3/"/>
    <updated>2015-02-21T20:55:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/21/memc3</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>MemC3: Compact and Concurrent MemCache with Dumber Caching and Smarter Hashing</code> 這篇論文
提出一些優化 Memcached 的方式，主要都是替換原本 Mmemcached 的算法和機制。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cuckoo Hash]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/20/cuckoo-hash/"/>
    <updated>2015-02-20T22:26:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/20/cuckoo-hash</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Cuckoo hash 是用來解決 hash 碰撞的方法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[透過 Devstack 使用 Openstack]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/19/openstack-devstack/"/>
    <updated>2015-02-19T19:27:47+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/19/openstack-devstack</id>
    <content type="html"><![CDATA[<!-- more -->


<p>如果想要測試看看 Openstack 的功能，可以先使用 <a href="https://github.com/openstack-dev/devstack">Devstack</a> 在一台機器上面建立環境，可以免去很多麻煩的設定。</p>

<p>我是在 ubuntu 14.04 的虛擬機器裡面執行，安裝方式主要是取得 <a href="https://github.com/openstack-dev/devstack">Devstack</a> 後使用非 root 帳號執行 <code>stack.sh</code> 腳本，
另外這邊需要在 <code>/etc/sudoers</code> 設定本帳號在使用 sudo 時無需輸入密碼，然後在重新開機後需要使用 <code>rejoin-stack.sh</code> 啟動服務。</p>

<h4>Install</h4>

<pre><code>git clone https://github.com/openstack-dev/devstack.git
cd devstack
./stack.sh
</code></pre>

<h4>Minimal Configuration</h4>

<pre><code>[[local|localrc]]
ADMIN_PASSWORD=secrete
DATABASE_PASSWORD=$ADMIN_PASSWORD
RABBIT_PASSWORD=$ADMIN_PASSWORD
SERVICE_PASSWORD=$ADMIN_PASSWORD
SERVICE_TOKEN=a682f596-76f3-11e3-b3b2-e716f9080d50
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codis : A Redis Proxy]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/18/codis-redis-proxy/"/>
    <updated>2015-02-18T10:04:03+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/18/codis-redis-proxy</id>
    <content type="html"><![CDATA[<!-- more -->


<p>這星期看到<code>豌豆荚</code>分享他們怎麼設計 Redis 的架構，裡面提到他們使用 <code>Twemproxy</code> 和 reids cluster 的心得，
但是他們似乎都不太滿意因此自行撰寫了 <a href="https://github.com/wandoulabs/codis">codis</a>。</p>

<p><a href="https://github.com/wandoulabs/codis">codis</a> 是用 C 和 GO 撰寫的 proxy，看起來類似 <code>Twemproxy</code>，不過他跟 <code>Twemproxy</code> 不一樣的地方在提供動態 <code>scale</code>
和監控後台的功能，但是效能上開發人員說會慢 20% 左右。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merkle Tree]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/17/merkle-tree/"/>
    <updated>2015-02-17T23:45:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/17/merkle-tree</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看書看到一個跟 bitcoin 有關的 tree : <a href="http://en.wikipedia.org/wiki/Merkle_tree">Merkle tree</a>，後來查詢了他的相關資料發現 Amazon Dynamo 也有用到，
似乎適合用在分散式環境下，在比對和驗證資料時特別有用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Atom 編寫 Jade]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/16/jade-atom/"/>
    <updated>2015-02-16T23:30:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/16/jade-atom</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在使用 express 建立監控服務，使用 <a href="http://jade-lang.com/">jade</a> 當作樣板引擎，一開始不太順手跟剛開始寫 python 的感覺一樣，
後來寫起來感覺很不錯，atom 有預覽可以看編譯出來的 html 長什麼樣子。</p>

<p><a href="http://jade-lang.com/">jade</a> 跟原本的 html 比起來要撰寫的程式碼變少了，排版起來也乾淨，目前利用 atom 撰寫的時候需要另外安裝 package，
就能有高亮和預覽的功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Mining Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/15/data-mining-algorithm/"/>
    <updated>2015-02-15T23:11:19+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/15/data-mining-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>C4.5</li>
<li>k-Means</li>
<li>SVM</li>
<li>Apriori</li>
<li>EM</li>
<li>PageRank</li>
<li>AdaBoost</li>
<li>kNN</li>
<li>Naive Bayes
10 CART</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 擴展語法]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/14/markdown-kuo-zhan-yu-fa/"/>
    <updated>2015-02-14T23:09:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/14/markdown-kuo-zhan-yu-fa</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Markdown 本身支援的語法不太多，所以有不少擴展的語法可以使用，在 <a href="http://www.pchou.info/open-source/2014/07/07/something-about-markdown.html">Markdown的各种扩展 </a> 裡面有寫
有哪些可以使用，目前使用 Atom 撰寫的 Markdown 版本應該是 <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a> ，裡面用道最
多的表格的語法，原生的只能用 html 去撰寫，而 Github 的版本有另外支援表格的語法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTP/2 規格]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/13/http-slash-2/"/>
    <updated>2015-02-13T23:40:22+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/13/http-slash-2</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://http2.github.io/">HTTP/2</a> 下一代的 HTTP 協定。</p>

<p><a href="https://http2.github.io/">HTTP/2</a> 目前的情形 <a href="http://www.slideshare.net/shigeki_ohtsu/http2-ohtsu-html5conf2015">HTTP/2の現状とこれから</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Css Framework]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/12/css-framework/"/>
    <updated>2015-02-12T23:08:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/12/css-framework</id>
    <content type="html"><![CDATA[<!-- more -->


<p>收集一些以前沒用過的 css framework。</p>

<ol>
<li><a href="http://montagestudio.com/montagejs/">MontageJS</a></li>
<li><a href="http://www.52framework.com/">52framework</a></li>
<li><a href="http://gumbyframework.com/">Gumby</a></li>
<li><a href="http://semantic-ui.com/">Semantic UI</a></li>
<li><a href="http://www.columnal.com/">Columnal</a></li>
<li><a href="http://purecss.io/">Pure</a></li>
<li><a href="http://getclank.com/">CLANK</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WEB Cache 技術 CSI,SSI,ESI]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/11/web-cache-csi-ssi-esi/"/>
    <updated>2015-02-11T23:30:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/11/web-cache-csi-ssi-esi</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://drive.google.com/a/ustream.tv/file/d/0B9h_EQ82pIpuOUF6OHhSNW1FWUU/edit?pli=1">When dynamic becomes static: the next step in web caching techniques</a></p>

<ol>
<li>CSI</li>
<li>SSI</li>
<li>ESI</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stack Overflow 的架構]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/10/stack-overflow-de-jia-gou/"/>
    <updated>2015-02-10T23:00:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/10/stack-overflow-de-jia-gou</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Stack Overflow 是很有名的程式設計師用的問答網站， 下面兩篇文章介紹 Stack Overflow 怎麼使用 25 台伺服器撐起整個服務。</p>

<ol>
<li><a href="http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow/">What it takes to run Stack Overflow</a></li>
<li><a href="http://www.dev-metal.com/architecture-stackoverflow/">The architecture of StackOverflow</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Actors Concurrency]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/09/actors-concurrency/"/>
    <updated>2015-02-09T23:53:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/09/actors-concurrency</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Actor_model">Actor model</a> 一個 concurrency model。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scss Sass Less 的比較]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/08/scss-sass-less/"/>
    <updated>2015-02-08T23:35:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/08/scss-sass-less</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近因為各種因素需要撰寫 CSS，順便思考要使用哪種框架和 SCSS 或是 LESS 建立網頁，參考 <a href="http://www.wan55.jp/column/detail/id=179">SCSS(Sass)とLESSの比較とその結果</a>
和初步的使用感覺在決定要使用哪個。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asterisk LDAP]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/07/asterisk-ldap/"/>
    <updated>2015-02-07T23:41:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/07/asterisk-ldap</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Asterisk 使用 <a href="http://www.asteriskdocs.org/en/3rd_Edition/asterisk-book-html-chunk/ExternalServices_id291590.html">LDAP</a> 作認證。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KMP AC BF BM 演算法]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/06/kmp-ac-bf/"/>
    <updated>2015-02-06T23:29:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/06/kmp-ac-bf</id>
    <content type="html"><![CDATA[<!-- more -->


<p>可以用於字串匹配的問題。</p>

<ol>
<li>Knuth–Morris–Pratt Algorithm</li>
<li>Aho-Corasick Algorithm</li>
<li>Brute Force Algorithm</li>
<li>Boyer-Moore Algorithm</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node Apns ECONNRESET]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/05/node-js-econnreset/"/>
    <updated>2015-02-05T23:43:26+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/05/node-js-econnreset</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在使用 node-apn 建立推播 Server 的時候遇到了一個問題，如果一段時間沒有發送推播會出現 <code>ECONNRESET</code> 的錯誤訊息，
在使用 node-gcm 的時候不會出現這樣的錯誤訊息，然後在 github 有人也有遇到相同的 <a href="https://github.com/argon/node-apn/issues/137">issue</a>，目前似乎需要設置一個 timeout 主動
斷線後，自行重新連線。</p>
]]></content>
  </entry>
  
</feed>
