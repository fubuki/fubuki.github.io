<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-08-21T23:26:55+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Koajs 新的 Web 框架]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/21/koajs-xin-de-web-kuang-jia/"/>
    <updated>2014-08-21T22:58:07+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/21/koajs-xin-de-web-kuang-jia</id>
    <content type="html"><![CDATA[<!-- more -->


<p>由原本 express 的團隊開發的新 web 框架， 主要的特點是使用 yield ，避免 callback 地獄，
看了一下官網的文件如果寫過 express 就可以很容易上手了，在來就是多了解 Cascading 的部分，
似乎可以參考一下這篇<a href="https://docs.djangoproject.com/en/1.6/topics/http/middleware/">文章</a>。</p>

<ol>
<li><a href="https://github.com/koajs/koa">https://github.com/koajs/koa</a></li>
<li><a href="http://koajs.com/">http://koajs.com/</a></li>
<li><a href="http://koajs.cn/">http://koajs.cn/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flickr 如何使用 Redis 的 Sentinel]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/20/flickr-ru-he-shi-yong-redis-de-sentinel/"/>
    <updated>2014-08-20T23:42:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/20/flickr-ru-he-shi-yong-redis-de-sentinel</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天看到一篇關於Flicker 如何使用 redis sentinel 的文章 <a href="http://code.flickr.net/2014/07/31/redis-sentinel-at-flickr/">Redis Sentinel at Flickr</a>， 裡面提到一些
我這邊沒有想過的和遇過的場景，之後擴展 redis 時可以參考避免掉一些問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Softmax Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/19/softmax-algorithm/"/>
    <updated>2014-08-19T23:53:51+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/19/softmax-algorithm</id>
    <content type="html"><![CDATA[<p>解決 Multi-Armed Bandit Problem 的演算法</p>

<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Softmax_function">Softmax_function</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vSphere Centos 更改網卡]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/18/vsphere-centos-geng-gai-wang-qia/"/>
    <updated>2014-08-18T22:51:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/18/vsphere-centos-geng-gai-wang-qia</id>
    <content type="html"><![CDATA[<!-- more -->


<p>使用 vSphere 的樣板 deploy 一個新的虛擬機器的時候會自動建分配一個 IP 給網卡，但是網卡卻是 eth1也無法直接指定固定 ip 所以需要修改下面這支檔案。</p>

<pre><code>[root@localhost ~]# vim /etc/udev/rules.d/70-persistent-net.rules
</code></pre>

<p>裡面有對應的網卡名稱和 MAC 位址，將對應的網卡名稱改到 eth0 並且將 eth0 MAC 位址修改下面的檔案
裡面，並且設定成 static 和指定 IP 然後重開機可以看到效果了。</p>

<pre><code>[root@localhost ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Breach Browser]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/17/breach-browser/"/>
    <updated>2014-08-17T22:20:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/17/breach-browser</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://breach.cc/">breach</a> 一款開源的閱覽器，從官網上面主打 Modular Hackable Open Source，Open Source 先不提，
其他兩個特色似乎是希望可以讓使用者自行訂製介面並且新增功能，不過 firefox 也能達成類似的功能，
但是我認為這套閱覽器也許能夠發展出自己一套路。</p>

<p>另外吸引我一點是似乎是基於 node.js 開發的，之前有使用過 <a href="https://github.com/rogerwang/node-webkit">node-webkit</a>，可以讓 node.js 搭配
webkit 做出一些有趣應用， 而 <a href="http://breach.cc/">breach</a> 似乎是更高一層的封裝，如果熟悉了話也許能夠實踐一些以前
有趣的想法。</p>

<p><a href="http://breach.cc/2013/09/05/the-experimentation-platform-to-build-a-next-generation-web-browser.html">The Experimentation Platform to Build a Next Generation Web Browser</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tracking.js 臉部辨識的函式庫]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/16/tracking-dot-js-lian-bu-bian-shi-de-han-shi-ku/"/>
    <updated>2014-08-16T23:06:56+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/16/tracking-dot-js-lian-bu-bian-shi-de-han-shi-ku</id>
    <content type="html"><![CDATA[<!-- more -->


<p>日前在 infoq 看到一個跟臉部識別的函式庫 <a href="http://trackingjs.com/">trackingjs</a>，裡面包含了一些圖像處理的演算法，
看官網上的說明和範例可以玩的範圍還蠻大的， 如果可以了話也許能夠把以前使用opencv製作的功能
移植到閱覽器上面，另外 官網上有個 <a href="http://trackingjs.com/examples/color_hexgl.html">racing car</a> 的範例還蠻有趣的，利用這個函式庫寫出一個賽車遊戲。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Web Design]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/15/responsive-web-design/"/>
    <updated>2014-08-15T23:52:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/15/responsive-web-design</id>
    <content type="html"><![CDATA[<p>在網路上看到一篇跟 RWD 有關的文章 <a href="http://mobiforge.com/design-development/mobile-web-content-adaptation-techniques">Mobile web content adaptation techniques</a> 在此紀錄一下。</p>

<!-- more -->


<ol>
<li>RWD</li>
<li>以移動平台為主</li>
<li>漸進增強</li>
<li>Server端檢測技術 Server-side Adaptation</li>
<li>混合方法</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 2 Erlang 環境設定]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/14/sublime-text-2-erlang-huan-jing-she-ding/"/>
    <updated>2014-08-14T21:52:51+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/14/sublime-text-2-erlang-huan-jing-she-ding</id>
    <content type="html"><![CDATA[<p>建立 Sublime Text 2 的 erlang 開發環境。</p>

<!-- more -->


<p><a href="https://github.com/fjl/Sublime-Erlang">Sublime-Erlang</a> 和 <a href="https://github.com/ostinelli/SublimErl">SublimErl</a> 都是給 Sublime Text 2 的插件，不過從 Sublime 的 Package 看得出來原本就有支援 erlang 支援語法，
目前還在測試 Sublime-Erlang 看有哪些突出的地方， 不過我希望有個完整的編譯環境會比較好。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rabbitmq Http Api]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/13/rabbitmq-http-api/"/>
    <updated>2014-08-13T23:51:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/13/rabbitmq-http-api</id>
    <content type="html"><![CDATA[<!-- more -->


<p>rabbitmq 的 Management Plugin 提供了 http 的接口讓開發者可以透過 API 控制， 直接透過 Management Plugin 提供
的後台速度不太能恭維， 並且希望能夠透過這些 API 管理 rabbitmq裡的 queue。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rabbitmq Process Leak]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/12/rabbitmq-process-leak/"/>
    <updated>2014-08-12T23:51:41+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/12/rabbitmq-process-leak</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Rabbitmq server 不定期會當機，經過長時間觀察，發現是 erl process 不正常增長的關係， connection 的數量
很正常但是 consumer 和 channel 的數量多出好幾倍，然後 queue的數量也不太對， 目前看得出來是 rabbitmq 的
other process 所佔的記憶體大小超過設定的記憶體上限並且將主機的記憶體整個吃滿，導致 rabbitmq 整個 crash。</p>

<p>目前運行的時候是一個 connecion 對應一個 channel 和 consumer 目前猜這是不是 queue 過多或是後端一次丟太多
訊息讓 rabbitmq 來不及處理的關係還需要一段時間觀察。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Mobile Vclick , Tap and Click]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/11/jquery-mobile-vclick-tap-and-click/"/>
    <updated>2014-08-11T22:52:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/11/jquery-mobile-vclick-tap-and-click</id>
    <content type="html"><![CDATA[<!-- more -->


<p>工作上有需要製作Mobile Device用的網頁，以前有聽過有些閱覽器有些事件是不太一樣的，特此在這
紀錄一下幾種點擊事件。
可以參考<a href="http://stackoverflow.com/questions/15274809/in-jquery-mobile-whats-the-diff-between-tap-and-vclick">in-jquery-mobile-whats-the-diff-between-tap-and-vclick</a></p>

<h3>Click</h3>

<p>手機和桌面閱覽器都有支援，在 <code>android</code> 會有 Visible delay</p>

<h3>Tap</h3>

<p>只有手機閱覽器支援, no delay</p>

<h3>VClick</h3>

<p>手機和桌面閱覽器都有支援 no delay</p>

<p>目前看到有人同時使用 <code>click</code> 和 <code>vclick</code> 綁定，使用上要注意的應該是 Visible delay。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[True Random Numbers vs. Pseudo-random Numbers]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/10/true-random-numbers-vs-pseudo-random-numbers/"/>
    <updated>2014-08-10T00:10:02+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/10/true-random-numbers-vs-pseudo-random-numbers</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Random_number_generation">Random_number_generation</a>
利用 <a href="http://en.wikipedia.org/wiki/Atmospheric_noise">Atmospheric noise</a> 的當亂數種子。</p>

<p>紀錄一下產生隨機亂數的方法，以及一般計算機的產生亂數的問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 學習資源]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/09/git-xue-xi-zi-yuan/"/>
    <updated>2014-08-09T22:58:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/09/git-xue-xi-zi-yuan</id>
    <content type="html"><![CDATA[<!-- more -->


<p>紀錄一下本身用來學習 Git 的資源</p>

<ol>
<li><a href="http://rogerdudler.github.io/git-guide/index.html">git &ndash; 简明指南</a></li>
<li><a href="https://try.github.io/">Try Git</a></li>
<li><a href="http://gitbook.liuhui998.com/">Git Community Book 中文版</a></li>
<li><a href="http://git-scm.com/book/zh-tw">Pro Git book</a></li>
<li>Version Control with Git</li>
<li><a href="http://pcottle.github.io/learnGitBranching/">learnGitBranching</a></li>
<li>Git权威指南</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Boosting and Bagging]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/08/boosting-and-bagging/"/>
    <updated>2014-08-08T23:28:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/08/boosting-and-bagging</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Ensemble learning (集成學習)，似乎是混合多個學習演算法提高結果的精確度 ，而 boosting 和 bagging便是
其中集成學習的兩種方法，下面整理一些學習資源。</p>

<h3>boosting</h3>

<p>AdaBoost（Adaptive Boosting）</p>

<p>使用同一個訓練集， 每次訓練的時候針對有問題訓練資料加大權重，讓函數靠往有問題的訊息資料。</p>

<h3>bagging</h3>

<p>每次訓練函數的時候從資料取出子資料集，然後多次訓練函數，最後有多個分類函數以投票方式分類新的資料。</p>

<h3>差別</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自然語言分類演算法]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/08/zi-ran-yu-yan-fen-lei-yan-suan-fa/"/>
    <updated>2014-08-08T22:32:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/08/zi-ran-yu-yan-fen-lei-yan-suan-fa</id>
    <content type="html"><![CDATA[<!-- more -->


<p>紀錄一下在統計自然語言處理的看到的分類演算法。</p>

<ol>
<li>Logistic Regression</li>
<li>Linear Discriminant Analysis</li>
<li>Decision List</li>
<li>Winnow algorithm</li>
<li>Mistake N-Driven Online Linear Threshold Learning Algorithm</li>
<li>Rocchio algorithm</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perceptron Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/07/perceptron/"/>
    <updated>2014-08-07T23:35:33+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/07/perceptron</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最簡單的類神經網路，在學習文本分類時，為了提高演算法的性能需要調整函數的參數使用了梯度下降的方法。
其中提到了感知器(Perceptron)，簡單來說是只有單層的類神經網路，並且因為感知器收斂定理(perceptron convergence theorem)
可以保證在處理線性可分的問題確保感知器可以收斂，在線性不可分的問題上會出現問題。</p>

<h3>定義</h3>

<h3>例子</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TextTiling 算法]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/06/texttiling-suan-fa/"/>
    <updated>2014-08-06T23:50:03+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/06/texttiling-suan-fa</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>分割算法</h3>

<ol>
<li>cohesion scorer</li>
<li>depth scorer</li>
<li>boundary selector</li>
</ol>


<h3>cohesion scorer</h3>

<ol>
<li>Vector Space Scoring</li>
<li>Block Comparison</li>
<li>Vocabulary Introduction</li>
</ol>


<h3>目的</h3>

<p>篇章分割，分析文章中使用者有興趣的部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Mobile Form]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/05/jquery-mobile-from/"/>
    <updated>2014-08-05T23:54:25+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/05/jquery-mobile-from</id>
    <content type="html"><![CDATA[<!-- more -->


<p>使用 jQuery Mobile 製作手機板用的表單，原本有在使用 <code>Twitter Bootstrap</code> 製作網站，最近想試試看
使用<a href="http://demos.jquerymobile.com/1.2.1/docs/forms/forms-all.html">jQuery Mobile Form</a> 製作看看， 目前工作上看到合作的設計師似乎只是使用Bootstrap的RWD功能，
但是按鈕設計和排版上有點怪怪的。</p>

<p><a href="http://demos.jquerymobile.com/1.2.1/docs/forms/forms-all.html">jQuery Mobile Form</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Explore-Exploit Trade-off]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/04/explore-exploit-trade-off/"/>
    <updated>2014-08-04T23:33:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/04/explore-exploit-trade-off</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>We call experimentation  exploration  and we call profit-maximization exploitation</code> 在 Bandit.Algorithms.for.Website.Optimization 書中看到關於 Explore-Exploit trade-off
的定義，簡單來說在解決問題的成本和獲得的利潤上取得平衡，書中開頭的案例:為網站更換 LOGO， 傳統的做法是使用 AB TEST但是花大量的時間，所以從這邊我可以慢慢猜得出來如何跟
Bandit Algorithms 有關。</p>

<p>另外記錄一篇跟<code>Explore-Exploit trade-off</code>相關的有趣論文:<a href="http://research.microsoft.com/apps/pubs/default.aspx?id=122779">Web-Scale Bayesian Click-Through Rate Prediction for Sponsored Search Advertising in Microsoft’s Bing Search Engine</a></p>

<p>另外有幾篇關於A/B Testing 和 Bandit.Algorithms的比較的文章可以作為參考。</p>

<ol>
<li><a href="http://www.chrisstucchio.com/blog/2012/bandit_algorithms_vs_ab.html">Why Multi-armed Bandit Algorithm is Not “Better” than A/B Testing</a></li>
<li><a href="http://stevehanov.ca/blog/index.php?id=132">20 lines of code that will beat A/B testing every time</a></li>
<li><a href="http://www.chrisstucchio.com/blog/2012/bandit_algorithms_vs_ab.html">Why Multi-armed Bandit algorithms are superior to A/B testing</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PCFG]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/03/pcfg/"/>
    <updated>2014-08-03T23:46:36+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/03/pcfg</id>
    <content type="html"><![CDATA[<p>Probabilistic Context Free Grammar (PCFG)，之前有在編譯器原理和計算理論看過 <code>Context Free Grammar</code> 簡稱CFG，
當初會提到 CFG 是因為CFG可以用來表達大多數的程式語言的語法， 然後這次在自然語言處理的部分看到PCFG，</p>

<!-- more -->


<h3>定義</h3>

<h3>語法分析</h3>
]]></content>
  </entry>
  
</feed>
