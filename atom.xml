<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-05-12T23:10:22+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quora Architecture]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/12/quora-architecture/"/>
    <updated>2015-05-12T22:51:08+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/12/quora-architecture</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="http://www.quora.com/How-does-Quoras-parallel-rendering-architecture-work">How does Quora&rsquo;s parallel rendering architecture work?</a></li>
<li><a href="http://blog.quora.com/Improving-Site-Speed">Improving Site Speed</a></li>
<li><a href="http://engineering.quora.com/Web-Server-Architecture-at-Quora">Web Server Architecture at Quora</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ChromeDriver]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/11/chromedriver/"/>
    <updated>2015-05-11T23:34:04+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/11/chromedriver</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://sites.google.com/a/chromium.org/chromedriver/">ChromeDriver - WebDriver for Chrome</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remote Debug With vorlon.JS]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/10/vorlon-dot-js/"/>
    <updated>2015-05-10T23:15:49+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/10/vorlon-dot-js</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://vorlonjs.com/">vorlon.JS</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google 的序列化函式庫 Flatbuffers]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/09/google-flatbuffers/"/>
    <updated>2015-05-09T21:48:36+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/09/google-flatbuffers</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/google/flatbuffers/">flatbuffers</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Browser Pointer Events]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/08/pointer-events/"/>
    <updated>2015-05-08T22:26:47+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/08/pointer-events</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在撰寫 web 頁面的時候在 PC 上通常會使用到 click events，而在手機上則是會使用 touch events，但是在最近看一篇關於
 pointer events 的文章，pointer events 可以取代上述兩種事件並且提供更多參數使用，不過目前有支援的瀏覽器不多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Entropy Based Image Cropping]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/07/php-entropy-based-image-cropping/"/>
    <updated>2015-05-07T22:29:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/07/php-entropy-based-image-cropping</id>
    <content type="html"><![CDATA[<!-- more -->


<p>以前在做圖片上傳網站時需要對圖片做 crop 和 resize，但是要對圖片作 crop 需要決定要怎麼處理
才能保留重要的部分，最初是選擇圖片的中央部分，後來有想過使用邊緣檢測和特徵檢測得出需要的部分，
後來看到一個使用 Entropy 的方法，在 <a href="https://github.com/stojg/crop">crop</a> 裡面有實作的方法，在 <a href="http://www.reddit.com/r/programming/comments/1wz2e4/cropping_images_in_php_based_on_their_entropy/">Cropping Images in PHP Based on their Entropy</a>
裡面有不少相關的討論可以參考。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[生命遊戲]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/06/game-of-life/"/>
    <updated>2015-05-06T23:25:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/06/game-of-life</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>Langton ant</li>
<li>Conway Game of Life</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React.js Conf 2015 心得]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/05/react-conf/"/>
    <updated>2015-05-05T23:55:51+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/05/react-conf</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://conf.reactjs.com/schedule.html">React.js Conf</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MEMEX Search Engine]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/04/memex-search-engine/"/>
    <updated>2015-05-04T22:34:41+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/04/memex-search-engine</id>
    <content type="html"><![CDATA[<!-- more -->


<p>用來探索 deep web 的搜尋引擎。</p>

<ol>
<li><a href="https://github.com/aglahe/vagrant-memex">vagrant-memex</a></li>
<li><a href="https://github.com/arrayfire/arrayfire">arrayfire</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 的 Index Merge Optimization]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/03/mysql-index-merge/"/>
    <updated>2015-05-03T21:27:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/03/mysql-index-merge</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 MySQL 中如果在一個表中有多個 Index 然後 SQL 語句使用到這些 Index ， MySQL 就
會使用 <a href="http://dev.mysql.com/doc/refman/5.0/en/index-merge-optimization.html">Index Merge Optimization</a> 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Fetch Api]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/02/javascript-fetch/"/>
    <updated>2015-05-02T23:13:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/02/javascript-fetch</id>
    <content type="html"><![CDATA[<!-- more -->


<p>為了改善 XMLHttpRequest 而誕生了 <code>fetch api</code>。</p>

<ol>
<li><a href="https://hacks.mozilla.org/2015/03/this-api-is-so-fetching/">This API is so Fetching!</a></li>
<li><a href="https://fetch.spec.whatwg.org/">fetch spec</a></li>
<li><a href="https://github.com/github/fetch">github fetch</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解決 Oracle ORA-00054 的錯誤]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/01/oracle-ora-00054/"/>
    <updated>2015-05-01T21:26:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/01/oracle-ora-00054</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://oracle-base.com/articles/misc/killing-oracle-sessions.php">Killing Oracle Sessions</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx Use Sticky Session by Cookie]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/30/nginx-sticky-session/"/>
    <updated>2015-04-30T00:42:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/30/nginx-sticky-session</id>
    <content type="html"><![CDATA[<!-- more -->


<p>使用 nginx 作 proxy 的時候有時會希望相同的客戶端連線都會連結到相同的機器，因為有可能每台機器各自存放著一些資料，
而那些資料是沒有共享的，如果客戶端連到另外的主機就會遺失一些資料。</p>

<p>例如我每台機器都有各自 memcached 用來存放一些快取資料，如果客戶端沒有連線到相同主機便會失去這些快取資訊。</p>

<p>要在 nginx 上使用 sticky seession 需要安裝  <a href="https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/overview">nginx-sticky-module-ng</a>，安裝之後就可以在設定檔中使用 <code>sticky</code> ，但是
這個功能是使用 cookie 完成的，所以如果 cookie 有問題就會需要使用 <code>ip-hash</code> 代替。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[純 CSS 版本的響應式表格]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/29/pure-css-responsive-tables/"/>
    <updated>2015-04-29T21:44:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/29/pure-css-responsive-tables</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://techblog.livingsocial.com/blog/2015/04/06/responsive-tables-in-pure-css/">Responsive Tables in Pure CSS</a> 裡面只用純 CSS 就寫出一個響應式的表格。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS in the 4th Dimension]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/28/css-in-the-4th-dimension/"/>
    <updated>2015-04-28T22:17:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/28/css-in-the-4th-dimension</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://lea.verou.me/css-4d/#intro">CSS in the 4th dimension</a> 這篇介紹了不少如何使用純 CSS　撰寫出動畫效果，看了之後學到不少技巧，雖然有些
在 IE 10 以下沒有辦法使用，但是在撰寫手機網頁跟一些只給內部使用的後台倒是挺好用的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parallax Scrolling 效果]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/27/parallax-scrolling/"/>
    <updated>2015-04-27T22:19:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/27/parallax-scrolling</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近常看到一種特殊的網頁視覺效果，網頁往下捲動時內容也會跟著改變，當時不知道叫做什麼後來看到別人在
演講時提到相同的東西才知道這種效果名叫 <code>Parallax Scrolling</code>，然後在 github 上有個不錯的專案: <a href="https://github.com/Prinzhorn/skrollr">skrollr</a>，
使用 Pure Javascript 寫成並且可以在各種環境下執行。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kojoney 安裝和使用]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/26/kojoney/"/>
    <updated>2015-04-26T23:22:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/26/kojoney</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://kojoney.sourceforge.net/">kojoney</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Framer.js : Design Prototype App]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/25/framer/"/>
    <updated>2015-04-25T21:32:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/25/framer</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在看別人在設計手機 UI 時都是使用 WEB 網頁的概念去做的，而且是一堆靜態畫面要等到寫手機端的
工程師花時間把畫面做出來的時候才會發現問題，所以就在想有沒有好的工具讓前端的工程師可以用原有的工具
去設計手機 APP 的 UI 和 UX。</p>

<p>後來我找到了 <a href="https://github.com/koenbok/Framer">Framer</a> ，我看到他官網裡 APP 的範例，不只有畫面也能實際操作，之後如果可行會推廣給其他人使用，
這樣就可以在專案前期設計良好的原型，另外他也有提供一個開發工具不過只有在 Mac 版本，之後希望能夠放出其他平台的版本。</p>

<h3>如何使用</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GStreamer 影音處理框架]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/24/gstreamer/"/>
    <updated>2015-04-24T22:24:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/24/gstreamer</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前看到一個名叫 <a href="http://gstreamer.freedesktop.org/">gstreamer</a> 的影音處理框架，這個框架可以搭配樹莓派的 H.264 解碼的功能輸出即時影像，
正好手上有羅技的攝影機在加上一塊樹莓派 Model B 的版子，所以就合在一起玩玩看。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Select Poll Epoll 的差別]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/23/select-poll-epoll/"/>
    <updated>2015-04-23T21:26:04+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/23/select-poll-epoll</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.ulduzsoft.com/2014/01/select-poll-epoll-practical-difference-for-system-architects/">select / poll / epoll: practical difference for system architects</a></p>

<h3>select</h3>

<h3>poll</h3>

<h3>epoll</h3>
]]></content>
  </entry>
  
</feed>
