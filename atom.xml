<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-06-22T23:12:42+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wand Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/22/wand-algorithm/"/>
    <updated>2015-06-22T22:25:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/22/wand-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在研究 ssdeep 演算法時另外看到的跟倒排有關的演算法，名為 wand (weak and)，這裡有一篇相關的論文 <code>Efficient Query Evaluation using a Two-Level Retrieval
Process</code> ，使用 wand 在搜尋引擎上可以增加搜尋的速度，先用速度較快的但是模糊較不精準的演算法過濾後，在使用耗時但是精準的演算法對文檔做排序。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Undo (Almost) Anything With Git]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/21/git-undo/"/>
    <updated>2015-06-21T22:11:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/21/git-undo</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/blog/2019-how-to-undo-almost-anything-with-git">How to undo (almost) anything with Git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Infer]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/20/facebook-infer/"/>
    <updated>2015-06-20T23:18:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/20/facebook-infer</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://fbinfer.com/">Infer</a></p>

<ol>
<li>Separation Logic Tutorial</li>
<li>Abductive reasoning</li>
<li>Hoare logic</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitLab Flow]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/19/gitlab-flow/"/>
    <updated>2015-06-19T22:51:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/19/gitlab-flow</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://about.gitlab.com/2014/09/29/gitlab-flow/">gitlab-flow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Asyncio]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/18/python-asyncio/"/>
    <updated>2015-06-18T23:56:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/18/python-asyncio</id>
    <content type="html"><![CDATA[<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[API 設計種類]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/17/apidesign/"/>
    <updated>2015-06-17T23:50:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/17/apidesign</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>Tunneling Style</li>
<li>URI Style</li>
<li>Hypermedia Style</li>
<li>Event-Driven Style</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vocabulary and Ontology]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/16/vocabulary-and-ontology/"/>
    <updated>2015-06-16T22:30:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/16/vocabulary-and-ontology</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Vocabulary 和 Ontology 都是跟 Semantic Web (語意網) 有關的東西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Log-Structured Merge-Tree]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/15/log-structured-merge-tree/"/>
    <updated>2015-06-15T23:21:36+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/15/log-structured-merge-tree</id>
    <content type="html"><![CDATA[<!-- more -->


<p>The log-structured merge-tree (LSM-tree) 在 SSD 上面的優化。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Functional Reactive Programming]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/14/functional-reactive-programming/"/>
    <updated>2015-06-14T23:08:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/14/functional-reactive-programming</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://elm-lang.org/">Elm</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON-LD 用途]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/13/json-ld-uses/"/>
    <updated>2015-06-13T23:04:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/13/json-ld-uses</id>
    <content type="html"><![CDATA[<!-- more -->


<p>JSON-LD 是為了增強 JSON 而設計出來的，原本 JSON 只是單純的 key-value 的存放格式，光從 JSON 的資料上式無法準確
得知這個欄位代表的意思，然而藉由 JSON-LD 可以原本單純的資料讓帶有意義。</p>

<h2>用途</h2>

<h3>Search Engine</h3>

<p>原本像是 Google ,Yahoo 之類的搜尋引擎在抓取網站內容時，根據包裹資料的標籤可以了解資料的重要程度，卻無法了解資料代表的意義，
然而透過類似 JSON-LD 的 MicroData可以讓搜尋引擎更能讓使用者找到想要的情報。</p>

<h3>Web Api</h3>

<p>一些提供 Restful API 的 web service，如果透過使用 JSON-LD 便可以讓接收端更有效的處理資料內容，
也許透過抽換 JSON-LD 的內容就可以改變資料處理方式。</p>

<h3>Data Store</h3>

<p>Web Components + JSON-LD。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QCon 北京 2015]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/12/qconbei-jing-2015/"/>
    <updated>2015-06-12T23:20:42+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/12/qconbei-jing-2015</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://qconbeijing.com/schedule">QCon 北京 2015</a></p>

<h3>　有興趣的議程</h3>

<ol>
<li>异步处理在分布式系统中的优化作用</li>
<li>全栈工程师的自我修养</li>
<li>极致的Hybrid—从阿里「去啊」的架构演变看Web与Native的融合</li>
<li>微博在大规模、高负载系统中的典型问题</li>
<li>Lua 在 Nginx 中的应用</li>
<li>Native 和 Web 融合</li>
<li>九个月实现破亿用户的可扩展架构</li>
<li>基于 Erlang/OTP 构建大规模实时系统</li>
<li>PHP7 - New engine for good old train</li>
<li>基于SQL的秒杀解决方案</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[socket.io Failed: Connection Closed]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/11/socket-dot-io-failed-connection-closed/"/>
    <updated>2015-06-11T22:35:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/11/socket-dot-io-failed-connection-closed</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天在使用新版的 Socket.io 的時候遇到了一個問題，當我使用 mulit-node 的模式時，在瀏覽器的控制台會出現下面這段錯誤，</p>

<pre><code>failed: Connection closed before receiving a handshake response
</code></pre>

<p>後來在 socket.io 的 github 也有看到人 po 出相同的 issue，之後看了 issue 下面的回應似乎是 Sticky Session 的問題，但是我
是在同一台機器上使用 cluster 模組 fork 出多個子進程，這樣 Sticky Session 是否有用還需要研究和測試。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安裝和使用 Ceph]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/10/install-ceph-and-use-ceph/"/>
    <updated>2015-06-10T22:10:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/10/install-ceph-and-use-ceph</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>環境</h3>

<p>ubuntu 14.04 LTS</p>

<h3>安裝</h3>

<pre><code>把 ceph 的 package 加入
wget -q -O- https://raw.github.com/ceph/ceph/master/keys/release.asc | sudo apt-key add -
echo deb http://ceph.com/debian/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list

更新 index 和安裝 ceph
sudo apt-get update &amp;&amp; sudo apt-get install ceph
</code></pre>

<h4>建立設定檔</h4>

<pre><code>vim /etc/ceph/ceph.conf

[osd]
    osd journal size = 1000
    filestore xattr use omap = true

[mon.a]

    host = {hostname}
    mon addr = {ip-address}:6789

[osd.0]
    host = {hostname}

[osd.1]
    host = {hostname}

[mds.a]
    host = {hostname}
</code></pre>

<h4>建立資料夾</h4>

<pre><code>sudo mkdir /var/lib/ceph/osd/ceph-0
sudo mkdir /var/lib/ceph/osd/ceph-1
sudo mkdir /var/lib/ceph/mon/ceph-a
sudo mkdir /var/lib/ceph/mds/ceph-a

cd /etc/ceph
sudo mkcephfs -a -c /etc/ceph/ceph.conf -k ceph.keyring
</code></pre>

<h3>使用</h3>

<p>根據官網的安裝方式很簡單，但是要啟動的時候遇到一些問題，下面列了幾個遇到的問題。</p>

<pre><code>Error ENOENT: osd.0 does not exist.  create it before updating the crush map
ceph osd create

ceph health
HEALTH_WARN 384 pgs incomplete; 384 pgs stuck inactive; 384 pgs stuck unclean
ceph pg dump_stuck stale &amp;&amp; ceph pg dump_stuck inactive &amp;&amp; ceph pg dump_stuck unclean

HEALTH_WARN 384 pgs incomplete; 384 pgs stale; 384 pgs stuck inactive; 384 pgs stuck unclean; 35 requests are blocked &gt; 32 sec

HEALTH_WARN 384 pgs incomplete; 384 pgs stuck inactive; 384 pgs stuck unclean; 35 requests are blocked &gt; 32 sec; mon.a low disk space
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quadtrees and Hilbert Curves]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/09/quadtrees-and-hilbert-curves/"/>
    <updated>2015-06-09T23:41:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/09/quadtrees-and-hilbert-curves</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://blog.notdot.net/2009/11/Damn-Cool-Algorithms-Spatial-indexing-with-Quadtrees-and-Hilbert-Curves">Damn Cool Algorithms: Spatial indexing with Quadtrees and Hilbert Curves</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Material Design Guide]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/08/material-design/"/>
    <updated>2015-06-08T21:57:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/08/material-design</id>
    <content type="html"><![CDATA[<!-- more -->


<p>[Google Material Design 原版]</p>

<p><a href="https://www.gitbook.com/book/wcc723/google_design_translate/details">Google Material Design 正體中文版</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2015 Day3]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/07/pycon-2015-day3/"/>
    <updated>2015-06-07T21:13:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/07/pycon-2015-day3</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Crossing Language Barriers with Julia, SciPy,IPython</h3>

<p>主要在講 Julia。</p>

<h3>Click Fraud Detection in the Mobile Advertising Using Python</h3>

<h4>Machine Learning</h4>

<p>Model Training</p>

<p>Historical Ad traffic</p>

<p>Bid Calculation</p>

<h4>Ad Network Quarity</h4>

<p>Google Ad traffic Quality Resource Center</p>

<p>Definition of invalid click activity</p>

<p>主要是偵測無效的點擊</p>

<h3>工程師沒告訴設計師的事 / Happy Together: Designer and Programmer</h3>

<p>主要介紹 diazo 的用法。</p>

<h3>Python與電子設計自動化：用愛與堅持實現專業</h3>

<p>講者介紹關於他自己開發的軟體和介紹一些演算法。</p>

<h3>Keynote Andy Terrel</h3>

<p>主要在講資料科學，講者是跟 <a href="http://continuum.io/">continuum</a> 有關的開發者，這場如果對資料科學沒興趣
應該會廳的很累。</p>

<h3>Machine learning in Finance using Python</h3>

<p>模式辨識</p>

<p>sentiment analysis</p>

<p>credit analytics</p>

<p>funancial forecasting</p>

<p>portfolio allocation</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2015 Day2]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/06/pycon-2015-day2/"/>
    <updated>2015-06-06T20:24:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/06/pycon-2015-day2</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Static Typeing in Python?</h3>

<p>這位講者是 Cython 的貢獻者</p>

<p>Gradual typing</p>

<h3>Global Interpreter Lock: Episode I - Break the Seal</h3>

<p>主要是要處理多 thread 和 多 process 會遇到的問題。</p>

<h4>GIL over Multi-Processor</h4>

<h4>multiprocessing : process pool</h4>

<p>further observations</p>

<p>GIL battle</p>

<h4>Release the GIL</h4>

<h4>Cooperative multitasking</h4>

<h3>Python &amp; LLVM</h3>

<p>讓 python 跑在 LLVM 上面</p>

<p>介紹 LLVM 的架構和歷史</p>

<p>LLVM 3.1 開始有支援 python</p>

<p><a href="www.llvmpy.org">llvmpy</a></p>

<p>只有支援 LLVM 3.3</p>

<p>換用 llvmlite</p>

<p><a href="http://continuum.io/">continuum</a></p>

<p><a href="http://lldb.llvm.org/">The LLDB Debugger</a></p>

<h3>Python 讓你的眼睛聽得見</h3>

<p>唇語辨識</p>

<p>McGurk 效應</p>

<p>使用 opencv 實作影像處理抓出</p>

<p>Haar features</p>

<p>Adaboost</p>

<h3>Theano : A Mathematical Expression Compiler</h3>

<p>Theano Goal</p>

<p>Theano 一些使用方法</p>

<h3>How to build a recommendation system with python</h3>

<p>講一些算法，好像去年也是類似的簡報?</p>

<h3>ceph 介紹</h3>

<p>一個分散式檔案系統。</p>

<h3>閃電秀</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycon 2015 Day1]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/05/pycon-2015-day1/"/>
    <updated>2015-06-05T21:29:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/05/pycon-2015-day1</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Ecosystem threats to python</h3>

<p>比較 Python 和 Perl 的程式語言排行
最大的麻煩是從 python 2 到 python 3</p>

<p>Java node.js golang</p>

<p>為何使用 Java</p>

<p>為何使用 node.js</p>

<p>為何使用 Golang</p>

<p>為何使用 python</p>

<h3>..when thinking functionally with Python</h3>

<p>function language 如果寫過 Lisp 和 Haskell 就知道光是語法還不夠，</p>

<p>使用 Haskell 介紹 python 的函數式編程</p>

<p>Abstract Data Type</p>

<p>Type Class</p>

<p>Monad</p>

<p>Monadic</p>

<h3>快快樂樂成為 Coding Ninja (by pytest)</h3>

<p>如何撰寫測試</p>

<p>pytest 也可以測試網頁的功能</p>

<p>介紹三種類型的測試</p>

<h3>ZoneIDAProc: Instrumentation-based Dynamic Accessing</h3>

<p>IDAPro 逆向工程 動態追蹤</p>

<p>Linux FUSE</p>

<h3>Kenneth Reitz</h3>

<p>Python Software Fonudation</p>

<h3>教練，我想寫 Django app 給大家用</h3>

<p>介紹 Django</p>

<h3>Tagtoo Task Manager</h3>

<p>Luigi dataflow</p>

<p>他可以自動執行依賴的任務</p>

<p>使用 docker 建立 task 環境</p>

<p>django + webhook</p>

<h3>How to scale up your Web Apps/Sites written by Python?</h3>

<p>只有介紹蠻基本的網站架構和概念，如果要深入還需要用哪些軟體跟技術，</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Music Analysis With Machine Learning]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/04/music-machine-learning/"/>
    <updated>2015-06-04T23:33:41+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/04/music-machine-learning</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://cds.nyu.edu/mixing-music-machine-learning/">Mixing Music with Machine Learning</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[路徑演算法的一些介紹]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/03/routing-algorithm/"/>
    <updated>2015-06-03T22:26:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/03/routing-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://theory.stanford.edu/~amitp/GameProgramming/">GameProgramming</a> 裡面介紹了關於路徑演算法的概念和實現方法，以前在大學主要是學了下面幾種路徑演算法，不過
實際在一些領域有其他更有趣的演算法，上面的網頁主要是介紹在遊戲裡面的路徑演算法，可以拿來複習跟學習一些新的路徑演算法。</p>

<ol>
<li>A*</li>
<li>BFS</li>
<li>DFS</li>
<li>Dijkstra</li>
</ol>

]]></content>
  </entry>
  
</feed>
