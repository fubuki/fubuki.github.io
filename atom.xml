<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-03-28T23:02:46+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Memcached 的 Lru_crawler]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/28/memcached-lru/"/>
    <updated>2015-03-28T22:02:57+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/28/memcached-lru</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在看 <code>memcached</code> 的原始碼看到一個  <code>lru_crawler</code> 的東西，這個東西是為了清除過期的資料存在的，但是一般是不會啟動這個功能，
會有這東西是因為 <code>memcached</code> 的資料在過期的時候不會立即清除，因此記憶體空間不會立即釋放，但是可以透過 <code>lru_crawler</code> 去遍歷 item
然後清除過期的 item。</p>

<p>另外 <code>memcached</code> 的官網有個有去的訊息 <a href="https://github.com/memcached/memcached/pull/97">Work In Progress LRU rework</a>，是替換關於 LRU 的部分目前在測試中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MADV_DONTNEED 和 MADV_FREE]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/27/madv-dontneed-madv-free/"/>
    <updated>2015-03-27T03:05:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/27/madv-dontneed-madv-free</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在看 firefox 記憶體管理的程式碼時看到下面兩個名詞。</p>

<ol>
<li>MADV_DONTNEED 會馬上回收指定的記憶體區塊</li>
<li>MADV_FREE kernel 會延遲回收那些頁面</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Convolutional Neural Network]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/26/convolutional-neural-network/"/>
    <updated>2015-03-26T23:09:25+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/26/convolutional-neural-network</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Convolutional_neural_network">Convolutional neural network</a> 為 Deep Learngin 演算法，最近在做圖像處理的時候用到。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[何謂 AOSP, AOKP, CM ROM]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/25/aosp-aokp-cm-rom/"/>
    <updated>2015-03-25T23:03:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/25/aosp-aokp-cm-rom</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="https://source.android.com/">AOSP</a></li>
<li><a href="https://github.com/AOKP">AOKP</a></li>
<li><a href="http://www.cyanogenmod.org/">CM ROM</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Push 出現 Rpc Error]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/24/git-push-error-rpc/"/>
    <updated>2015-03-24T21:33:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/24/git-push-error-rpc</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在推專案上 Github 的時候出現 rpc error 的問題，後來找網路上的解法是說
 Buffer 開太小了所以需要增加，增加的方法是用下面的指令。</p>

<pre><code>git config http.postBuffer xxxxxxxxx
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手機上的 WebView 性能]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/23/60-fps-mobile-web/"/>
    <updated>2015-03-23T23:32:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/23/60-fps-mobile-web</id>
    <content type="html"><![CDATA[<!-- more -->


<p>[60fps on the mobile web] 關於手機上使用 WebView 建立 APP 需要注意的事情。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kanban 工具:libreboard]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/22/libreboard/"/>
    <updated>2015-03-22T22:38:57+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/22/libreboard</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在網路上有 Trello 可以使用，但是我想在內部建立一個類似的網站，於是找到
<a href="http://git.libreboard.com/libreboard/libreboard/tree/master">libreboard</a> 這個專案，安裝上可以直接透過 docker 架設。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hg-git]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/21/hg-git/"/>
    <updated>2015-03-21T22:20:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/21/hg-git</id>
    <content type="html"><![CDATA[<!-- more -->


<p>目前手上有些別人專案是用 hg 作版本控管的，但是我想推到 Github 上面做備份，看到有一個 <a href="https://github.com/schacon/hg-git">hg-git</a> 的 plugin 可以將
使用 hg 的專案推到 Github 上面。</p>

<pre><code>easy_install hg-git
vim ~/.hgrc

[extensions]
hggit = [path-to]/hg-git/hggit
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[S-expression]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/20/s-expression/"/>
    <updated>2015-03-20T23:07:41+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/20/s-expression</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在學習 LISP 的時候看到的 <a href="http://en.wikipedia.org/wiki/S-expression">S-expression</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSP Concurrency Model]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/19/csp/"/>
    <updated>2015-03-19T01:35:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/19/csp</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在學習 golang 順便了解一下跟 erlang 的不同，然後看到了 golang 是採用 CSP 系統，
之前已經看過了 Actor 系統，這邊就去了解關於 CSP 系統。</p>

<p><code>Communicating sequential processes</code> (CSP) <a href="http://en.wikipedia.org/wiki/Communicating_sequential_processes">wiki</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ketama Hash Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/18/ketama/"/>
    <updated>2015-03-18T22:55:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/18/ketama</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究在 memcached client 端使用 hash 將 key-value 分散到其他機器達到分布式的效果，在 php 的 memcached 就有類似的做法，
所以研究了一下原始碼和官方文件，發現是用一種叫做 <a href="https://github.com/RJ/ketama">ketama</a> 的 consistent hashing 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nmon 監控指令]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/17/nmon/"/>
    <updated>2015-03-17T23:41:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/17/nmon</id>
    <content type="html"><![CDATA[<!-- more -->


<h4>安裝</h4>

<pre><code>apt-get install nmon
</code></pre>

<p>除了 top 以外可以使用 <code>nmon</code> 監控 linux 內部的狀態，提供更詳細的情形。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx 的 Fastcgi_cache 模組]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/16/nginx-fastcgi-cache/"/>
    <updated>2015-03-16T22:44:09+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/16/nginx-fastcgi-cache</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在看 [[Golang] Go言語でサービス作ってる話] 這篇投影片的時候看到了一個東西 <a href="http://wiki.nginx.org/HttpFastcgiModule">fastcgi_cache</a>， 在 fastcgi 層加上 cache，
不過要如何決定哪些要快取，還需要研究這邊有兩篇很有趣的文章可以參考 。</p>

<ol>
<li><a href="http://huoding.com/2014/01/13/321">通过FastCGI Cache实现服务降级</a></li>
<li><a href="http://www.cnxct.com/several-reminder-in-nginx-fastcgi_cache-and-php-session_cache_limiter/">Nginx模块fastcgi_cache的几个注意点</a></li>
</ol>


<p>[[Golang] Go言語でサービス作ってる話]:<a href="http://www.slideshare.net/yoshikazuhashimoto/go-37911621">http://www.slideshare.net/yoshikazuhashimoto/go-37911621</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LINE Developer Conference Part2]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/15/line-developer-conference-part2/"/>
    <updated>2015-03-15T23:31:54+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/15/line-developer-conference-part2</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="http://blog.mogmet.com/line-developer-conference-infra-system-operation/">LINEサービスのシステム運営</a></li>
<li><a href="http://blog.mogmet.com/line-developer-conference-infra-db-high-availability/">LINE DBシステムの高可用性【LINE Developer Conference</a></li>
<li><a href="http://blog.mogmet.com/line-developer-conference-infra-introduce-network-case/">LINEサービスのネットワークインフラ取り組み事例紹介</a></li>
<li><a href="http://blog.mogmet.com/line-developer-conference-infra-talk-after-session/">LINEシステムの裏側を懇親会でいろいろ聞いてきた！</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Distcc 加速編譯 C/C++ 程式]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/14/distcc/"/>
    <updated>2015-03-14T23:41:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/14/distcc</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://ja.wikipedia.org/wiki/Distcc">Distcc</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP 的 Yield]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/13/php-yield/"/>
    <updated>2015-03-13T23:08:34+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/13/php-yield</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前有使用過 python 的 yield 很有趣的功能，然後今天看到一篇投影片 <a href="http://www.slideshare.net/techblogyahoo/phpioyield-phpcon2014">PHPにおけるI/O多重化とyield</a>，裡面介紹一些跟 PHP 異步有關的東西，
但是最重要是 PHP 5.5 有增加支援 yield，詳細看 <a href="http://php.net/manual/en/language.generators.overview.php">Generators overview</a> 這篇。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Traffic Server]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/12/apache-traffic-server/"/>
    <updated>2015-03-12T23:20:42+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/12/apache-traffic-server</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前看到有人介紹在生產環境使用 <code>Apache Traffic Server</code> 建立 CDN，不知道有沒有比 Varnish` 更強大的的地方。</p>

<p><a href="https://blog.zymlinux.net">ATS官方交流博客</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SEnginx]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/11/senginx/"/>
    <updated>2015-03-11T22:29:42+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/11/senginx</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/NeusoftSecurity/SEnginx">SEnginx</a> 在安全方面加強的 nginx 版本，裡面內裝一些跟安全相關的套件。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Skip List]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/10/skip-list/"/>
    <updated>2015-03-10T21:46:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/10/skip-list</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>Skip List</code> 可以跟二元搜尋樹比較的資料結構，</p>

<p><a href="http://stackoverflow.com/questions/256511/skip-list-vs-binary-tree">Skip List vs. Binary Tree</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 LiteIDE 開發 Golang]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/09/liteide/"/>
    <updated>2015-03-09T22:17:36+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/09/liteide</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近找了一些 IDE 最後決定用 <a href="https://github.com/visualfc/liteide">LiteIDE</a> 開發 golang，從官網下載 golang 的 msi 安裝檔，之後就可以用 <a href="https://github.com/visualfc/liteide">LiteIDE</a> 直接編譯程式碼，
另外為了安裝套件需要設定設定 GOPATH 並且還要安裝 git，這樣便可以用 goget 取得需要的套件。</p>
]]></content>
  </entry>
  
</feed>
