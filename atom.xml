<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-11-23T15:08:12+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python Tornado]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/23/python-tornado/"/>
    <updated>2014-11-23T14:43:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/23/python-tornado</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.tornadoweb.org/en/stable/">Tornado</a> 由 python 寫的有著非同步特性的 web 框架，在研究 node.js 的特性時常會看到有人拿 Tornado 作比較。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenContrail Info]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/22/opencontrail-info/"/>
    <updated>2014-11-22T06:32:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/22/opencontrail-info</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.opencontrail.org/">OpenContrail</a> 用來建立 <a href="http://en.wikipedia.org/wiki/Software-defined_networking">SDN</a> 系統的開源工具，這邊有相關文件的 <a href="http://www.sdnap.com/sdnap-post/2886.html">翻譯</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NetBSD 作業系統簡介]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/21/netbsd/"/>
    <updated>2014-11-21T23:48:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/21/netbsd</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.netbsd.org/">NetBSD</a> 用來移植各種裝置的作業系統。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ZABBIX and Hinemos]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/20/zabbix-and-hinemos/"/>
    <updated>2014-11-20T20:00:35+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/20/zabbix-and-hinemos</id>
    <content type="html"><![CDATA[<p>兩種監視系統。</p>

<!-- more -->


<h3>官網</h3>

<ol>
<li><a href="http://www.zabbix.com/">ZABBIX</a></li>
<li><a href="http://www.hinemos.info/">Hinemos</a></li>
</ol>


<h3>ZABBIX</h3>

<p>使用 C 和 PHP 開發。</p>

<h3>Hinemos</h3>

<p>使用 JAVA 開發。</p>

<h3>合併多種監視系統</h3>

<p><a href="http://www.hatohol.org/">hatohol</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 DRBD Pacemaker Corosync 建立高可用架構]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/20/drbd-pacemaker-corosync/"/>
    <updated>2014-11-20T16:15:14+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/20/drbd-pacemaker-corosync</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在一場演討會看到關於建立高可用架構的演講，紀錄一下使用到哪些專案跟相關訊息。</p>

<p><code>【入門】PostgreSQL + Pacemaker + DRBD で高可用性構成を構築してみよう</code></p>

<ol>
<li><a href="http://www.drbd.org/">DRBD</a></li>
<li><a href="http://clusterlabs.org/">Pacemaker</a></li>
<li><a href="http://corosync.github.io/corosync/">Corosync</a></li>
</ol>


<h3>DRBD</h3>

<p>DRBD (Distributed Replicated Block Device)</p>

<h3>Pacemaker</h3>

<p>管理 cluster 的工具。</p>

<h3>Corosync</h3>

<p>通信系統</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 5.7 New Feature]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/19/mysql-5-dot-7-new-feature/"/>
    <updated>2014-11-19T22:13:09+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/19/mysql-5-dot-7-new-feature</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Added Features</h3>

<ol>
<li>提高安全性</li>
<li>SQL mode changes</li>
<li>即時更新表結構</li>
<li>優化 InnoDB</li>
<li>supports stacked diagnostics areas</li>
<li>EXPLAIN 可以顯示更多資訊</li>
<li>觸發</li>
<li>新增 LOG 機制</li>
<li>MySQL Test Suite</li>
<li>mysql client</li>
<li>Database name rewriting with mysqlbinlog</li>
<li>HANDLER with partitioned tables</li>
<li>Index condition pushdown support for partitioned tables</li>
<li>WITHOUT VALIDATION support for ALTER TABLE &hellip; EXCHANGE PARTITION</li>
<li>Master dump thread improvements</li>
<li>Globalization improvements</li>
<li>Changing the replication master without STOP SLAVE</li>
</ol>


<h3>Deprecated Features</h3>

<h3>Removed Features</h3>

<ol>
<li>更改密碼加密格式</li>
<li>移除一些資料類型</li>
<li>使用 <code>Performance Schema tables</code> 取代 <code>SHOW ENGINE INNODB MUTEX</code></li>
</ol>


<p>參考:<a href="http://dev.mysql.com/doc/refman/5.7/en/mysql-nutshell.html">What Is New in MySQL 5.7</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MariaDB Galera Cluster]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/18/mariadb-galera-cluster/"/>
    <updated>2014-11-18T23:42:26+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/18/mariadb-galera-cluster</id>
    <content type="html"><![CDATA[<p>建立 MariaDB Galera Cluster 架構。</p>

<!-- more -->


<p><a href="https://downloads.mariadb.org/mariadb-galera/">mariadb-galera</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[指紋的特徵提取和比對]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/18/fingerprint-recognition/"/>
    <updated>2014-11-18T22:44:37+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/18/fingerprint-recognition</id>
    <content type="html"><![CDATA[<p>列出指紋的特徵提取和比對的相關方法</p>

<!-- more -->


<h3>預處理</h3>

<h3>特徵提取</h3>

<h3>比對</h3>

<ol>
<li>局部場法</li>
<li>特殊點法</li>
<li>傅立葉轉換</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Beanstalkd 設定特定時間執行任務]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/17/beanstalkd-time-mission/"/>
    <updated>2014-11-17T22:30:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/17/beanstalkd-time-mission</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近工作上需要設定在特定時間執行設定好的任務，原本是使用 Linux 的 crontab 定時檢查是否需要執行這個任務，
然後將任務丟給 beanstalkd 執行，後來查詢 beanstalkd 和 celery 都有個 delay 的指令可以讓任務設定過多少時間後才執行。</p>

<p><a href="http://docs.phalconphp.com/en/latest/reference/queue.html">phalcon beanstalkd</a> 裡面有寫在 put 的時候加上額外的參數 <code>array('priority' =&gt; 250, 'delay' =&gt; 10, 'ttr' =&gt; 3600)</code>。<br/>
<a href="http://celery.readthedocs.org/en/latest/faq.html#module-celery.task.base">Can I schedule tasks to execute at a specific time?</a> 裡面有介紹 celey 如何指定時間處理。</p>

<p>此外另外有一個想法是使用 Redis 的 <code>Keyspace Notifications</code>  設定一個鍵值跟過期時間然後使用一個進程監視過期的通知然後就可以設定在
特定時間執行任務。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[阿里客製化的 Jvm]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/16/taobao-jvm/"/>
    <updated>2014-11-16T20:13:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/16/taobao-jvm</id>
    <content type="html"><![CDATA[<p>阿里基於 open jdk 開發的 jvm 版本。</p>

<!-- more -->


<p><a href="http://jvm.taobao.org">Taobao JVM</a> 裡面有如何打入補丁並且編譯的資訊，裡面有優化一些部分不過最主要有用的部分是它多了不少 Log 訊息方便開發者追蹤訊息，
這邊有<a href="http://hellojava.info/?p=336">相關資訊</a> 包含一些阿里優化哪些部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JCConf TW 2014]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/15/jcconf-tw-2014/"/>
    <updated>2014-11-15T21:07:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/15/jcconf-tw-2014</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>JDK8 與模式</h3>

<ol>
<li>Fluent ecorator</li>
<li>In out in out shake it all about</li>
<li>The lonely override</li>
<li>monad</li>
<li>functional reactive</li>
</ol>


<h4>Fluent Decorator</h4>

<p>High order function : 輸入函式 輸出函式<br/>
Lamda : code as data<br/>
ThreadLocal<br/>
使用 withInitial</p>

<h4>Monad Patterns</h4>

<p>Optional<br/>
flatMap</p>

<h4>Functional Reactive</h4>

<p>很有趣的東西</p>

<h3>Java 常見問題排查方法</h3>

<h4>類衝突問題</h4>

<h4>OOM Out of Memory</h4>

<p>工具</p>

<ol>
<li>jstack</li>
<li>btrace</li>
<li>jmap</li>
<li>google perftools</li>
</ol>


<h4>CPU 利用率問題</h4>

<h4>應用沒響應問題</h4>

<h4>分布式環境下應用交互超時問題</h4>

<p><a href="http://www.slideshare.net/terryice/eagleeye-with-taobaojavaone">EagleEye</a></p>

<h4>Java 進程異常退出問題</h4>

<h3>EventBus and Reactive Programming on Android</h3>

<h4>痛點</h4>

<ol>
<li>Android AsyncTask</li>
<li>Loader</li>
<li>Thread</li>
<li>Callback 海</li>
</ol>


<h4>類似的東西</h4>

<ol>
<li>event-driven programming</li>
<li>obsever pattern</li>
<li>pub/sub pattern</li>
<li>dataflow programming</li>
</ol>


<p><a href="https://github.com/ReactiveX/RxJava">RxJava</a></p>

<h4>library</h4>

<ol>
<li>Otto from Square</li>
<li>EventBus from greenrobot</li>
</ol>


<h4>Sticky Events</h4>

<h3>老舊 Web 上雲端</h3>

<p>ActiveCache</p>

<p>無法維護的 WEB 專案的尊稱</p>

<p>Crash 蹺蹺板</p>

<p>guava CacheLoader</p>

<p>Cached Refresh Schedule</p>

<h3>Simplify Multi-Tenant Queries in ORM Frameworks</h3>

<ol>
<li>Separate Database 多資料庫</li>
<li>Separate Schema  多表</li>
<li>Discriminator Column 藉由欄位區分</li>
</ol>


<h4>ORM framework</h4>

<p>JPA
Hibernate
EclipseLink</p>

<h3>阿里 JVM 之路</h3>

<h3>性能優化</h3>

<ol>
<li>Intrinsic</li>
<li>CHIH &ndash; Off-Heap</li>
<li>JFR 分析內部事件進行優化</li>
</ol>


<h4>JAVA 方法</h4>

<ul>
<li>Pure Java

<ul>
<li>JIT</li>
<li>Intrinsic</li>
</ul>
</li>
<li>JNI

<ul>
<li>開銷大，效率低</li>
</ul>
</li>
</ul>


<p>Intrinsic 主要是將一些程式碼直接使用 CPU 指令執行</p>

<h4>GCIH</h4>

<ol>
<li>Garbage Collector Invisable Heap</li>
<li>讓 JVM 進程共享 GCIH 的資料</li>
<li>限制 只能唯讀 如果是可寫會有問題</li>
</ol>


<h4>Java Flight Recorder</h4>

<h4>種類</h4>

<ol>
<li>gc 相關</li>
<li>線程同步相關</li>
<li>JIT 相關</li>
<li>類加載</li>
<li>VMOperation</li>
</ol>


<p>在 OpenJDK 已有比較粗糙的實現</p>

<p>如何實現</p>

<h3>故障排查</h3>

<ol>
<li>增加可配置參數 新增一些統計數據</li>
<li>與外部工具結合</li>
</ol>


<h3>回饋社區</h3>

<ol>
<li>Bug Fix</li>
<li>阿里客製化的部分</li>
</ol>


<h3>Apache Kafka: A high-throughput distributed messaging system</h3>

<p>介紹 Kafka 的特色</p>

<p>Kafka 為何快</p>

<p>Sequential vs Random</p>

<p>In-Process Cache vs Page Cache</p>

<p>Application Copy vs Zero Copying</p>

<p>Constant Time</p>

<p>apace-storm vs spark streaming</p>

<h4>一些參考文章</h4>

<p>The Log: What every software engineer should know about real-time data&rsquo;s unifying abstraction</p>

<h3>OpenJDK vs. Dalvik/ART virtual machine</h3>

<p>從 Maxine VM 理解高效能 Java 虛擬機器運作原理</p>

<p>Self VM Strongtalk vm hotspot vm cldc-hi</p>

<p>說明了 JVM 的歷史</p>

<p>重點在最佳化</p>

<p>Runtime overhead Interpreter</p>

<p>Dalvik VM in a nutshell</p>

<p>Dalvik is Register-based</p>

<p>Optimizing Dispatch</p>

<p>dexopt</p>

<p>Dalvik vs. ART</p>

<h3>透過 ActiveMQ 在 Raspberry Pi 上的物聯網應用</h3>

<p>介紹一些物聯網的協定
1. AMQP
2. MQTT
3. XMPP
4. STOMP</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fastsocket]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/14/fastsocket/"/>
    <updated>2014-11-14T21:29:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/14/fastsocket</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/fastos/fastsocket">fastsocket</a> 是由新浪和清華一起開發的專案，可以提高網路 IO 的效率，雖然是蠻新的專案但是從 Github 已經看到不少人關注，不過最主要的是
不需要更改上層應用程式的結構就可以使用這套系統，另外目前有新浪使用在生產環境下預計未來會慢慢提升使用率。</p>

<p>目前下面三個專案可以順利跑在 <a href="https://github.com/fastos/fastsocket">fastsocket</a> 下。</p>

<pre><code>1. haproxy
2. nginx (Do disable accept mutex)
3. lighttpd
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kanban管理]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/13/kanbanguan-li/"/>
    <updated>2014-11-13T21:46:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/13/kanbanguan-li</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>什麼是 Kanban</h3>

<p>之前有使用 <a href="https://trello.com">Trello</a> 後來可以查到了 Kanban 這個專案管理方式，Kanban 管理源自豐田生產系統，重點在於 JIT 這個 Pull 管理概念，
為了讓整個專案流程能夠順暢進行。</p>

<h3>看板種類</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何安裝 Snort]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/12/snort-install/"/>
    <updated>2014-11-12T21:26:49+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/12/snort-install</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://www.snort.org/">snort</a> 是一個入侵偵測系統，在網路上有一些現成的規則檔載入到 snort，也可以自行撰寫需要的規則。</p>

<h3>下載 snort 和 daq。</h3>

<pre><code>wget https://www.snort.org/downloads/snort/daq-2.0.4.tar.gz
wget https://www.snort.org/downloads/snort/snort-2.9.7.0.tar.gz
</code></pre>

<h3>安裝 libdnet</h3>

<p>在 ubuntu 底下安裝時會發現需要比較新的 <a href="https://code.google.com/p/libdnet/">libdnet</a> 版本，使用 <a href="http://www.ibm.com/developerworks/cn/linux/l-cn-checkinstall/">checkinstall</a> 建立 deb 檔後安裝。</p>

<h3>安裝 daq 和 snort</h3>

<h3>下載官方 RULE</h3>

<pre><code>wget https://www.snort.org/rules/community
tar -xvfz community.tar.gz -C /etc/snort/rules
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[P2P NAT 穿越技術]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/11/p2p-nat/"/>
    <updated>2014-11-11T23:09:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/11/p2p-nat</id>
    <content type="html"><![CDATA[<p>P2P 在 NAT 環境的穿越技術。</p>

<!-- more -->


<h3>NAT 有哪些類型</h3>

<ol>
<li>Full Cone NAT</li>
<li>Restricted Cone NAT</li>
<li>Port Restricted Cone NAT</li>
<li>Symmetric NAT</li>
</ol>


<h3>NAT 穿越技術</h3>

<ol>
<li>ALG</li>
<li>MIDCOM</li>
<li>STUN</li>
<li>TURN</li>
<li>FullProxy</li>
<li>ICE</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP One-Time Passwords]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/10/php-one-time-passwords/"/>
    <updated>2014-11-10T22:02:49+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/10/php-one-time-passwords</id>
    <content type="html"><![CDATA[<p>使用 PHP 實現 One-Time Passwords (OTP) 。</p>

<!-- more -->


<h3>什麼是 OTP</h3>

<p>OTP 簡單說是每次使用帳密登入都是使用密碼產生器產生一次性密碼，這樣比起傳統的密碼安全許多，
但是需要額外裝置建構這個系統，目前似乎有人使用 email 和 sms 驗證。</p>

<h3>RFC 文件</h3>

<ol>
<li><a href="http://tools.ietf.org/html/rfc2289">RFC 2289</a></li>
<li><a href="http://tools.ietf.org/html/rfc1760">RFC 1760</a></li>
<li><a href="http://tools.ietf.org/html/rfc4226">RFC 4226</a></li>
<li><a href="http://tools.ietf.org/html/rfc6238">RFC 6238</a></li>
</ol>


<h3>相關專案</h3>

<ol>
<li><a href="http://sourceforge.net/projects/php-otp/">PHP One-Time Passwords</a></li>
<li><a href="https://github.com/rbakels/oath-php">oath-php</a></li>
<li><a href="http://motp.sourceforge.net/">Mobile-OTP</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP: Thread-Safe Resource Manager]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/09/php-thread-safe-resource-manager/"/>
    <updated>2014-11-09T21:18:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/09/php-thread-safe-resource-manager</id>
    <content type="html"><![CDATA[<p>PHP 的執行緒安全資源管理機制。</p>

<!-- more -->


<p><a href="http://blog.codinglabs.org/articles/zend-thread-safety.html">PHP中的线程安全</a>
<a href="http://www.54chen.com/php-tech/what-is-tsrmls_cc.html">究竟什么是TSRMLS_CC？</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Erlang : Open Telecom Platform]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/08/erlang-open-telecom-platform/"/>
    <updated>2014-11-08T17:24:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/08/erlang-open-telecom-platform</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>open telecom platform  (OTP)  是什麼</h3>

<p>用來開發 erlang 的應用程式的一個平台，可以讓開發者建立一個用來開發分布式、高可用的應用程式。</p>

<h3>OTP 包含哪些項目</h3>

<ol>
<li>erlang 的直譯器</li>
<li>erlang 的編譯器</li>
<li>通訊協定</li>
<li><a href="http://en.wikipedia.org/wiki/Object_Request_Broker">Corba Object Request Broker</a></li>
<li>static analysis tool called Dialyzer</li>
<li><a href="http://en.wikipedia.org/wiki/Mnesia">Mnesia</a> 一個資料庫</li>
<li>一些函式庫</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guard Clause and Nested Structure]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/07/guard-clause-and-nested-structure/"/>
    <updated>2014-11-07T08:18:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/07/guard-clause-and-nested-structure</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在一個函數裡面通常會有多個 if else 的條件子句，這時會有下面兩種寫法。</p>

<h3>Guard Clause</h3>

<p>Guard 有著防禦的意思，是在條件子句中直接離開函數，每個條件子句都是同一個階層。</p>

<pre><code>if (xxx) {
    return;
}

if (yyy) {
    return 
}

return;
</code></pre>

<h3>Nested Structure</h3>

<p>在一個條件子句中還有多層的條件子句，因此會看到下面這種情形，導致之後別人維護會很難看懂整個程式的。</p>

<pre><code>if (x == 1) {
    // do something
    if(y == 3) {
        // do something
        if(x == 4) {
            // do something
        } else {

        }
    } else {

    }
}
</code></pre>

<h3>感想</h3>

<p>大部分時候我都是用 Guard Clause 的寫法，我覺得盡量減少 <code>if else</code> 的層級看起來比較好懂也比較容易給之後的人維護修改，可以很容易看
出每個條件子句的用途為何。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP 使用 PDO 與 Mysql 進行持久化連接]]></title>
    <link href="http://fubuki.github.io/blog/2014/11/06/pdo-mysql-persistent-connection/"/>
    <updated>2014-11-06T21:58:49+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/11/06/pdo-mysql-persistent-connection</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 PHP 裡面如果使用 PDO 連接 Mysql 有個 <code>PDO::ATTR_PERSISTENT</code> 的選項可以形成 <code>persistent connection</code>，其中的機制是在 PHP script 結束的時候將連線交由背後的進程管理，
如果是使用 fastcgi 就會由 fastcgi 負責管理，另外從 <a href="http://eslizn.com/archives/39/">php持久化连接数据库</a> 的測試結果不管是用 apachehandle 或是 php-fpm 都可以支援持久化連線。</p>

<p>在 <a href="http://stackoverflow.com/questions/3332074/what-are-the-disadvantages-of-using-persistent-connection-in-pdo/5541150#5541150">What are the disadvantages of using persistent connection in PDO</a> 裡面有提到一些持久化連線會導致的問題值得一看，另外在最近同事使用持久化連線的時候遇到了 <code>MySQL server has gone away</code>
的問題，似乎是 PHP 端的持久化連線已經 lost 掉跟 mysql 的連線了但是卻沒有在次跟 mysql  重新連線的關係。</p>
]]></content>
  </entry>
  
</feed>
