<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-09-12T23:51:49+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hippyvm and Hhvm]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/12/hippyvm-and-hhvm/"/>
    <updated>2014-09-12T22:54:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/12/hippyvm-and-hhvm</id>
    <content type="html"><![CDATA[<!-- more -->


<p>以前在研究 Facebook架構的時候看到 <code>hhvm</code> 這個東西，把 PHP 編譯成二進位碼然後運行在虛擬機器上，
而最近又看到另外一款類似的產品 <code>hippyvm</code>，據說比 <code>hhvm</code> 還要快。</p>

<p><code>hhvm</code> 是用 C 和 C++ 撰寫的，而 <code>hippyvm</code> 是用 pypy 撰寫的，不過兩者都是將 PHP 運行在自己的虛擬機器上，
也因此有些基於 zend engine 的插件應該無法直接使用，需要修改源碼才行，這也是當初沒有在工作上採用的原因，
而是使用 phalcon 跟 Zephir 開發專案。</p>

<p>目前在網路可以看到一些關於 hhvm 和 phalcon 之間比較的文章，兩者各有其優點，不過身旁看到的都是使用 phalcon 開發
來提高 PHP 的性能，反而沒看到使用 hhvm 的人，但是不管怎樣這兩者能夠共同發展對 PHP 也是件好事。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The PHP Quality Assurance Toolchain]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/11/the-php-quality-assurance-toolchain/"/>
    <updated>2014-09-11T22:00:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/11/the-php-quality-assurance-toolchain</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在用 持續集成的時候找到這個 <a href="http://phpqatools.org/">The PHP Quality Assurance Toolchain</a> ，裡面介紹不少針對 PHP 開發有用的工具，
能夠用來提高程式碼的品質。</p>

<ol>
<li>PHPUnit</li>
<li>PHPLOC</li>
<li>PHP_CodeSniffer</li>
<li>hhvm-wrapper</li>
<li>vfsStream</li>
<li>PHP_Depend</li>
<li>PHP Copy/Paste Detector</li>
<li>phpDox</li>
<li>Behat</li>
<li>PHP Mess Detector</li>
<li>PHP Dead Code Detector</li>
<li>Jenkins PHP</li>
</ol>


<p>目前有用到的有</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP With Composer]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/10/php-with-composer/"/>
    <updated>2014-09-10T22:52:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/10/php-with-composer</id>
    <content type="html"><![CDATA[<!-- more -->


<p>以前在安裝 PHP 的插件通常是透過 PEAR 安裝的，然後每個插件就要手動一個個安裝，不過現在有 <a href="https://getcomposer.org/">composer</a> 這個相依性管理工具，
用起來跟 NPM 感覺差不多，只要定義好需要用哪些套件和版本就會幫忙安裝好。</p>

<h3>安裝方法</h3>

<pre><code>curl -sS https://getcomposer.org/installer | php  
mv composer.phar /usr/local/bin/composer 
</code></pre>

<h3>基本用法</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分散式系統的簡介]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/09/fen-san-shi-xi-tong-de-jian-jie/"/>
    <updated>2014-09-09T23:01:22+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/09/fen-san-shi-xi-tong-de-jian-jie</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://the-paper-trail.org/blog/distributed-systems-theory-for-the-distributed-systems-engineer/">Distributed systems theory for the distributed systems engineer</a> 這篇文章介紹了一些分散式系統的概念，
可以作為入門看一下裡面提到的東西，作者是回應一個在 twitter 上發問的問題而寫的文章，而在這篇<a href="https://twitter.com/gwenshap/status/497203248332165121">tweet</a>的後面
也有其他可以參考的推文可以去研究研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Cherry-pick]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/08/git-cherry-pick/"/>
    <updated>2014-09-08T22:46:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/08/git-cherry-pick</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在看 <code>Android 核心剖析</code> 時得知一個有趣的命令 <code>git cherry-pick</code> ，似乎是可以取得單獨的 commit 然後
合併到目前的分支，如果專案在多分支開發的時候，有些需要在多個分支加入同一份修改的時候可以使用 <code>git cherry-pick</code>，
避免分支合併到不需要的 commit。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[增強 Sublime Text 2 側欄功能]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/07/zeng-qiang-sublime-text-2-ce-lan-gong-neng/"/>
    <updated>2014-09-07T22:43:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/07/zeng-qiang-sublime-text-2-ce-lan-gong-neng</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近有人問我 Sublime Text 可以不可以搜尋一次搜尋所有檔案，在網路上搜尋之後找到 <a href="https://github.com/titoBouzout/SideBarEnhancements">SideBarEnhancements</a> 這個套件，
但是這個套件在 Package Control 找不到後來才發現現在只有支援 <code>Sublime Text 3</code> ， 如果要安裝可以參考這篇文章 <a href="http://stackoverflow.com/questions/21630440/no-more-sidebarenhacements-in-sublime-text-2">no-more-sidebarenhacements-in-sublime-text-2</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub 設計CSS]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/06/github-she-ji-css/"/>
    <updated>2014-09-06T22:36:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/06/github-she-ji-css</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://markdotto.com/2014/07/23/githubs-css/">GitHub’s CSS</a> 提到 GihHub 本身如何設計他們的 CSS 。文章裡面分成以下幾種部分。</p>

<ul>
<li>Quick facts</li>
<li>Preprocessor</li>
<li>Architecture</li>
<li>Linting</li>
<li>Two bundles</li>
<li>Included via Sprockets</li>
<li>Performance</li>
<li>Documentation</li>
<li>Primer</li>
<li>Refactoring</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mariadb and Tokudb]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/05/mariadb-and-tokudb/"/>
    <updated>2014-09-05T23:49:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/05/mariadb-and-tokudb</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近把虛擬機器上面的 MySQL 轉換成 MariaDB 兩者使用上沒有什麼不同，不過在 MariaDB 的官網上
看到一個沒見過的 TokuDB，查詢之後發現是新的儲存引擎並且也可以用在 MySQL上面，以前主要是使用
InnoDB， 可以比較一下兩者的優缺點也許在設計架構上可以有另外一種選擇。</p>

<p>參考資料</p>

<ol>
<li><a href="http://www.percona.com/blog/2014/06/23/getting-to-know-tokudb-for-mysql/">getting-to-know-tokudb-for-mysql</a></li>
<li>github 上的源碼</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript 記憶體管理]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/04/javascript-ji-yi-ti-guan-li/"/>
    <updated>2014-09-04T23:40:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/04/javascript-ji-yi-ti-guan-li</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看到這篇 <a href="https://speakerdeck.com/addyosmani/javascript-memory-management-masterclass">javascript-memory-management-masterclass</a> ，裡面主要是使用 chrome 作平台說明 Javascript 記憶體管理的部分，
之前在優化 node.js 有很多工具可以觀察記憶體的使用量，但是在優化閱覽器的 js 卻蠻少去研究這一塊，大部分都是盡量減少載入
檔案的數量和大小以及在優化處理 DOM，而這邊文章可以研究一下並且希望也能套用到 IE 身上雖然是不同的 JS 引擎。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp-starter]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/03/gulp-starter/"/>
    <updated>2014-09-03T23:41:02+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/03/gulp-starter</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在開發的時候使用 Grunt 建構專案，而在最近看到 Gulp 這項工具，是在 COSCUP 的議程上看到有人提到，
發現兩者似乎是類似的東西然後引起我的興趣，便從 <a href="https://github.com/greypants/gulp-starter">gulp-starter</a> 開始研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android NDK 環境建立]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/02/android-ndk-huan-jing-jian-li/"/>
    <updated>2014-09-02T23:53:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/02/android-ndk-huan-jing-jian-li</id>
    <content type="html"><![CDATA[<!-- more -->


<p>如何建立 Android 使用 NDK 的環境。</p>

<ol>
<li>ADT</li>
<li>NDK</li>
<li>cygwin</li>
</ol>


<p>下載 Eclipse + ADT 就建立好基本的開發環境，在來下載 NDK 後在 Eclipse 指定 NDK 路徑，原本NDK 在 windows 環境下需要 cygwin 才能編譯。
但是在 R7 之後的版本就內帶編譯環境而不需要 cygwin 的樣子，而舊版的 NDK 可以安裝 <a href="https://code.google.com/p/mini-cygwin/">mini-cygwin</a> 建立編譯環境取代安裝龐大的 cygwin。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github 有趣的功能: Github-cheat-sheet]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/02/github-you-qu-de-gong-neng-github-cheat-sheet/"/>
    <updated>2014-09-02T23:30:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/02/github-you-qu-de-gong-neng-github-cheat-sheet</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://www.gitbook.io/book/snowdream86/github-cheat-sheet?lang=zh">github-cheat-sheet</a> 這本書介紹一些 Github 平常沒有使用的功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Scan 命令]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/01/redis-scan-ming-ling/"/>
    <updated>2014-09-01T23:55:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/01/redis-scan-ming-ling</id>
    <content type="html"><![CDATA[<!-- more -->


<p>redis 新的命令: Scan，跟 KEYS 比起來不會有讓 Server 有阻塞住的問題。</p>

<p><a href="http://chenzhenianqing.cn/articles/1090.html">Redis Scan迭代器遍历操作原理（一）</a><br/>
<a href="http://chenzhenianqing.cn/articles/1101.html">Redis Scan迭代器遍历操作原理（二）</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Memory Allocation]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/01/redis-memory-allocation/"/>
    <updated>2014-09-01T23:42:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/01/redis-memory-allocation</id>
    <content type="html"><![CDATA[<!-- more -->


<p>redis 記憶體分配器，redis 不知道從哪一個版本開始是預設使用 jemalloc，據說效能比預設的 glibc 的還要高，
另外在網路上有人提到使用 TCMalloc 提高 nginx 和 redis的效能。</p>

<ol>
<li>jemalloc</li>
<li>TCMalloc</li>
<li>glibc</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[九月書單]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/31/jiu-yue-shu-dan/"/>
    <updated>2014-08-31T22:55:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/31/jiu-yue-shu-dan</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>erlang programming</li>
<li>資訊視覺圖表－讓資料變好看的大數據時代資料表達術</li>
<li>Specification by Example</li>
<li>编写高质量代码:改善JavaScript程序的188个建议</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Cnpm 建立私有的 Npm 服務]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/30/shi-yong-cnpm-jian-li-si-you-de-npm-fu-wu/"/>
    <updated>2014-08-30T23:40:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/30/shi-yong-cnpm-jian-li-si-you-de-npm-fu-wu</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://cnpmjs.org/">cnpm</a> 可以讓使用者建立給企業用的 npm 服務，由於公司政策的關係有時候連接 npm 服務會有問題，
並且如果有自製的套件有發布到多台機器上會有點麻煩，藉此可以利用 <a href="http://cnpmjs.org/">cnpm</a> 加速下載並且避開一些
機器連網的問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tig 和 Git]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/29/tig-he-git/"/>
    <updated>2014-08-29T23:38:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/29/tig-he-git</id>
    <content type="html"><![CDATA[<!-- more -->


<p>日前在尋找編輯 git commit 的方法時，在一篇<a href="http://qiita.com/suino/items/b0dae7e00bd7165f79ea">文章</a>看到有人提到 <a href="https://github.com/jonas/tig">tig</a> 這個東西，能夠加強 git 在命令列環境
下的操作，目前使用上最好用的是用來 commit 非常方便閱讀，另外一個是<a href="http://blog.hifumi.info/2014/01/18/tigrc/">tigrc</a>這個東西可以用來設定 <a href="https://github.com/jonas/tig">tig</a> 調整
輸出的畫面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitlab 版本控制]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/28/gitlab-ban-ben-kong-zhi/"/>
    <updated>2014-08-28T23:47:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/28/gitlab-ban-ben-kong-zhi</id>
    <content type="html"><![CDATA[<!-- more -->


<p>以前使用 Stash 最為工作上的版本控制系統， 但是需要購買 license，所以就尋找另外一套版本控管系統，
所以就找上了 <a href="https://about.gitlab.com/">gitlab</a> ，之後就搭配 <a href="https://about.gitlab.com/gitlab-ci/">gitlab-ci</a> 建立一個專案工作流程。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 記憶體分析工具]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/27/android-ji-yi-ti-fen-xi-gong-ju/"/>
    <updated>2014-08-27T23:14:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/27/android-ji-yi-ti-fen-xi-gong-ju</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.eclipse.org/mat/">MAT</a> 為 android 的記憶體分析工具，能夠讓開發者將 JAVA HEAP 的內容 dump 出來，
藉此可以檢查哪理是有可能成為 memory leak 的地方。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rebar 備忘錄]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/26/rebar-bei-wang-lu/"/>
    <updated>2014-08-26T23:32:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/26/rebar-bei-wang-lu</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>安裝</h3>

<pre><code>git clone https://github.com/rebar/rebar
cd rebar
./bootstrap
sudo mv rebar /usr/local/bin 
</code></pre>

<h3>建立一個 app</h3>

<pre><code>rebar create-app appid=erl-app
</code></pre>

<h3>編譯</h3>

<pre><code>rebar compile
</code></pre>
]]></content>
  </entry>
  
</feed>
