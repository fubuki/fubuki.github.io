<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-04-11T22:55:42+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OSDC 2014 First Day]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/11/osdc-2014-first-day/"/>
    <updated>2014-04-11T21:23:36+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/11/osdc-2014-first-day</id>
    <content type="html"><![CDATA[<p>記錄一下OSDC 2014第一天參加的議程</p>

<!-- more -->


<h1>How Public Lab collaborates to make environmental science something anyone can do</h1>

<p>這議程讓我印象深刻，利用社群的力量關懷社會，使用風箏和數位相機做出空拍圖取得資料不一定要太昂貴的機器也可以達到相同的效果，
只等待公家機關是不行的，藉由民間的力量關注環境的議題。<br/>
<a href="http://publiclab.org/">publiclab</a></p>

<h1>Using Open Standards and Open Source to Manage a Datacenter</h1>

<p>這個議程介紹一些在管理資料中心時使用哪些技巧和使用哪些開源軟體，講者是在cloudMosa任職的，管理著&#8217;2k+ node&#8217;和 &lsquo;4個data center&#8217;。
1. MRTG
2. snmp
3. specific MIBs
4. RRD tool
5. Munin</p>

<h1>Sharding and Scale-out using MySQL Fabric</h1>

<p>MySQL Fabric是oracle放出來用來擴展mysql的controller，讓程式透過Fabric存取mysql cluster，不過這場演講讓我印象深刻的是他說的英文還不錯，
雖然有些地方還是有日本腔，但比我在日本旅行聽到的英文好的多。</p>

<h1>MySQL Utility</h1>

<p>跟上一場都是Oracle的講者，介紹在mysql workbench裡一個工具&#8217;MySQL Utility&#8217;，裡面有些功能在管理Mysql Cluster比較
Master和Slave資料差別蠻有用的。</p>

<h1>Getting started with Python for Data Science</h1>

<p>介紹Data Science是什麼，列出一些Python 熱門的library和講者關注的library。</p>

<h1>DIY一個Data Mining based的網路流量分析工具</h1>

<p>講者是在康寧護專任職的網管，這場是介紹他寫的流量分析工具，不過似乎是基本的概念實現程式，裡面會有不少BUG，
不過講者有放到網路上可以下載後改進架構。</p>

<ol>
<li>flow 格式的資料</li>
<li>pmacct</li>
<li>mysql</li>
<li>php and perl</li>
<li>mahout</li>
<li>bootstrap and chartjs</li>
</ol>


<h1>Understanding Android Benchmarks</h1>

<p>介紹Android Benchmarks有哪些方式，主要是測試CPU和Memory。</p>

<h1>ProjectTox: Free as in freedom Skype replacement</h1>

<p>之前就有看過ProjectTox，是為了取代Skype的開源通訊軟體，然後之所以有那麼多相關的分支是因為Tox本身是一個library，
其他專案都是基於Tox建立的。</p>

<h1>有 <del>愛</del> RAII 的 C++</h1>

<p>這場比較硬一些，前面在講一些GC Language會遇到的問題並且給一些會導致Memory Leak的範例，
之後在開始介紹C++的<a href="http://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization">RAII</a>，這場主要在講程式關於記憶體方面的問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Osdc 2014 First Day]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/11/osdc-2014-first-day/"/>
    <updated>2014-04-11T00:00:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/11/osdc-2014-first-day</id>
    <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta charset="utf-8"><style>html { font-size: 100%; overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }

body{
  color:#444;
  font-family:Georgia, Palatino, &#8216;Palatino Linotype&#8217;, Times, &#8216;Times New Roman&#8217;,
              &#8220;Hiragino Sans GB&#8221;, &#8220;STXihei&#8221;, &#8220;微软雅黑&#8221;, serif;
  font-size:12px;
  line-height:1.5em;
  background:#fefefe;
  width: 45em;
  margin: 10px auto;
  padding: 1em;
  outline: 1300px solid #FAFAFA;
}

a{ color: #0645ad; text-decoration:none;}
a:visited{ color: #0b0080; }
a:hover{ color: #06e; }
a:active{ color:#faa700; }
a:focus{ outline: thin dotted; }
a:hover, a:active{ outline: 0; }

span.backtick {
  border:1px solid #EAEAEA;
  border-radius:3px;
  background:#F8F8F8;
  padding:0 3px 0 3px;
}

::-moz-selection{background:rgba(255,255,0,0.3);color:#000}
::selection{background:rgba(255,255,0,0.3);color:#000}

a::-moz-selection{background:rgba(255,255,0,0.3);color:#0645ad}
a::selection{background:rgba(255,255,0,0.3);color:#0645ad}

p{
margin:1em 0;
}

img{
max-width:100%;
}

h1,h2,h3,h4,h5,h6{
font-weight:normal;
color:#111;
line-height:1em;
}
h4,h5,h6{ font-weight: bold; }
h1{ font-size:2.5em; }
h2{ font-size:2em; border-bottom:1px solid silver; padding-bottom: 5px; }
h3{ font-size:1.5em; }
h4{ font-size:1.2em; }
h5{ font-size:1em; }
h6{ font-size:0.9em; }

blockquote{
color:#666666;
margin:0;
padding-left: 3em;
border-left: 0.5em #EEE solid;
}
hr { display: block; height: 2px; border: 0; border-top: 1px solid #aaa;border-bottom: 1px solid #eee; margin: 1em 0; padding: 0; }


pre , code, kbd, samp { 
  color: #000; 
  font-family: monospace; 
  font-size: 0.88em; 
  border-radius:3px;
  background-color: #F8F8F8;
  border: 1px solid #CCC; 
}
pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; padding: 5px 12px;}
pre code { border: 0px !important; padding: 0;}
code { padding: 0 3px 0 3px; }

b, strong { font-weight: bold; }

dfn { font-style: italic; }

ins { background: #ff9; color: #000; text-decoration: none; }

mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }
sup { top: -0.5em; }
sub { bottom: -0.25em; }

ul, ol { margin: 1em 0; padding: 0 0 0 2em; }
li p:last-child { margin:0 }
dd { margin: 0 0 0 2em; }

img { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; }

table { border-collapse: collapse; border-spacing: 0; }
td { vertical-align: top; }

@media only screen and (min-width: 480px) {
body{font-size:14px;}
}

@media only screen and (min-width: 768px) {
body{font-size:16px;}
}

@media print {
  * { background: transparent !important; color: black !important; filter:none !important; -ms-filter: none !important; }
  body{font-size:12pt; max-width:100%; outline:none;}
  a, a:visited { text-decoration: underline; }
  hr { height: 1px; border:0; border-bottom:1px solid black; }
  a[href]:after { content: &#8221; (&#8221; attr(href) &#8220;)&#8221;; }
  abbr[title]:after { content: &#8221; (&#8221; attr(title) &#8220;)&#8221;; }
  .ir a:after, a[href^=&#8221;javascript:&#8221;]:after, a[href^=&#8221;#&#8221;]:after { content: &#8220;&#8221;; }
  pre, blockquote { border: 1px solid #999; padding-right: 1em; page-break-inside: avoid; }
  tr, img { page-break-inside: avoid; }
  img { max-width: 100% !important; }
  @page :left { margin: 15mm 20mm 15mm 10mm; }
  @page :right { margin: 15mm 10mm 15mm 20mm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { page-break-after: avoid; }
}
</style><title>2014-04-11-osdc-2014-first-day</title></head><body><hr />
<p>layout: post
title: &#8220;OSDC 2014 first day&#8221;
date: 2014-04-11 21:23:36 +0800
comments: true
categories: [&#8216;open source&#8217;]</p>
<hr />
<p>記錄一下OSDC 2014第一天參加的議程
<!-- more --></p>
<h1 id="how-public-lab-collaborates-to-make-environmental-science-something-anyone-can-do">How Public Lab collaborates to make environmental science something anyone can do</h1>
<p><a href="http://publiclab.org/">publiclab</a> </p>
<h1 id="using-open-standards-and-open-source-to-manage-a-datacenter">Using Open Standards and Open Source to Manage a Datacenter</h1>
<p>這個議程介紹一些在管理資料中心時使用哪些技巧和使用哪些開源軟體，講者是在cloudMosa。
1. </p>
<h1 id="sharding-and-scale-out-using-mysql-fabric">Sharding and Scale-out using MySQL Fabric</h1>
<h1 id="mysql-utility">MySQL Utility</h1>
<h1 id="getting-started-with-python-for-data-science">Getting started with Python for Data Science</h1>
<h1 id="diy-data-mining-based">DIY一個Data Mining based的網路流量分析工具</h1>
<h1 id="understanding-android-benchmarks">Understanding Android Benchmarks</h1>
<h1 id="projecttox-free-as-in-freedom-skype-replacement">ProjectTox: Free as in freedom Skype replacement</h1>
<h1 id="wzxhzdk-1-wzxhzdk-2-raii-c">有 <del>愛</del> RAII 的 C++</h1></body></html>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git-reflog的用法]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/07/git-reflogde-yong-fa/"/>
    <updated>2014-04-07T21:11:57+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/07/git-reflogde-yong-fa</id>
    <content type="html"><![CDATA[<p>之前看到一篇去年的消息Jenkins開發者意外的抹消掉在github上一個月的commit，這跟Github的設定和
使用者本身使用強制推送有關，如果想要知道詳細情形請參照<a href="https://groups.google.com/forum/#!msg/jenkinsci-dev/-myjRIPcVwU/t4nkXONp8qgJ">&lsquo;這裡&rsquo;</a>。</p>

<!-- more -->


<p>不過裡面比較引我注意的是他如何回復被蓋掉的部分，利用git-reflog可以取得被刪除的commit，之後再開出
一個新的分支取回原本的版本，這個跟git-log 的差異在git-log只會顯示過去提交過的記錄，但是reflog會顯示
所有的變更紀錄，下面幾個我比較常用的指令都會紀錄在reflog裡面，藉此如果版本有問題了話更容易回復。</p>

<ul>
<li>branch</li>
<li>commit</li>
<li>checkout</li>
<li>pull</li>
<li>push</li>
<li>merge</li>
<li>clone</li>
<li>branch</li>
<li>stash</li>
</ul>


<h1>git-reflog OPTIONS</h1>

<ul>
<li><p>&mdash;stale-fix</p></li>
<li><p>&mdash;expire=<time></p></li>
<li><p>&mdash;expire-unreachable=<time></p></li>
<li><p>&mdash;all</p></li>
<li><p>&mdash;updateref</p></li>
<li><p>&mdash;rewrite</p></li>
<li><p>&mdash;verbose</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs Flow Control]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/06/nodejs-flow-control/"/>
    <updated>2014-04-06T16:22:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/06/nodejs-flow-control</id>
    <content type="html"><![CDATA[<p>記錄一下流程控制相關的模組。<br/>
1. <a href="https://github.com/creationix/step">step</a> <br/>
2. <a href="https://github.com/kriskowal/q">Q</a><br/>
3. <a href="https://github.com/kriszyp/node-promise">promise</a></p>

<!-- more -->


<p>由於nodejs是非同步的，所以流程控制是很重要的一部分，一般撰寫程式時會等待其他區塊的回傳參數，但是由於非同步的關係所以需要以嵌套的方式
避免所需要的參數尚未回傳就執行下一步的函式導致未知的結果，如此一來就會出現多重嵌套的情形導致程式以後變的難以除錯並且看起來也很醜，所以
有些人提供一些第三方的模組處理流程控制的部分。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs 生產環境]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/05/nodejs-sheng-chan-huan-jing/"/>
    <updated>2014-04-05T21:55:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/05/nodejs-sheng-chan-huan-jing</id>
    <content type="html"><![CDATA[<p>記錄一下nodejs生產環境需要注意的事項。</p>

<!-- more -->


<ol>
<li>nodejs是非同步但是也有一些同步的API(例如讀取檔案)會影響nodejs的運行，要小心使用那些API。</li>
<li>nodejs底層是使用V8引擎可以藉由調整V8的GC策略提升效能。</li>
<li>nodejs建立socket時增加可以建立的socket的數量。</li>
<li>nodejs 有些使用模組是編譯過的，有些是純js撰寫成的，使用二進位編譯後的模組。</li>
<li>在nodejs中事件流的處理會影響程式效能，目前有些用來處理事件流的模組慎選並去使用。</li>
<li>nodejs的session通常使用express處理，預設存放在記憶體內，建議替換到redis或是memcache的資料庫存放。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordNet]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/03/wordnet/"/>
    <updated>2014-04-03T21:38:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/03/wordnet</id>
    <content type="html"><![CDATA[<p>在使用NLTK作詞性分析時，發現可以找出英文同義詞的功能，他是使用<a href="wordnet.princeton.edu">wordnet</a>實現的，wordnet在維基上說是由普林斯頓大學建立的英文字典，
其中有著同義詞集合並且描述之間的關係並且可以自由下載使用，雖然這個只支援英文不過國內似乎有支援中文的專案之後可以下載研究一下。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Projects That Power GitHub]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/02/projects-that-power-github/"/>
    <updated>2014-04-02T21:25:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/02/projects-that-power-github</id>
    <content type="html"><![CDATA[<p>GitHub放出他們自身使用的開源專案，詳細的內容可以在這裡找到<a href="https://github.com/showcases/projects-that-power-github">projects-that-power-github</a>，
裡面有些工作上或是自身有在研究的專案，順便寫一下使用自己在哪些方面。</p>

<!-- more -->


<ol>
<li><a href="https://github.com/defunkt/jquery-pjax">jquery-pjax</a> pushstate + ajax ，之前用來實現網頁無須刷新更新頁面的功能。</li>
<li><a href="https://github.com/elasticsearch/elasticsearch">elasticsearch</a> 開源的搜尋引擎不過還是solr比較常用。</li>
<li><a href="https://github.com/rails/rails">rails</a> 作為web的開發框架用起來還沒有比PHP熟悉。</li>
<li><a href="https://github.com/antirez/redis">redis</a> 工作上使用場景比memcache還多的快取資料庫，除了用在存放一些列表和記數類的資料還有使用他的keyspace和pubsub功能。</li>
<li><a href="https://github.com/jekyll/jekyll">jekyll</a> 目前用來寫blog。</li>
<li><a href="https://github.com/github/hubot">hubot</a> 一個Bot的專案，可以使用coffee script擴充功能。</li>
<li><a href="https://github.com/mbostock/d3">d3</a> 作為前端顯示圖表的函式庫，跟其他相關函式庫混用還蠻方便的。</li>
<li><a href="https://github.com/zeroclipboard/zeroclipboard">zeroclipboard</a> 有時候讓使用者能夠直接複製網頁的內容到剪貼板上</li>
<li><a href="https://github.com/puppetlabs/puppet">puppet</a> 目前正在學習如何用在管理和建置環境。
10 <a href="https://github.com/bower/bower">bower</a> 用來管理網站套件。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[docker.io 和 Vagrant]]></title>
    <link href="http://fubuki.github.io/blog/2014/04/01/docker-dot-io/"/>
    <updated>2014-04-01T21:18:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/04/01/docker-dot-io</id>
    <content type="html"><![CDATA[<p><a href="https://www.docker.io">docker.io</a> 是一種 <a href="http://en.wikipedia.org/wiki/LXC">LXC (LinuX Containers)</a>，是使用go語言撰寫的，似乎可以建立一個獨立虛擬環境，
不過只能在linux下運行，然後上次osdc有人介紹Vagrant，這兩種工具似乎是為了達成相同目的都可以拿來
建立環境。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/30/puppet/"/>
    <updated>2014-03-30T09:35:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/30/puppet</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/puppetlabs/puppet">puppet</a>是用來一套管理工具，官網上是說可以支援 Linux, Unix 和 Windows，使用上可以參考官網的範例，也有人放出自己寫的模組
供其他人參考使用，日後如果需要給小組成員建立開發環境可以使用puppet部署。</p>

<p><a href="http://www.puppetcookbook.com/">puppetcookbook</a><br/>
<a href="https://github.com/jordansissel/puppet-examples">puppet-examples</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CAP理論]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/29/capli-lun/"/>
    <updated>2014-03-29T20:14:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/29/capli-lun</id>
    <content type="html"><![CDATA[<p>CAP理論是關於設計一個分散式計算系統需要考慮的問題。</p>

<!-- more -->


<p>CAP理論可以分為以下三點； <br/>
1. Consistency 節點之間資料的一致性<br/>
2. Availability 如果有節點故障還是可以保證服務是可用的。<br/>
3. Partition tolerance 一個系統因為通信出現問題時造成系統分成多個群體，因而影響系統本身的運行。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modernizr]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/29/modernizr/"/>
    <updated>2014-03-29T20:14:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/29/modernizr</id>
    <content type="html"><![CDATA[<p><a href="http://modernizr.com/">Modernizr</a> 是用來檢測閱覽器是否支援HTML5和CSS 3功能的函式庫，以前通常是偵測閱覽器的版本來決定不過有可能會出問題
，如果直接判斷這個功能能不能使用直接使用一次就不會有例外狀況發生。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PageRank, EdgeRank, PeopleRank]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/26/pagerank-edgerank-peoplerank/"/>
    <updated>2014-03-26T21:22:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/26/pagerank-edgerank-peoplerank</id>
    <content type="html"><![CDATA[<ol>
<li>PageRank</li>
<li>EdgeRank</li>
<li>PeopleRank</li>
</ol>


<!-- more -->


<h1>PagRank</h1>

<p>google對網頁評分的演算法，用來算出網頁的權重，作為網頁排序的要素之一。<br/>
<a href="http://ilpubs.stanford.edu:8090/422/">http://ilpubs.stanford.edu:8090/422/</a></p>

<h1>EdgeRank</h1>

<p>Facebook用來計算要顯示哪些動態給使用者。<br/>
<a href="http://edgerank.net/">http://edgerank.net/</a></p>

<h1>PeopleRank</h1>

<p>類似PageRank，不過是用來測量使用者產出內容的價值。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon Dynamo]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/25/amazon-dynamo/"/>
    <updated>2014-03-25T21:40:25+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/25/amazon-dynamo</id>
    <content type="html"><![CDATA[<p>amazon的 Dynamo架構值得參考，目前常看到的scale機制分成master-slave和Dynamo兩種架構，不過通常master-slave需要
類似zookeeper的機制另外監控，Dynamo卻不需要，必須比較一下兩者之間的差別。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[exports和module.export區別]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/24/exportshe-module-dot-exportqu-bie/"/>
    <updated>2014-03-24T21:19:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/24/exportshe-module-dot-exportqu-bie</id>
    <content type="html"><![CDATA[<p>exports和module.export 在一些library常看到這兩種東西，有些情況下是相同的，
去查網路都有推薦<a href="http://www.hacksparrow.com/node-js-exports-vs-module-exports.html">Node.js Module – exports vs module.exports</a>這篇文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SenseiDB]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/23/senseidb/"/>
    <updated>2014-03-23T21:46:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/23/senseidb</id>
    <content type="html"><![CDATA[<p><a href="http://senseidb.com">sensei</a>是以前在學習hadoop時找到的，是一款跟hadoop集成的搜尋系統，第一次看到是在兩年前，最近在VM發現當時的建立的痕跡，
特此紀錄一下以便日後研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloud9 Ide]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/23/cloud9-ide/"/>
    <updated>2014-03-23T21:41:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/23/cloud9-ide</id>
    <content type="html"><![CDATA[<p><a href="https://c9.io/">cloud9</a>是一款線上整合開發環境一年以前有使用過，當時使用上覺得反應速度不太好就沒有在使用了，
不過可以學一下其中的架構，重要的是有持續維護，希望可以持續下去未來能夠使用閱覽器開發多種語言。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node-gyp Build Fails on NFS Because of Flock]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/23/node-gyp-build-fails-on-nfs-because-of-flock/"/>
    <updated>2014-03-23T00:00:00+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/23/node-gyp-build-fails-on-nfs-because-of-flock</id>
    <content type="html"><![CDATA[<p>在下載一些使用node-gyp編譯的模組會遇到問題，後來發現在一些檔案系統會出問題，可以在這邊<a href="https://github.com/TooTallNate/node-gyp/issues/147">issue</a>找到解答。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Vundle]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/22/vim-vundle/"/>
    <updated>2014-03-22T09:58:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/22/vim-vundle</id>
    <content type="html"><![CDATA[<p>之前安裝Vim的plugin都是去<a href="http://vim-scripts.org/vim/scripts.html">scripts</a>下載然後手動安裝，但是如此設定檔變的複雜後
一來常會遇到沒有刪除乾淨的plugine。<br/>
使用Vundle管理vim，安裝上跟刪除只要透過vundle就很方便也能保持設定檔簡潔，似乎能
搜尋plugin，也能讓vundle去指定連結下載，目前正在試用之後可以上載到github上備份設定檔。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql-udf]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/21/mysql-udf/"/>
    <updated>2014-03-21T23:42:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/21/mysql-udf</id>
    <content type="html"><![CDATA[<p>mysql-udf 是可以讓開發者擴充mysql的功能，之前用來同步solr之間的資料，原本的程式架構太過於混亂
所以無法從程式碼層級同步Solr的資料，因此利用trigger 綁定關於資料庫的操作，如果有新增刪除修改就利用
solr的api更新資料。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Mahout]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/21/apache-mahout/"/>
    <updated>2014-03-21T23:42:37+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/21/apache-mahout</id>
    <content type="html"><![CDATA[<p>似乎跟機器學習有關的專案，內建多種演算法，之前有用過電影評論的資料測試mahout的功能
之後等有空就來實現一些現實生活的例子。</p>
]]></content>
  </entry>
  
</feed>
