<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-09-02T23:38:56+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Github 有趣的功能: Github-cheat-sheet]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/02/github-you-qu-de-gong-neng-github-cheat-sheet/"/>
    <updated>2014-09-02T23:30:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/02/github-you-qu-de-gong-neng-github-cheat-sheet</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://www.gitbook.io/book/snowdream86/github-cheat-sheet?lang=zh">github-cheat-sheet</a> 這本書介紹一些 Github 平常沒有使用的功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Scan 命令]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/01/redis-scan-ming-ling/"/>
    <updated>2014-09-01T23:55:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/01/redis-scan-ming-ling</id>
    <content type="html"><![CDATA[<!-- more -->


<p>redis 新的命令: Scan，跟 KEYS 比起來不會有讓 Server 有阻塞住的問題。</p>

<p><a href="http://chenzhenianqing.cn/articles/1090.html">Redis Scan迭代器遍历操作原理（一）</a><br/>
<a href="http://chenzhenianqing.cn/articles/1101.html">Redis Scan迭代器遍历操作原理（二）</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Memory Allocation]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/01/redis-memory-allocation/"/>
    <updated>2014-09-01T23:42:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/01/redis-memory-allocation</id>
    <content type="html"><![CDATA[<!-- more -->


<p>redis 記憶體分配器，redis 不知道從哪一個版本開始是預設使用 jemalloc，據說效能比預設的 glibc 的還要高，
另外在網路上有人提到使用 TCMalloc 提高 nginx 和 redis的效能。</p>

<ol>
<li>jemalloc</li>
<li>TCMalloc</li>
<li>glibc</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[九月書單]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/31/jiu-yue-shu-dan/"/>
    <updated>2014-08-31T22:55:52+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/31/jiu-yue-shu-dan</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>erlang programming</li>
<li>資訊視覺圖表－讓資料變好看的大數據時代資料表達術</li>
<li>Specification by Example</li>
<li>编写高质量代码:改善JavaScript程序的188个建议</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Cnpm 建立私有的 Npm 服務]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/30/shi-yong-cnpm-jian-li-si-you-de-npm-fu-wu/"/>
    <updated>2014-08-30T23:40:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/30/shi-yong-cnpm-jian-li-si-you-de-npm-fu-wu</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://cnpmjs.org/">cnpm</a> 可以讓使用者建立給企業用的 npm 服務，由於公司政策的關係有時候連接 npm 服務會有問題，
並且如果有自製的套件有發布到多台機器上會有點麻煩，藉此可以利用 <a href="http://cnpmjs.org/">cnpm</a> 加速下載並且避開一些
機器連網的問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tig 和 Git]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/29/tig-he-git/"/>
    <updated>2014-08-29T23:38:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/29/tig-he-git</id>
    <content type="html"><![CDATA[<!-- more -->


<p>日前在尋找編輯 git commit 的方法時，在一篇<a href="http://qiita.com/suino/items/b0dae7e00bd7165f79ea">文章</a>看到有人提到 <a href="https://github.com/jonas/tig">tig</a> 這個東西，能夠加強 git 在命令列環境
下的操作，目前使用上最好用的是用來 commit 非常方便閱讀，另外一個是<a href="http://blog.hifumi.info/2014/01/18/tigrc/">tigrc</a>這個東西可以用來設定 <a href="https://github.com/jonas/tig">tig</a> 調整
輸出的畫面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitlab 版本控制]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/28/gitlab-ban-ben-kong-zhi/"/>
    <updated>2014-08-28T23:47:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/28/gitlab-ban-ben-kong-zhi</id>
    <content type="html"><![CDATA[<!-- more -->


<p>以前使用 Stash 最為工作上的版本控制系統， 但是需要購買 license，所以就尋找另外一套版本控管系統，
所以就找上了 <a href="https://about.gitlab.com/">gitlab</a> ，之後就搭配 <a href="https://about.gitlab.com/gitlab-ci/">gitlab-ci</a> 建立一個專案工作流程。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 記憶體分析工具]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/27/android-ji-yi-ti-fen-xi-gong-ju/"/>
    <updated>2014-08-27T23:14:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/27/android-ji-yi-ti-fen-xi-gong-ju</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.eclipse.org/mat/">MAT</a> 為 android 的記憶體分析工具，能夠讓開發者將 JAVA HEAP 的內容 dump 出來，
藉此可以檢查哪理是有可能成為 memory leak 的地方。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rebar 備忘錄]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/26/rebar-bei-wang-lu/"/>
    <updated>2014-08-26T23:32:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/26/rebar-bei-wang-lu</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>安裝</h3>

<pre><code>git clone https://github.com/rebar/rebar
cd rebar
./bootstrap
sudo mv rebar /usr/local/bin 
</code></pre>

<h3>建立一個 app</h3>

<pre><code>rebar create-app appid=erl-app
</code></pre>

<h3>編譯</h3>

<pre><code>rebar compile
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Erlang分布式開發]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/25/erlangfen-bu-shi-kai-fa/"/>
    <updated>2014-08-25T23:35:02+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/25/erlangfen-bu-shi-kai-fa</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天看完 Erlang教程的快速入門，對照之前研究 rabbitmq 的經驗很快就上手了，參照網路上的說明
寫了一個範例，也看到 Erlang 在建立多個 Process 和通信上都很容易達成，另外也了解到 rabbitmq
 如何透過 .erlang.cookie 讓各個節點形成一個 cluster 的群集。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github NodeLoad]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/24/github-nodeload/"/>
    <updated>2014-08-24T23:18:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/24/github-nodeload</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天在看一本書書名叫 <code>深入淺出 node.js</code> ， 裡面提到一個關於 node.js 在 github 上的應用名叫 <code>nodeload.</code>，使用 node.js 取代原本的
ruby 提供從倉庫下載打包好的原始碼的服務，不過去查 <a href="https://github.com/benschmaus/nodeload">nodeload</a> 的倉庫，似乎很久沒維護了，也許只是找到同名的專案，不過可以在 github的
官方 blog 參考下面兩篇文章讓開發者作為提供類似服務的參考。</p>

<ol>
<li><a href="https://github.com/blog/1089-nodeload-metrics">Nodeload Metrics</a></li>
<li><a href="https://github.com/blog/678-meet-nodeload-the-new-download-server">Meet Nodeload, the new Download server</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 Habits of a Happy Node Hacker]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/23/10-habits-of-a-happy-node-hacker/"/>
    <updated>2014-08-23T22:18:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/23/10-habits-of-a-happy-node-hacker</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看了篇文章，標題是 <a href="https://blog.heroku.com/archives/2014/3/11/node-habits?utm_source=nodeweekly&amp;utm_medium=email#6-use-environment-variables-to-configure-npm&amp;utm_source=ourjs.com">10 Habits of a Happy Node Hacker</a>，裡面列了一些小技巧跟知識大多是跟 npm 這個有關，
那些技巧大多是讓開發者更容易管理專案的依賴庫， 裡面比較重要的我覺得是提到 <code>Harmony</code> 和 <code>Browserify</code> ，其他
的通常在深入使用 npm 的時候或是在開發一個大型專案的就會學到了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[偵測 Android 的 APP 是否被移除了]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/22/zhen-ce-android-de-app-shi-fou-bei-yi-chu-liao/"/>
    <updated>2014-08-22T23:54:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/22/zhen-ce-android-de-app-shi-fou-bei-yi-chu-liao</id>
    <content type="html"><![CDATA[<!-- more -->


<p>日前被要求能不能找出有多少人移除我們開發的 APP，關於這個問題似乎在 google play 的後台好像有
顯示多少人移除 APP，不過沒辦法得知有有哪些人移除，後來在對 GCM 除錯的時候有的人會回傳 <code>not registered</code>
的錯誤訊息，查詢代表的意義是使用者移除的 APP，便可以透過這個方法得知。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Koajs 新的 Web 框架]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/21/koajs-xin-de-web-kuang-jia/"/>
    <updated>2014-08-21T22:58:07+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/21/koajs-xin-de-web-kuang-jia</id>
    <content type="html"><![CDATA[<!-- more -->


<p>由原本 express 的團隊開發的新 web 框架， 主要的特點是使用 yield ，避免 callback 地獄，
看了一下官網的文件如果寫過 express 就可以很容易上手了，在來就是多了解 Cascading 的部分，
似乎可以參考一下這篇<a href="https://docs.djangoproject.com/en/1.6/topics/http/middleware/">文章</a>。</p>

<ol>
<li><a href="https://github.com/koajs/koa">https://github.com/koajs/koa</a></li>
<li><a href="http://koajs.com/">http://koajs.com/</a></li>
<li><a href="http://koajs.cn/">http://koajs.cn/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flickr 如何使用 Redis 的 Sentinel]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/20/flickr-ru-he-shi-yong-redis-de-sentinel/"/>
    <updated>2014-08-20T23:42:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/20/flickr-ru-he-shi-yong-redis-de-sentinel</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天看到一篇關於Flicker 如何使用 redis sentinel 的文章 <a href="http://code.flickr.net/2014/07/31/redis-sentinel-at-flickr/">Redis Sentinel at Flickr</a>， 裡面提到一些
我這邊沒有想過的和遇過的場景，之後擴展 redis 時可以參考避免掉一些問題。</p>

<p>另外 redis的作者針對文章做出回應 <a href="http://antirez.com/news/55">Reply to Aphyr attack to Sentinel</a> ，下面就是作者在文章裡提出的當初開發出 Sentinel 的目的，
也知道會有 <a href="http://code.flickr.net/2014/07/31/redis-sentinel-at-flickr/">Redis Sentinel at Flickr</a> 中提到的問題。</p>

<pre><code>Redis Sentinel is a distributed *monitoring* system, with support for automatic failover.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Softmax Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/19/softmax-algorithm/"/>
    <updated>2014-08-19T23:53:51+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/19/softmax-algorithm</id>
    <content type="html"><![CDATA[<p>解決 Multi-Armed Bandit Problem 的演算法</p>

<!-- more -->


<p><a href="http://en.wikipedia.org/wiki/Softmax_function">Softmax_function</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vSphere Centos 更改網卡]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/18/vsphere-centos-geng-gai-wang-qia/"/>
    <updated>2014-08-18T22:51:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/18/vsphere-centos-geng-gai-wang-qia</id>
    <content type="html"><![CDATA[<!-- more -->


<p>使用 vSphere 的樣板 deploy 一個新的虛擬機器的時候會自動建分配一個 IP 給網卡，但是網卡卻是 eth1也無法直接指定固定 ip 所以需要修改下面這支檔案。</p>

<pre><code>[root@localhost ~]# vim /etc/udev/rules.d/70-persistent-net.rules
</code></pre>

<p>裡面有對應的網卡名稱和 MAC 位址，將對應的網卡名稱改到 eth0 並且將 eth0 MAC 位址修改下面的檔案
裡面，並且設定成 static 和指定 IP 然後重開機可以看到效果了。</p>

<pre><code>[root@localhost ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Breach Browser]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/17/breach-browser/"/>
    <updated>2014-08-17T22:20:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/17/breach-browser</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://breach.cc/">breach</a> 一款開源的閱覽器，從官網上面主打 Modular Hackable Open Source，Open Source 先不提，
其他兩個特色似乎是希望可以讓使用者自行訂製介面並且新增功能，不過 firefox 也能達成類似的功能，
但是我認為這套閱覽器也許能夠發展出自己一套路。</p>

<p>另外吸引我一點是似乎是基於 node.js 開發的，之前有使用過 <a href="https://github.com/rogerwang/node-webkit">node-webkit</a>，可以讓 node.js 搭配
webkit 做出一些有趣應用， 而 <a href="http://breach.cc/">breach</a> 似乎是更高一層的封裝，如果熟悉了話也許能夠實踐一些以前
有趣的想法。</p>

<p><a href="http://breach.cc/2013/09/05/the-experimentation-platform-to-build-a-next-generation-web-browser.html">The Experimentation Platform to Build a Next Generation Web Browser</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tracking.js 臉部辨識的函式庫]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/16/tracking-dot-js-lian-bu-bian-shi-de-han-shi-ku/"/>
    <updated>2014-08-16T23:06:56+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/16/tracking-dot-js-lian-bu-bian-shi-de-han-shi-ku</id>
    <content type="html"><![CDATA[<!-- more -->


<p>日前在 infoq 看到一個跟臉部識別的函式庫 <a href="http://trackingjs.com/">trackingjs</a>，裡面包含了一些圖像處理的演算法，
看官網上的說明和範例可以玩的範圍還蠻大的， 如果可以了話也許能夠把以前使用opencv製作的功能
移植到閱覽器上面，另外 官網上有個 <a href="http://trackingjs.com/examples/color_hexgl.html">racing car</a> 的範例還蠻有趣的，利用這個函式庫寫出一個賽車遊戲。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Web Design]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/15/responsive-web-design/"/>
    <updated>2014-08-15T23:52:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/15/responsive-web-design</id>
    <content type="html"><![CDATA[<p>在網路上看到一篇跟 RWD 有關的文章 <a href="http://mobiforge.com/design-development/mobile-web-content-adaptation-techniques">Mobile web content adaptation techniques</a> 在此紀錄一下。</p>

<!-- more -->


<ol>
<li>RWD</li>
<li>以移動平台為主</li>
<li>漸進增強</li>
<li>Server端檢測技術 Server-side Adaptation</li>
<li>混合方法</li>
</ol>

]]></content>
  </entry>
  
</feed>
