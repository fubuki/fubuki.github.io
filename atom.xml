<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learning Blog]]></title>
  <link href="http://fubuki.github.io/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-07-08T22:27:52+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Browser Reflow Repaint]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/08/reflow-repaint/"/>
    <updated>2015-07-08T20:47:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/08/reflow-repaint</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>reflow</h3>

<p>重排整個瀏覽器的元素，例如當有元素的寬高改變的時候需要將整個 DOM 重新計算。</p>

<h3>repaint</h3>

<p>對單一元素重繪，例如更改字體大小或是顏色。</p>

<ol>
<li><a href="https://developers.google.com/speed/articles/reflow">Minimizing browser reflow</a></li>
<li><a href="http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/">Reflows &amp; Repaints: CSS Performance making your JavaScript slow?</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Conf 2015]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/07/redisconference/"/>
    <updated>2015-07-07T22:24:14+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/07/redisconference</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.redisconference.com/">REDISCONF</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Geo]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/06/redis-geo/"/>
    <updated>2015-07-06T20:31:39+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/06/redis-geo</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在看 redis 的 commit 的時候發現 redis 新增地理資訊的功能，詳細的內容在這邊 <a href="https://matt.sh/redis-geo">redis-geo</a>，
以前在 MySQL 上面做 GIS 時是使用麥卡托投影和度分秒進行處理，之後使用 Mongodb 取代這部分的運算，
接下來看看 <a href="https://matt.sh/redis-geo">redis-geo</a> 在這部分上好不好用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ngxtop 監控 Nginx 的工具]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/05/ngxtop/"/>
    <updated>2015-07-05T22:32:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/05/ngxtop</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/lebinh/ngxtop">ngxtop</a> 監控 nginx 的工具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Html5 的 Video 處理 Rtsp 串流]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/04/html5-video-rtsp/"/>
    <updated>2015-07-04T23:43:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/04/html5-video-rtsp</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/Live_streaming_web_audio_and_video">Live streaming web audio and video</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flood Fill Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/03/flood-fill/"/>
    <updated>2015-07-03T13:58:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/03/flood-fill</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://en.wikipedia.org/wiki/Flood_fill">Flood fill</a> 用來解決 Match 3 Game 的演算法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video Magnification]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/02/see-invisible-motion-hear-silent-sounds/"/>
    <updated>2015-07-02T12:07:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/02/see-invisible-motion-hear-silent-sounds</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在 pycon 2015 的時候有人推薦的一篇關於影像處理的文章 : <a href="https://www.ted.com/talks/michael_rubinstein_see_invisible_motion_hear_silent_sounds_cool_creepy_we_can_t_decide?language=en">See invisible motion, hear silent sounds</a>，
這篇文章重點在於可以清晰辨識影片中的微小變化，因而產生很多功用，其中包括可以藉由臉部顏色的變化偵測到人體
本身的心跳，藉由環境中物體的微小震動還原環境音。</p>

<p><a href="http://people.csail.mit.edu/mrub/vidmag/">Video Magnification</a> 這邊是研究網站，裡面有 Matlab 的程式碼，之後有空轉換成 python 或是 C++ 的程式碼。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[建立一個香蕉分類器]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/01/building-banana-filter/"/>
    <updated>2015-07-01T21:09:22+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/01/building-banana-filter</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://coding-robin.de/2013/07/22/train-your-own-opencv-haar-classifier.html">Train Your Own OpenCV Haar Classifier</a> 使用 opencv 建立一個香蕉分類器。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebAssembly 優化前端性能]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/30/webassembly/"/>
    <updated>2015-06-30T23:08:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/30/webassembly</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/WebAssembly/design">WebAssembly</a> 裡面我比較熟悉的是 Mozilla 出的 asm.js ，限制使用 javascript 中耗效能的操作，並且規定好使用的型別使用這樣的方法
用來優化前端瀏覽器的 javascript 效能，而 <a href="https://github.com/WebAssembly/design">WebAssembly</a> 則是統一各家瀏覽器關於使用類似技術加速的規格。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx vs Apache]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/29/nginx-vs-apache/"/>
    <updated>2015-06-29T22:14:30+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/29/nginx-vs-apache</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="http://qiita.com/sion_cojp/items/edb20a6b87f10e186c23">apacheとnginxの比較表とベンチマーク</a></li>
<li><a href="http://nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/">Inside NGINX: How We Designed for Performance &amp; Scale</a></li>
</ol>


<p>上面第一篇文章是比較 apache 2.4 跟 nginx 之間的差別，另外下面的另一篇是在 nginx 的 blog 的文章，
裡面講解到了關於 nginx 內部機制以及 nginx 為何高效能的文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MMSEG Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/28/mmseg-algorithm/"/>
    <updated>2015-06-28T23:39:08+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/28/mmseg-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://technology.chtsai.org/mmseg/">mmseg</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solr 限制使用者搜尋結果]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/27/solr-document-filter/"/>
    <updated>2015-06-27T23:36:35+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/27/solr-document-filter</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://trello.com/c/5z5PpR4r/50-design-solr-document-level-security-filter-solution">Design Solr document level security filter solution</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wrk Benchmarking Tool]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/26/wrk/"/>
    <updated>2015-06-26T22:47:09+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/26/wrk</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/wg/wrk">wrk</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache 2.2 升級到 2.4 的坑]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/25/apache-2-dot-6/"/>
    <updated>2015-06-25T23:26:04+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/25/apache-2-dot-6</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在家裡的 ubuntu 的虛擬機將 apache 2.2 升級到 2.4 後，很多設定檔都需要更改，並且升級成 2.4 後
順便更改 MPM 的模式從 prefork 改成 event 測試看看效果如何。</p>

<p>在 apache 官網有篇 <a href="http://httpd.apache.org/docs/2.4/upgrading.html">Upgrading to 2.4 from 2.2</a> 從 2.2 到 2.4 需要注意的事項，一些訪問權限和規則都更改了，目前
公司還是使用 <code>apache 2.2</code> 的版本，看起來暫時是不會先更新了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LINE DEVELOPER DAY 2015 Tokyo]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/24/line-developer-day-2015-tokyo/"/>
    <updated>2015-06-24T22:28:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/24/line-developer-day-2015-tokyo</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://developers.linecorp.com/blog/ja/?p=3523">LINE DEVELOPER DAY 2015 Tokyo 動画と資料を公開</a></p>

<p>本年度的 LINE 開發者大會的資料已經放出，在上面的連結裡面有演講的 slide 和影片資料。</p>

<p>其中比較有興趣的是下面這幾篇 slide:</p>

<ol>
<li>LINE Platform Development Chronicle</li>
<li>４年に渡る LINE Android アプリの進化とチャレンジ</li>
<li>Akka ActorとAMQPでLINEのメッセージングパイプラインをリプレースした話</li>
<li>ベイズ推定とDeep Learningを使用したレコメンドエンジン開発</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CQRS Architecture]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/23/cqr-architecture/"/>
    <updated>2015-06-23T00:52:40+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/23/cqr-architecture</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究一些秒殺活動的架構，看到有人提到 <a href="http://martinfowler.com/bliki/CQRS.html">CQRS</a> 這種模式，之前看過國外在金融系統上使用 LMAX 的架構
其實就是一種 <a href="http://martinfowler.com/bliki/CQRS.html">CQRS</a> 模式也就是讀寫分離，讀取和寫入分成兩種架構，然後使用像是 LMAX 裡面提到的 EVENT SOURCE 的模式，
類似 git 裡面的 commit 的概念，將所有的修改視為一種事件存放起來。</p>

<p>這樣的模式通常我會使用 message queue 存放寫入的事件然後利用多個 worker 處理這些寫入事件將資料直接寫入資料庫，所以在某些情形
下負責讀取資料的部分可能會因為延遲寫入導致會查詢不到一些資料。</p>

<p>有些記錄可能會大量更新，哪些部分就放在記憶體中處理，如果有遇到當機之類的災難可能要從 message queue 的部分將資料重新寫回記憶體，
所以有可能需要就 message queue 的事件另外存放一段時間直到資料都寫回到資料庫裡。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wand Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/22/wand-algorithm/"/>
    <updated>2015-06-22T22:25:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/22/wand-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在研究 ssdeep 演算法時另外看到的跟倒排有關的演算法，名為 wand (weak and)，這裡有一篇相關的論文 <code>Efficient Query Evaluation using a Two-Level Retrieval
Process</code> ，使用 wand 在搜尋引擎上可以增加搜尋的速度，先用速度較快的但是模糊較不精準的演算法過濾後，在使用耗時但是精準的演算法對文檔做排序。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Undo (Almost) Anything With Git]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/21/git-undo/"/>
    <updated>2015-06-21T22:11:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/21/git-undo</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/blog/2019-how-to-undo-almost-anything-with-git">How to undo (almost) anything with Git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Infer]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/20/facebook-infer/"/>
    <updated>2015-06-20T23:18:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/20/facebook-infer</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://fbinfer.com/">Infer</a></p>

<ol>
<li>Separation Logic Tutorial</li>
<li>Abductive reasoning</li>
<li>Hoare logic</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitLab Flow]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/19/gitlab-flow/"/>
    <updated>2015-06-19T22:51:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/19/gitlab-flow</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://about.gitlab.com/2014/09/29/gitlab-flow/">gitlab-flow</a></p>
]]></content>
  </entry>
  
</feed>
