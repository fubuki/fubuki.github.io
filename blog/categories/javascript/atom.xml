<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Javascript | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-09-05T23:58:35+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript 記憶體管理]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/04/javascript-ji-yi-ti-guan-li/"/>
    <updated>2014-09-04T23:40:17+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/04/javascript-ji-yi-ti-guan-li</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看到這篇 <a href="https://speakerdeck.com/addyosmani/javascript-memory-management-masterclass">javascript-memory-management-masterclass</a> ，裡面主要是使用 chrome 作平台說明 Javascript 記憶體管理的部分，
之前在優化 node.js 有很多工具可以觀察記憶體的使用量，但是在優化閱覽器的 js 卻蠻少去研究這一塊，大部分都是盡量減少載入
檔案的數量和大小以及在優化處理 DOM，而這邊文章可以研究一下並且希望也能套用到 IE 身上雖然是不同的 JS 引擎。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tracking.js 臉部辨識的函式庫]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/16/tracking-dot-js-lian-bu-bian-shi-de-han-shi-ku/"/>
    <updated>2014-08-16T23:06:56+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/16/tracking-dot-js-lian-bu-bian-shi-de-han-shi-ku</id>
    <content type="html"><![CDATA[<!-- more -->


<p>日前在 infoq 看到一個跟臉部識別的函式庫 <a href="http://trackingjs.com/">trackingjs</a>，裡面包含了一些圖像處理的演算法，
看官網上的說明和範例可以玩的範圍還蠻大的， 如果可以了話也許能夠把以前使用opencv製作的功能
移植到閱覽器上面，另外 官網上有個 <a href="http://trackingjs.com/examples/color_hexgl.html">racing car</a> 的範例還蠻有趣的，利用這個函式庫寫出一個賽車遊戲。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Mobile Vclick , Tap and Click]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/11/jquery-mobile-vclick-tap-and-click/"/>
    <updated>2014-08-11T22:52:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/11/jquery-mobile-vclick-tap-and-click</id>
    <content type="html"><![CDATA[<!-- more -->


<p>工作上有需要製作Mobile Device用的網頁，以前有聽過有些閱覽器有些事件是不太一樣的，特此在這
紀錄一下幾種點擊事件。
可以參考<a href="http://stackoverflow.com/questions/15274809/in-jquery-mobile-whats-the-diff-between-tap-and-vclick">in-jquery-mobile-whats-the-diff-between-tap-and-vclick</a></p>

<h3>Click</h3>

<p>手機和桌面閱覽器都有支援，在 <code>android</code> 會有 Visible delay</p>

<h3>Tap</h3>

<p>只有手機閱覽器支援, no delay</p>

<h3>VClick</h3>

<p>手機和桌面閱覽器都有支援 no delay</p>

<p>目前看到有人同時使用 <code>click</code> 和 <code>vclick</code> 綁定，使用上要注意的應該是 Visible delay。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Big Number]]></title>
    <link href="http://fubuki.github.io/blog/2014/07/16/javascript-big-number/"/>
    <updated>2014-07-16T21:06:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/07/16/javascript-big-number</id>
    <content type="html"><![CDATA[<p>關於在javascript裡面處理大數字的問題。</p>

<!-- more -->


<p>在javascript所有的數字類型都是以double的方式實現的，普通的時候是夠用的不過有時會遇到問題，起因是PHP輸出json格式的字串給閱覽器然後使用javascript解析時，解析完的資料含有超過18位元數字，導致由於精度下降的錯誤結果，然後在PHP裡面沒有錯的原因是他使用String的格式存放但在輸出json格式的時候使用了<code>JSON_NUMERIC_CHECK</code>的參數導致所有的內含數字的字串全都變成數字類型輸出。</p>

<p>之後我查看了JSON.stringify但是沒有參數可以處理這樣的問題，原本想自己寫一個處理JSON字串裡面有特大數字的函式庫，不過網路上已經有類似的函式庫可以使用，在此記錄一下，我是使用<a href="https://github.com/sidorares/json-bigint">json-bigint</a>去處理其他兩個是在找尋函式庫的時候找到的，不過只有第一個似乎比較符合我的需求。</p>

<ol>
<li><a href="https://github.com/sidorares/json-bigint">json-bigint</a></li>
<li><a href="https://github.com/MikeMcl/big.js/">big.js</a></li>
<li><a href="https://github.com/MikeMcl/bignumber.js/">bignumber.js</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phantomjs]]></title>
    <link href="http://fubuki.github.io/blog/2014/05/14/phantomjs/"/>
    <updated>2014-05-14T21:19:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/05/14/phantomjs</id>
    <content type="html"><![CDATA[<p><a href="http://phantomjs.org/">phantomjs</a> 是類似nodejs的工具，都是使用javascript驅動，不過nodejs是使用v8引擎而phatomjs是使用webkit，
而webkit裡面除了js引擎的部分也有包含html渲染的部分，也因此phantomjs能夠生成html的頁面，就像是一個閱覽器。</p>

<p>目前在專案上我最常使用phantomjs於頁面截圖和前端js測試，可以利用phantomjs取得某個網址的頁面然後保存下來，
然後可以製作一個書籤服務並且加上網站截圖或是預覽圖的功能，phantomjs可以和Selenium針對前端作單元測試。</p>

<p>一篇關於webkit的參考資料:<a href="http://www.paulirish.com/2013/webkit-for-developers/">webkit-for-developers</a></p>
]]></content>
  </entry>
  
</feed>
