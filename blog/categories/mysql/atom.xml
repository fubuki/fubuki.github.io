<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Mysql | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-11-17T23:36:37+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mysql MyRocks Engine]]></title>
    <link href="http://fubuki.github.io/blog/2015/11/15/myrocks/"/>
    <updated>2015-11-15T23:23:25+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/11/15/myrocks</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/facebook/mysql-5.6/wiki/MyRocks-advantages-over-InnoDB">MyRocks advantages over InnoDB</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 的 Index Merge Optimization]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/03/mysql-index-merge/"/>
    <updated>2015-05-03T21:27:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/03/mysql-index-merge</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 MySQL 中如果在一個表中有多個 Index 然後 SQL 語句使用到這些 Index ， MySQL 就
會使用 <a href="http://dev.mysql.com/doc/refman/5.0/en/index-merge-optimization.html">Index Merge Optimization</a> 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spider Storage Engine]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/05/spider-storage-engine/"/>
    <updated>2015-03-05T22:31:42+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/05/spider-storage-engine</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天看到一個沒看過的 &lsquo;mysql storage engine&rsquo; 叫 spider，開發者可以透過這個 storage engine 將數據分片，
在 Mariadb 官網的這篇 <a href="https://mariadb.com/kb/en/mariadb/spider-storage-engine-overview/">Spider Storage Engine Overview</a> 有解說怎麼使用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql 顯示進程列表]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/05/mysql-show-process/"/>
    <updated>2015-01-05T22:12:57+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/05/mysql-show-process</id>
    <content type="html"><![CDATA[<!-- more -->


<p>檢查目前 mysql 有多少進程，並且可以看出有多少連線，目前有在跑哪些 sql 和執行了多久，
有時網站變慢可以從列表中觀察是哪些 sql 拖慢系統的速度，另外也可以透過 kill 直接殺掉進程。</p>

<pre><code>show processlist;
show full processlist;
kill
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysqldump 備份資料庫指令]]></title>
    <link href="http://fubuki.github.io/blog/2014/12/29/mysqldump/"/>
    <updated>2014-12-29T21:26:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/12/29/mysqldump</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近幫別人整理資料庫發現資料表的結構設計不當導致資料過多的時候效率變很差，原本更改資料表的結構
但是由於手上沒有 root 權限的帳號，資料庫也不能停機開啟 <code>safe mode</code>，所以只能先刪除資料。</p>

<p>目前 MySQL 資料庫最常用 <a href="http://dev.mysql.com/doc/refman/5.1/en/mysqldump.html">mysqldump</a> 備份，在 MySQL 官網有詳細的解說裡面有很多選項可以使用，但是
目前最常用到的選項是 <code>-single-transaction</code> 和 <code>-lock-all-tables</code>，<code>-single-transaction</code> 是在備份
資料前開啟交易，讓資料能夠盡量完整匯出，而 <code>-lock-all-tables</code> 則是給 MyISAM 這類不支援 transaction
 的資料表所用，他會在備份時 Lock Table 為 READ LOCAL 狀態，只允許 <a href="http://dev.mysql.com/doc/refman/5.0/en/concurrent-inserts.html">Concurrent Inserts</a>。</p>
]]></content>
  </entry>
  
</feed>
