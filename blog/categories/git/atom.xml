<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Git | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-05-09T22:36:15+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Merge-tool]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/17/git-merge-tool/"/>
    <updated>2015-04-17T22:27:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/17/git-merge-tool</id>
    <content type="html"><![CDATA[<!-- more -->


<p>當 git merge 發生衝突的時候可以使用 git merge-tool 呼叫外部的工具來處理發生衝突的部分，下面
是有用到一些工具。</p>

<ol>
<li>KDiff3</li>
<li>P4Merge</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Filter-branch]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/10/filter-branch-git/"/>
    <updated>2015-04-10T23:06:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/10/filter-branch-git</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>git filter-branch‵ 能夠改寫整個專案的歷史，會用到這個是因為以前有人在專案裡面將很多
二進位檔案加入追蹤導致專案過於肥大，另外裡面有些檔案帶有敏感資訊所以必須連 commit 裡面的
訊息全部去除，這時就用到</code>git filter-branch‵ 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Push 出現 Rpc Error]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/24/git-push-error-rpc/"/>
    <updated>2015-03-24T21:33:53+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/24/git-push-error-rpc</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在推專案上 Github 的時候出現 rpc error 的問題，後來找網路上的解法是說
 Buffer 開太小了所以需要增加，增加的方法是用下面的指令。</p>

<pre><code>git config http.postBuffer xxxxxxxxx
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hg-git]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/21/hg-git/"/>
    <updated>2015-03-21T22:20:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/21/hg-git</id>
    <content type="html"><![CDATA[<!-- more -->


<p>目前手上有些別人專案是用 hg 作版本控管的，但是我想推到 Github 上面做備份，看到有一個 <a href="https://github.com/schacon/hg-git">hg-git</a> 的 plugin 可以將
使用 hg 的專案推到 Github 上面。</p>

<pre><code>easy_install hg-git
vim ~/.hgrc

[extensions]
hggit = [path-to]/hg-git/hggit
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Git Patch 的功能]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/22/git-patch/"/>
    <updated>2014-10-22T22:28:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/22/git-patch</id>
    <content type="html"><![CDATA[<!-- more -->


<p>有時需要將一些在本機上開發專案產生的修改部分丟給別人就可以使用 git 的 patch 功能。</p>

<h3>git format-patch</h3>

<p>git 本身用來製作 patch 的指令。</p>

<pre><code>git format-patch
git am xxx.patch
</code></pre>

<h3>git diff patch</h3>

<p>使用 git diff 產生的 patch。</p>

<pre><code>git diff prev_commit commit &gt; patch.diff 
git apply patch.diff 
</code></pre>
]]></content>
  </entry>
  
</feed>
