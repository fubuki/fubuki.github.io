<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Algorithm | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/algorithm/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-02-16T23:54:54+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Data Mining Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/15/data-mining-algorithm/"/>
    <updated>2015-02-15T23:11:19+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/15/data-mining-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li>C4.5</li>
<li>k-Means</li>
<li>SVM</li>
<li>Apriori</li>
<li>EM</li>
<li>PageRank</li>
<li>AdaBoost</li>
<li>kNN</li>
<li>Naive Bayes
10 CART</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KMP AC BF BM 演算法]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/06/kmp-ac-bf/"/>
    <updated>2015-02-06T23:29:44+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/06/kmp-ac-bf</id>
    <content type="html"><![CDATA[<!-- more -->


<p>可以用於字串匹配的問題。</p>

<ol>
<li>Knuth–Morris–Pratt Algorithm</li>
<li>Aho-Corasick Algorithm</li>
<li>Brute Force Algorithm</li>
<li>Boyer-Moore Algorithm</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perfect Hash Function]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/02/perfect-hash-function/"/>
    <updated>2015-02-02T22:44:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/02/perfect-hash-function</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看到 <code>Perfect Hash Function</code> 這個東西，是可以避免 Conflict 的 Hash 函數，這類的函數主要是靜態的集合，但是也有動態的
<a href="http://en.wikipedia.org/wiki/Dynamic_perfect_hashing">Dynamic perfect hashing</a>，目前有看到 <a href="http://www.ibm.com/developerworks/cn/linux/l-gperf.html">使用 gperf 实现高效的 C/C++ 命令行处理</a> 這篇文章是解說 <code>Perfect Hash Function</code> 的應用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HITS Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/18/hits-algorithm/"/>
    <updated>2015-01-18T22:16:05+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/18/hits-algorithm</id>
    <content type="html"><![CDATA[<!-- more -->


<p>HITS(Hyperlink lnduccd Topic Search)算法根據 URL 的演算法，跟 Page Rank 不同的地方是 HITS 針對已搜尋出來了的結果
進行排序，所以會每次的查詢都會計算一次結果。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parallel Sum and Prefix Scan]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/02/parallel-sum-prefix-scan/"/>
    <updated>2015-01-02T23:26:11+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/02/parallel-sum-prefix-scan</id>
    <content type="html"><![CDATA[<!-- more -->


<p>PRAM (Parallel random-access machine)</p>

<p>使用多緒函式庫實踐兩種平行演算法。</p>
]]></content>
  </entry>
  
</feed>
