<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Algorithm | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/algorithm/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-04-25T22:17:00+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mersenne Twister Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/18/mersenne-twister/"/>
    <updated>2015-04-18T23:09:13+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/18/mersenne-twister</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Mersenne Twister 在 PHP 中作為 Pseudorandom number generator。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fuzzy Hashing and Ssdeep]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/09/fuzzy-hashing/"/>
    <updated>2015-04-09T22:03:11+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/09/fuzzy-hashing</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究 webshell 的時候，有提到關於如何偵測 webshell 的方法，其中有介紹一種叫 <code>Fuzzy Hashing</code>
的演算法，一般像 md5 的 hash 方法只要文件有一些變化計算出來的數值就有很大的改變，這樣不利於檢查兩
份文件的相似度，所以才有 <code>Fuzzy Hashing</code>。</p>

<p>而 ssdeep 則是實現 <code>Fuzzy Hashing</code> 的程式，所以可以直接拿來測試手上的加殼程式，來看看效果如何。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ketama Hash Algorithm]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/18/ketama/"/>
    <updated>2015-03-18T22:55:48+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/18/ketama</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究在 memcached client 端使用 hash 將 key-value 分散到其他機器達到分布式的效果，在 php 的 memcached 就有類似的做法，
所以研究了一下原始碼和官方文件，發現是用一種叫做 <a href="https://github.com/RJ/ketama">ketama</a> 的 consistent hashing 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Skip List]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/10/skip-list/"/>
    <updated>2015-03-10T21:46:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/10/skip-list</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>Skip List</code> 可以跟二元搜尋樹比較的資料結構，</p>

<p><a href="http://stackoverflow.com/questions/256511/skip-list-vs-binary-tree">Skip List vs. Binary Tree</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cuckoo Hash]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/20/cuckoo-hash/"/>
    <updated>2015-02-20T22:26:38+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/20/cuckoo-hash</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Cuckoo hash 是用來解決 hash 碰撞的方法。</p>
]]></content>
  </entry>
  
</feed>
