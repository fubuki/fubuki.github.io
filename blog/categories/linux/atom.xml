<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Linux | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-03-13T23:30:07+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux 安裝 Nfs]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/06/linux-nfs/"/>
    <updated>2015-03-06T23:48:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/06/linux-nfs</id>
    <content type="html"><![CDATA[<!-- more -->


<p>記錄在 Centos 上面安裝 nfs server。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Taskset 指令]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/17/linux-taskset/"/>
    <updated>2015-01-17T23:20:43+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/17/linux-taskset</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Linux 有個 taskset 指令可以在多核環境下指定特定的 Process 在某個 CPU 下運行，這個指令是看到有人用在 node.js 腳本上，
由於 node.js 本身如果沒有特別處理是無法發揮多核的效能，所以建立多個 node.js Process 然後個別指定每個 CPU 上面，這樣
就可以將使用到多核的效能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 掛載 Samba 目錄的方法]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/14/linux-mount-samba/"/>
    <updated>2015-01-14T23:19:07+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/14/linux-mount-samba</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近幫人建立一個根據正式機的鏡像系統，需要掛載在多台主機掛載相同的目錄，所以紀錄一下掛載的方法，
以前有用 <code>smbfs</code> 掛載但是比較新的版本似乎只能用 <code>cifs</code>。</p>

<pre><code>mount -t cifs -o username="root",password="toor" //host ip/srv /srv
umount /srv
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Single User Mode 修改 Linux 密碼]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/13/linux-single-user-mode/"/>
    <updated>2015-01-13T22:19:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/13/linux-single-user-mode</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在管理虛擬機的時候有些機器以前人部署的，所以完全無法得知登入密碼，後來透過網路得知 Linux 有個
 <code>Single User Mode</code> 可以讓使用者這個模式不用密碼登入主機，然後就可以透過 <code>passwd</code> 更改密碼。</p>

<p> 要進入 <code>Single User Mode</code> 是要在開機時在 Grub 選單在開機的指令後面加上 single 參數，然後 ctrl + x 開機
 就會進入 <code>Single User Mode</code> ，但是在我的 ubuntu 14.04 LTS 上面測試卻行不通，會顯示 <code>give root password for maintenance single</code>
 這串訊息，這時就要用另外一種方法。</p>

<p> 如果使用 single 參數行不通就換成 <code>rw init=/bin/bash</code>， 然後按下 ctrl + x 開機就會直接進去主機，之後使用 passwd 更改密碼即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 安裝 Zsh]]></title>
    <link href="http://fubuki.github.io/blog/2015/01/12/linux-zsh/"/>
    <updated>2015-01-12T23:26:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/01/12/linux-zsh</id>
    <content type="html"><![CDATA[<!-- more -->


<p>安裝 zsh</p>

<pre><code>apt-get install zsh
</code></pre>

<p>安裝 <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a></p>

<pre><code>wget --no-check-certificate http://install.ohmyz.sh -O - | bash
</code></pre>

<p>重啟後就可以看到效果了，但是有些安裝的命令卻無法使用還需要測試。</p>
]]></content>
  </entry>
  
</feed>
