<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Golang | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/golang/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2016-01-23T21:31:39+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python 遷移到 Golang 的注意事項]]></title>
    <link href="http://fubuki.github.io/blog/2015/09/26/python-golang/"/>
    <updated>2015-09-26T23:43:34+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/09/26/python-golang</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://blog.repustate.com/migrating-code-from-python-to-golang-what-you-need-to-know/">What Python developers need to know before migrating to Go(lang)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Golang Develop Android App]]></title>
    <link href="http://fubuki.github.io/blog/2015/05/18/golang-android/"/>
    <updated>2015-05-18T22:52:54+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/05/18/golang-android</id>
    <content type="html"><![CDATA[<!-- more -->


<p>以前可以使用 C++ 加上 JNI 開發 android app，這樣的好處是在一些需要耗用計算資源的地方使用 C++ 可以提高效能，
然後最近看到可以使用使用 golang 做到相同類似的地方。我是參考這篇 <a href="http://qiita.com/hkurokawa/items/9315162c61830befc547">go.mobile を使った Android 開発のまとめ</a> 文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何使用 Groupcache]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/16/groupcache/"/>
    <updated>2015-04-16T22:31:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/16/groupcache</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Groupcache 與 memcached 的差別</h3>

<p>同樣都是由相同作者開發的，只是 memcached 是使用 C++ 而 <a href="https://github.com/golang/groupcache">groupcache</a> 是使用 golang 開發的，
然後 memcached 是作為獨立一個程式運作的，但是 <a href="https://github.com/golang/groupcache">groupcache</a> 本身就是 <code>client library</code> 和 <code>server</code>，
使用起來反而比較像 sqlite。</p>

<h3>如何使用 Groupcache</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSQ: Message Server]]></title>
    <link href="http://fubuki.github.io/blog/2015/04/06/nsq/"/>
    <updated>2015-04-06T22:33:54+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/04/06/nsq</id>
    <content type="html"><![CDATA[<!-- more -->


<p>紀錄之前看過的一篇 slide <a href="http://www.slideshare.net/guregu/nsqcentric-architecture-gocon-autumn-2014">NSQ-Centric Architecture (GoCon Autumn 2014)</a> ，後端是用 <a href="https://github.com/bitly/nsq">nsq</a> 這個由 golang 撰寫
的 <code>message server</code> ，前端使用 react 這個 framework 建立一個聊天 APP</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 LiteIDE 開發 Golang]]></title>
    <link href="http://fubuki.github.io/blog/2015/03/09/liteide/"/>
    <updated>2015-03-09T22:17:36+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/03/09/liteide</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近找了一些 IDE 最後決定用 <a href="https://github.com/visualfc/liteide">LiteIDE</a> 開發 golang，從官網下載 golang 的 msi 安裝檔，之後就可以用 <a href="https://github.com/visualfc/liteide">LiteIDE</a> 直接編譯程式碼，
另外為了安裝套件需要設定設定 GOPATH 並且還要安裝 git，這樣便可以用 goget 取得需要的套件。</p>
]]></content>
  </entry>
  
</feed>
