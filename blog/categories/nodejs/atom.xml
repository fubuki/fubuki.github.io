<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Nodejs | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/nodejs/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2016-01-12T23:34:31+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Download Npm on Offline Status]]></title>
    <link href="http://fubuki.github.io/blog/2016/01/05/offline-npm/"/>
    <updated>2016-01-05T22:16:08+08:00</updated>
    <id>http://fubuki.github.io/blog/2016/01/05/offline-npm</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://addyosmani.com/blog/using-npm-offline/">Offline installation of npm packages</a></p>

<ol>
<li>local-npm</li>
<li>npm_lazy</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[註解長度跟 Nodejs 效能關係]]></title>
    <link href="http://fubuki.github.io/blog/2015/10/25/nodejs-a-quick-optimization-advice/"/>
    <updated>2015-10-25T22:13:34+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/10/25/nodejs-a-quick-optimization-advice</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://top.fse.guru/nodejs-a-quick-optimization-advice-7353b820c92e#.99rjxrtk1">#NodeJS : A quick optimization advice</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.js 建立 Child Process]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/23/node-dot-js-child-process/"/>
    <updated>2015-02-23T22:49:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/23/node-dot-js-child-process</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在測試將手上一個 node.js 的系統分成好幾個子系統，然後主要的系統就只是去監控子系統
避免當子系統出現問題時導致整個系統出現問題，這邊紀錄一下 node.js 怎麼建立 child process。</p>

<p>以前有用過 node.js 的 cluster 模組去擴展 socket.io 的伺服器，現在是用 <code>child process</code> 模組建立
新的 process 收到處理完成的訊息後就將 process 給殺掉， <code>child process</code> 目前有提供下面幾種方法。</p>

<ol>
<li>spawn</li>
<li>exec</li>
<li>execFile</li>
<li>fork</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node Apns ECONNRESET]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/05/node-js-econnreset/"/>
    <updated>2015-02-05T23:43:26+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/05/node-js-econnreset</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在使用 node-apn 建立推播 Server 的時候遇到了一個問題，如果一段時間沒有發送推播會出現 <code>ECONNRESET</code> 的錯誤訊息，
在使用 node-gcm 的時候不會出現這樣的錯誤訊息，然後在 github 有人也有遇到相同的 <a href="https://github.com/argon/node-apn/issues/137">issue</a>，目前似乎需要設置一個 timeout 主動
斷線後，自行重新連線。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Io.js]]></title>
    <link href="http://fubuki.github.io/blog/2014/12/14/io-dot-js/"/>
    <updated>2014-12-14T22:29:30+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/12/14/io-dot-js</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看到一個消息，出了一個 node.js 的分支 <a href="http://iojs.org/">Io.js</a>，是由原本開發的 node.js 的核心成員另外跳出來的作的，
原因是不滿 <a href="https://www.joyent.com/technology/nodejs">joyent</a> 的管理風格。</p>

<p>目前 node.js 的走向偏向將目前的版本穩定，但是這些核心成員更希望能夠聽取社區的聲音增加新的功能而成立了
<a href="http://nodeforward.org/">nodeforward</a> 然後過不久後就放出 <a href="http://iojs.org/">Io.js</a>，在這邊 <a href="http://blog.izs.me/post/104685388058/io-js">What is io.js?</a> 有寫出他們跳出來做的目的跟未來的方向。</p>
]]></content>
  </entry>
  
</feed>
