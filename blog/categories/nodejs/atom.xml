<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Nodejs | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/nodejs/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-03-09T23:27:22+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sockeio 使用心得]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/09/sockeio-shi-yong-xin-de/"/>
    <updated>2014-03-09T15:57:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/09/sockeio-shi-yong-xin-de</id>
    <content type="html"><![CDATA[<p>記錄一下到目前使用socket.io遇到的問題。</p>

<!-- more -->


<p>使用上是搭配redis對web做出即時推送服務，socket.io會自己幫我們做好與web溝通的部分，接下來就只是
事件驅動的部分。 比較有問題是在於scale out 的部分。</p>

<p>之前使用cluster功能讓nodejs能夠使用到多核心cpu的效能，不過socket.io會重復送出訊息，每個node會跟
redis 訂閱訊息，才會發生這樣的情形，官網上是有用提供一個方案讓各個node透過redis溝通，就不會有上述的
問題發生，不過尚未在高併發的環境下測試，也許會有其他問題。</p>

<p>The Trello Tech Stack 這篇文章最後有提到以下的事情:</p>

<blockquote><p>The Socket.io server currently has some problems with scaling up to more than 10K simultaneous client connections when using multiple processes and the Redis store, and the client has some issues that can cause it to open multiple connections to the same server, or not know that its connection has been severed. There are some issues
with submitting our fixes (hacks!) back to the project – in many cases they only work with WebSockets (the only Socket.io transport we use). We are working to
get those changes which are fit for general consumption ready to submit back to the project.</p></blockquote>

<p>不過這篇<a href="http://blog.trello.com/the-trello-tech-stack/">文章</a>是2012年的事情，還需要仔細研究一下。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Strongloop]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/08/strongloop/"/>
    <updated>2014-03-08T22:14:42+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/08/strongloop</id>
    <content type="html"><![CDATA[<p>之前在網路上無意找到的，幫助使用者建立nodejs的商業環境，
將一些nodejs npm模組和strongloop本身開發的集成的工具。</p>

<!-- more -->


<ul>
<li> Express – a web application framework</li>
<li> Connect – a rich middleware framework</li>
<li> Passport – a simple, unobtrusive authentication</li>
<li> Mongoose – an mongodb object modeling library</li>
<li> Async – higher-order functions and common patterns for asynchronous code</li>
<li> Q – a tool for making and composing asynchronous promises in JavaScript</li>
<li> Request – a simplified HTTP request client</li>
<li> Socket.IO – cross-browser WebSocket for realtime apps</li>
<li> Engine.IO – transport layer for real time data exchange</li>
<li> SL Task Emitter– perform an unknown number of async tasks recursively</li>
<li> SL Config Loader – recursively load config files</li>
<li> SL Module Loader – separate your app into modules loaded by config files</li>
<li> SL MQ – MQ API with cluster integration, implemented over various message queues</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs Tip]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/08/nodejs-tip/"/>
    <updated>2014-03-08T22:11:21+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/08/nodejs-tip</id>
    <content type="html"><![CDATA[<p>整理一些nodejs心得和技巧。</p>

<!-- more -->


<ol>
<li>生產環境使用pm2。</li>
<li>使用 node-inspector 測試。</li>
<li>Async 和 Q 處理非同步的問題。
4  cluster 模組利用到多核心cpu的效能。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[POMELO]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/06/pomelo/"/>
    <updated>2014-03-06T22:41:33+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/06/pomelo</id>
    <content type="html"><![CDATA[<ol>
<li><a href="http://pomelo.netease.com/" title="pomelo官網">pomelo官網</a></li>
<li><a href="https://github.com/NetEase/pomelo" title="pomelo github">pomelo github</a></li>
</ol>


<!-- more -->


<p>之前在閱覽nodejs scale方案時候發現的一個框架，當初看說明似乎是用來建立遊戲伺服器，就沒有在留意了，<br/>
不過最近在研究取代gcm的手機推播方案時在京js 2013看到一篇文章"基于node.js与pomelo的消息推送平台"<br/>
，是用pomelo建立推播平台，在github上也有分散式聊天系統的範例，並且網易似乎是用這個框架建立他們的推播平台，<br/>
看來是值得深入研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error: SSL Error: SELF_SIGNED_CERT_IN_CHAIN' While Using Npm]]></title>
    <link href="http://fubuki.github.io/blog/2014/03/01/error-ssl-error-self-signed-cert-in-chain-while-using-npm/"/>
    <updated>2014-03-01T10:02:19+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/03/01/error-ssl-error-self-signed-cert-in-chain-while-using-npm</id>
    <content type="html"><![CDATA[<p><a href="http://blog.npmjs.org/post/78085451721/npms-self-signed-certificate-is-no-more">http://blog.npmjs.org/post/78085451721/npms-self-signed-certificate-is-no-more</a></p>

<p>npm改版導致的問題，似乎跟SSL有關，可以把SSL關掉不過會有安全上的問題，
所以建議更新npm版本。</p>
]]></content>
  </entry>
  
</feed>
