<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Nodejs | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/nodejs/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-10-27T23:31:59+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用 Domains 處理 node.js 的 Expectation]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/28/shi-yong-domains-chu-li-node-dot-js-de-expectation/"/>
    <updated>2014-09-28T22:47:23+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/28/shi-yong-domains-chu-li-node-dot-js-de-expectation</id>
    <content type="html"><![CDATA[<!-- more -->


<p>寫 node.js 久了之後程式會慢慢變大因此有時會出現 <code>uncaughtException</code> 的問題，由於 node.js 異步的特性所以會無法抓取到錯誤並處理它，
所以在 node.js 0.8 之後出現了 domains 的模組讓開發者使用。</p>

<pre><code>var domain = require('domain');
var d = domain.create();
var serverDomain = domain.create();
serverDomain.run(function() {


});
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.js and Php-fpm]]></title>
    <link href="http://fubuki.github.io/blog/2014/09/21/node-dot-js-and-php-fpm/"/>
    <updated>2014-09-21T22:01:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/09/21/node-dot-js-and-php-fpm</id>
    <content type="html"><![CDATA[<p>php-fpm 實現 fast-cgi 的規格來處理 php script，而 node.js 就可以透過 fast-cgi 執行跟 php-fpm 通信執行 php script。</p>

<!-- more -->


<p>網路上有一些已經時間 node.js 跟 fast-cgi 通信的 library，不過都有點舊，之前有實際跑了一下會有些問題，不過大致上
從別人寫的 library 和 <a href="http://www.fastcgi.com/drupal/node/6?q=node/22">FastCGI Specification</a> 可以了解 fast-cgi 的通信接口，之後可以自己玩玩看。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Cnpm 建立私有的 Npm 服務]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/30/shi-yong-cnpm-jian-li-si-you-de-npm-fu-wu/"/>
    <updated>2014-08-30T23:40:10+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/30/shi-yong-cnpm-jian-li-si-you-de-npm-fu-wu</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://cnpmjs.org/">cnpm</a> 可以讓使用者建立給企業用的 npm 服務，由於公司政策的關係有時候連接 npm 服務會有問題，
並且如果有自製的套件有發布到多台機器上會有點麻煩，藉此可以利用 <a href="http://cnpmjs.org/">cnpm</a> 加速下載並且避開一些
機器連網的問題。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github NodeLoad]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/24/github-nodeload/"/>
    <updated>2014-08-24T23:18:12+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/24/github-nodeload</id>
    <content type="html"><![CDATA[<!-- more -->


<p>今天在看一本書書名叫 <code>深入淺出 node.js</code> ， 裡面提到一個關於 node.js 在 github 上的應用名叫 <code>nodeload.</code>，使用 node.js 取代原本的
ruby 提供從倉庫下載打包好的原始碼的服務，不過去查 <a href="https://github.com/benschmaus/nodeload">nodeload</a> 的倉庫，似乎很久沒維護了，也許只是找到同名的專案，不過可以在 github的
官方 blog 參考下面兩篇文章讓開發者作為提供類似服務的參考。</p>

<ol>
<li><a href="https://github.com/blog/1089-nodeload-metrics">Nodeload Metrics</a></li>
<li><a href="https://github.com/blog/678-meet-nodeload-the-new-download-server">Meet Nodeload, the new Download server</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 Habits of a Happy Node Hacker]]></title>
    <link href="http://fubuki.github.io/blog/2014/08/23/10-habits-of-a-happy-node-hacker/"/>
    <updated>2014-08-23T22:18:55+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/08/23/10-habits-of-a-happy-node-hacker</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近看了篇文章，標題是 <a href="https://blog.heroku.com/archives/2014/3/11/node-habits?utm_source=nodeweekly&amp;utm_medium=email#6-use-environment-variables-to-configure-npm&amp;utm_source=ourjs.com">10 Habits of a Happy Node Hacker</a>，裡面列了一些小技巧跟知識大多是跟 npm 這個有關，
那些技巧大多是讓開發者更容易管理專案的依賴庫， 裡面比較重要的我覺得是提到 <code>Harmony</code> 和 <code>Browserify</code> ，其他
的通常在深入使用 npm 的時候或是在開發一個大型專案的就會學到了。</p>
]]></content>
  </entry>
  
</feed>
