<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Sip | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/sip/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2014-10-29T22:55:09+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[何謂 Back-to-back User Agent ?]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/28/back-to-back-user-agent/"/>
    <updated>2014-10-28T23:49:06+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/28/back-to-back-user-agent</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 RFC3261 裡面有定義何謂 Back-to-back user agent （B2BUA）? 是讓 client 端可以透過 B2BUA 使用 sip 協定建立連線，
然後必須要一直保持連線， 以角色來說就像  FreeSWITCH 一樣，就算是使用 sip 建立連線之後利用 rtp 傳送訊息似乎也需要
 FreeSWITCH 幫忙，我原本以為 FreeSWITCH 只是幫忙建立連線但從規格書上看還是需要 FreeSWTICH 參與對話。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freeswitch 動態更改 Sip 使用者資訊]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/21/freeswitch-xml-curl/"/>
    <updated>2014-10-21T22:29:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/21/freeswitch-xml-curl</id>
    <content type="html"><![CDATA[<!-- more -->


<p>freeswitch 預設是透過將 sip 使用者資訊寫入一份 xml 檔案，不過可以透過一些方法動態增加使用者資訊，
目前可以透過 <code>xml_curl</code> 這個模塊將 freeswitch 一些行為使用 curl 的方式跟外部 server 連接認證使用者資料。</p>

<h4>安裝 xml_curl</h4>

<h4>載入 xml_curl</h4>

<h4>設定 Freeswitch-Contrib</h4>

<h4>動態增加使用者資料</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FreeSWITCH and Asterisk]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/08/freeswitch-and-asterisk/"/>
    <updated>2014-10-08T23:27:46+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/08/freeswitch-and-asterisk</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前在書店找書的時候發現了一本 <code>FreeSWITCH权威指南</code>，因而發現了 <code>FreeSWITCH</code> 這套軟體，跟 Asterisk 一樣可以用來建構
電話系統，然後在<code>FreeSWITCH背后的故事</code>這篇文章裡面有提到為何開發 FreeSWITCH。</p>

<p>Asterisk 和 FreeSWITCH 在網路可以看到不少人在比較，似乎 FreeSWITCH 的效能比較高但是 Asterisk 比較老用的人似乎比較多，
在中國那邊也有一個簡體中文的網站在專門介紹 FreeSWITCH，原本手上的工作是要用 Asterisk 不過有可能轉向使用 FreeSWITCH 試試。</p>

<h3>FreeSWITCH 安裝方法</h3>

<h4>從源碼安裝</h4>

<h4>使用 apt 安裝</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asterisk Pami Pagi]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/07/asterisk-pami-pagi/"/>
    <updated>2014-10-07T23:33:19+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/07/asterisk-pami-pagi</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在研究讓 PHP 控制 Asterisk ，然後看到 <a href="http://www.slideshare.net/mgornstein/phpconf-2013">Phpconf 2013 &ndash; Agile Telephony Applications with PAMI and PAGI</a> 這篇投影片有提到一些可以參考的資料和 Library。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asterisk Realtime Architecture]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/07/asterisk-realtime-architecture/"/>
    <updated>2014-10-07T23:32:11+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/07/asterisk-realtime-architecture</id>
    <content type="html"><![CDATA[<!-- more -->


<p>asterisk 可以透過 ODBC 跟 MySQL 連線然後在 MySQL 動態修改 sip user 的資訊，藉此不需要在 conf 裡面設定 sip user 的資訊。</p>
]]></content>
  </entry>
  
</feed>
