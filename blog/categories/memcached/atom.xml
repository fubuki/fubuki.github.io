<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Memcached | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/memcached/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-03-07T23:45:14+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Memcached Session 問題]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/26/memcached-session/"/>
    <updated>2015-02-26T23:46:27+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/26/memcached-session</id>
    <content type="html"><![CDATA[<!-- more -->


<p>使用 memcached 存放 session 有可能遇到的問題，可以了解一下 memcached 內部的機制，Slab , Page, Chunk 分別代表的意義。</p>

<ol>
<li><a href="http://www.dormando.me/articles/memcached_sessions/">Sessions in Memcached</a></li>
<li><a href="http://dormando.livejournal.com/495593.html">dormando - Cache your sessions. Don&rsquo;t piss off your users</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[樂天的 ROMA]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/25/roma/"/>
    <updated>2015-02-25T23:06:18+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/25/roma</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/roma/roma">ROMA</a> 是樂天基於 Ruby 開發的 key-value 快取伺服器，相容於 memcached 也就是可以透過 memcached 的
函式庫操作 <a href="https://github.com/roma/roma">ROMA</a>。</p>

<p><a href="https://github.com/roma/roma">ROMA</a> 最有趣的部分是他是分散式的系統，去中心化的 PSP 架構，從 <a href="http://roma-kvs.org">ROMA-Project</a> 官網的說明看似乎如果
有一個端點離開群集卻不會失去資料。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemC3 優化 Memcached 讀取效率]]></title>
    <link href="http://fubuki.github.io/blog/2015/02/21/memc3/"/>
    <updated>2015-02-21T20:55:16+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/02/21/memc3</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>MemC3: Compact and Concurrent MemCache with Dumber Caching and Smarter Hashing</code> 這篇論文
提出一些優化 Memcached 的方式，主要都是替換原本 Mmemcached 的算法和機制。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memcached Repcached]]></title>
    <link href="http://fubuki.github.io/blog/2014/10/30/memcached-repcached/"/>
    <updated>2014-10-30T21:43:51+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/10/30/memcached-repcached</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近在看 memecached 架構的時候發現了一個名叫 <a href="http://repcached.lab.klab.org/">repcached</a> 的東西，似乎日本那邊基於 memecached 開發出來的擴充版本，
每台 memcached 都是 master 並且能夠互相同步，這邊有關於 repcached 的<a href="https://www.nic.ad.jp/ja/materials/iw/2008/proceedings/F2/IW2008-F2-08.pdf">說明</a>，跟之前使用 twemproxy 和 lib-memcached 擴展的方式不一樣，
可以研究一下其中的機制。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memcache Tips]]></title>
    <link href="http://fubuki.github.io/blog/2014/06/28/memcache-diao-zheng/"/>
    <updated>2014-06-28T23:51:15+08:00</updated>
    <id>http://fubuki.github.io/blog/2014/06/28/memcache-diao-zheng</id>
    <content type="html"><![CDATA[<p>memcached tips</p>

<!-- more -->


<h2>啟動參數</h2>

<h2>運行狀況</h2>

<h2>memcached集群</h2>

<h2>預熱</h2>
]]></content>
  </entry>
  
</feed>
