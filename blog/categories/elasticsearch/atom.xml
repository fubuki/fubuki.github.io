<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Elasticsearch | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-11-06T00:53:34+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[改善全文搜尋的精準度]]></title>
    <link href="http://fubuki.github.io/blog/2015/11/05/hatenabutukumakuquan-wen-jian-suo-falsejing-du-gai-shan/"/>
    <updated>2015-11-05T23:29:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/11/05/hatenabutukumakuquan-wen-jian-suo-falsejing-du-gai-shan</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://speakerdeck.com/takuyaa/hatenabutukumakuquan-wen-jian-suo-falsejing-du-gai-shan">はてなブックマーク全文検索の精度改善</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Significant Terms 運用]]></title>
    <link href="http://fubuki.github.io/blog/2015/11/03/elasticsearch-significant/"/>
    <updated>2015-11-03T23:10:47+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/11/03/elasticsearch-significant</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://blog.comperiosearch.com/blog/2015/06/10/how-elasticsearch-calculates-significant-terms/">How Elasticsearch calculates significant terms</a></p>

<p><a href="http://www.slideshare.net/shunsukekozawa5/ss-44579618">はてなブックマークの新機能における自然言語処理の活用</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Watcher and Elastalert]]></title>
    <link href="http://fubuki.github.io/blog/2015/10/31/elasticsearch-watcher-and-elastalert/"/>
    <updated>2015-10-31T23:23:20+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/10/31/elasticsearch-watcher-and-elastalert</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="https://github.com/Yelp/elastalert">elastalert</a></li>
<li><a href="https://www.elastic.co/products/watcher">Elastica Watcher</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Recip Function]]></title>
    <link href="http://fubuki.github.io/blog/2015/10/28/elasticsearch-recip/"/>
    <updated>2015-10-28T23:44:59+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/10/28/elasticsearch-recip</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 elasticsearch 使用 script 實作 solr 的 recip function.</p>

<p>在 <code>config/script</code> 建立 <code>time_boost.groovy</code>，在 query time 引入 script_file 並且傳入現在時間。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch 載入順序]]></title>
    <link href="http://fubuki.github.io/blog/2015/10/24/elasticsearch-load-process/"/>
    <updated>2015-10-24T23:16:32+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/10/24/elasticsearch-load-process</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Bootstrap</h3>

<ol>
<li>org.elasticsearch.bootstrap</li>
<li>init</li>
<li>bootstrapCLIParser</li>
<li>bootstrap</li>
<li>nodbuilder</li>
<li>node</li>
<li>node start</li>
</ol>


<h3>Node</h3>

<ol>
<li>node load settings</li>
<li>node start</li>
<li>node load classes</li>
</ol>


<h3>node loaded classes</h3>

<pre><code>    injector.getInstance(MappingUpdatedAction.class).setClient(client);
    injector.getInstance(IndicesService.class).start();
    injector.getInstance(IndexingMemoryController.class).start();
    injector.getInstance(IndicesClusterStateService.class).start();
    injector.getInstance(IndicesTTLService.class).start();
    injector.getInstance(SnapshotsService.class).start();
    injector.getInstance(SnapshotShardsService.class).start();
    injector.getInstance(TransportService.class).start();
    injector.getInstance(ClusterService.class).start();
    injector.getInstance(RoutingService.class).start();
    injector.getInstance(SearchService.class).start();
    injector.getInstance(MonitorService.class).start();
    injector.getInstance(RestController.class).start();
</code></pre>
]]></content>
  </entry>
  
</feed>
