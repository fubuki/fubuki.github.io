<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categories: Frontend | Learning Blog]]></title>
  <link href="http://fubuki.github.io/blog/categories/frontend/atom.xml" rel="self"/>
  <link href="http://fubuki.github.io/"/>
  <updated>2015-10-12T23:41:07+08:00</updated>
  <id>http://fubuki.github.io/</id>
  <author>
    <name><![CDATA[Fubuki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Material Design on Web Page]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/21/material-design-lite-components-in-html/"/>
    <updated>2015-07-21T23:15:45+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/21/material-design-lite-components-in-html</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="http://www.getmdl.io">Material Design Lite</a></p>

<p><a href="http://www.infoq.com/news/2015/07/google-material-design-lite">Google Brings Material Design to CSS, HTML, and JavaScript</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[網站過度設計的徵兆]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/13/symptoms-of-over-designed-websites/"/>
    <updated>2015-07-13T22:20:54+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/13/symptoms-of-over-designed-websites</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://medium.com/active-collab-creative/symptoms-of-over-designed-websites-8cf1d0b9c4f2">Symptoms of Over-Designed Websites</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Browser Reflow Repaint]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/08/reflow-repaint/"/>
    <updated>2015-07-08T20:47:58+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/08/reflow-repaint</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>reflow</h3>

<p>重排整個瀏覽器的元素，例如當有元素的寬高改變的時候需要將整個 DOM 重新計算。</p>

<h3>repaint</h3>

<p>對單一元素重繪，例如更改字體大小或是顏色。</p>

<ol>
<li><a href="https://developers.google.com/speed/articles/reflow">Minimizing browser reflow</a></li>
<li><a href="http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/">Reflows &amp; Repaints: CSS Performance making your JavaScript slow?</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Html5 的 Video 處理 Rtsp 串流]]></title>
    <link href="http://fubuki.github.io/blog/2015/07/04/html5-video-rtsp/"/>
    <updated>2015-07-04T23:43:31+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/07/04/html5-video-rtsp</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/Live_streaming_web_audio_and_video">Live streaming web audio and video</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebAssembly 優化前端性能]]></title>
    <link href="http://fubuki.github.io/blog/2015/06/30/webassembly/"/>
    <updated>2015-06-30T23:08:29+08:00</updated>
    <id>http://fubuki.github.io/blog/2015/06/30/webassembly</id>
    <content type="html"><![CDATA[<!-- more -->


<p><a href="https://github.com/WebAssembly/design">WebAssembly</a> 裡面我比較熟悉的是 Mozilla 出的 asm.js ，限制使用 javascript 中耗效能的操作，並且規定好使用的型別使用這樣的方法
用來優化前端瀏覽器的 javascript 效能，而 <a href="https://github.com/WebAssembly/design">WebAssembly</a> 則是統一各家瀏覽器關於使用類似技術加速的規格。</p>
]]></content>
  </entry>
  
</feed>
